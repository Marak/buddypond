import fs from 'fs';
import path from 'path';
import fg from 'fast-glob';

import resolve from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import postcss from 'rollup-plugin-postcss';
import terser from '@rollup/plugin-terser';

const jsFiles = fg.sync('apps/based/card/cards/**/**-card.js');
const cssFiles = fg.sync('apps/based/card/cards/**/**-card.css');

const configEntries = [];

for (const file of jsFiles) {
  const distPath = file.replace(/^apps\/based\/card\//, 'dist/apps/based/card/');
  configEntries.push({
    input: file,
    output: {
      file: distPath,
      format: 'es',
      sourcemap: true,
    },
    plugins: ['resolve()', 'commonjs()', 'terser()'],
  });
}

for (const file of cssFiles) {
  const distPath = file.replace(/^apps\/based\/card\//, 'dist/apps/based/card/').replace(/\.css$/, '.css');
  const dummyEntry = file.replace(/\.css$/, '-style.js');
  const dummyEntryDir = path.dirname(dummyEntry);
  const cssFileBase = path.basename(file);

  fs.mkdirSync(dummyEntryDir, { recursive: true });

  if (!fs.existsSync(dummyEntry)) {
    fs.writeFileSync(dummyEntry, `import './${cssFileBase}';\n`);
  }

  configEntries.push({
    input: dummyEntry,
    output: {
      file: 'dist/dummy-card-css.js', // shared dummy output
      format: 'es',
      sourcemap: false,
    },
    plugins: [
      `postcss({ extract: path.resolve("${distPath}"), minimize: true, sourceMap: true })`,
    ],
  });
}

// Build final rollup.config.cards.js
const configText = `
// Auto-generated by gen-rollup-cards.js
import resolve from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import postcss from 'rollup-plugin-postcss';
import terser from '@rollup/plugin-terser';
import path from 'path';

export default [
  ${configEntries.map(entry => `{
    input: "${entry.input}",
    output: {
      file: "${entry.output.file}",
      format: "es",
      sourcemap: ${entry.output.sourcemap}
    },
    plugins: [
      ${entry.plugins.join(',\n      ')}
    ]
  }`).join(',\n\n  ')}
];
`;

fs.writeFileSync('rollup.config.cards.js', configText);
console.log('âœ… Generated rollup.config.cards.js with', configEntries.length, 'entries.');
