let t={"index.html":'\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Welcome to Your BuddyPad</title>\n    <link rel="stylesheet" href="./style.css">\n</head>\n<body>\n    <h1>Your BuddyPad</h1>\n    <div class="welcome-section">\n        <p>Welcome to your BuddyPad, a custom page hosted on the BuddyPond CDN!</p>\n        <p><strong>About BuddyPads:</strong></p>\n        <p>BuddyPads are custom routed pages on BuddyPond, allowing you to host any static content. Each BuddyPad is stored as a virtual directory in our CDN, accessible via the <strong>Buddy Files</strong> app in the "pads" folder.</p>\n        <p><strong>How to Customize Your BuddyPad:</strong></p>\n        <ul>\n            <li><strong>This Default Pad</strong>: This page includes <code>index.html</code> (structure), <code>style.css</code> (styling), and <code>index.js</code> (interactivity). These are linked using relative paths (e.g., <code>./style.css</code>, <code>./index.js</code>).</li>\n            <li><strong>Upload Any Files</strong>: Use the <strong>Buddy Files</strong> app (navigate to the "pads" folder) to upload any static files, such as HTML, CSS, JS, images, or entire projects (e.g., React, Vue, or static sites).</li>\n            <li><strong>Flexible Structure</strong>: You\'re not limited to these default files. Create multiple files, folders, or complex project structures. The BuddyPond CDN serves your content as configured.</li>\n            <li><strong>Accessing Your Pad</strong>: Your BuddyPad is hosted at a unique URL and served directly from our CDN for fast, reliable delivery.</li>\n        </ul>\n        <p><strong>Try It Out:</strong> Click the button below to toggle the color of the boxes, demonstrating how HTML, CSS, and JS work together.</p>\n        <button id="toggleButton">Toggle Box Colors</button>\n        <div class="box-container">\n            <div class="color-box"></div>\n            <div class="color-box"></div>\n            <div class="color-box"></div>\n        </div>\n    </div>\n    <script src="./index.js"><\/script>\n</body>\n</html>\n',"style.css":"\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    background-color: #f4f4f9;\n    color: #333;\n    margin: 0;\n    padding: 20px;\n    line-height: 1.6;\n}\nh1 {\n    color: #007bff;\n    text-align: center;\n}\n.welcome-section {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\nul {\n    padding-left: 20px;\n}\ncode {\n    background: #f0f0f0;\n    padding: 2px 4px;\n    border-radius: 4px;\n}\nbutton {\n    background-color: #007bff;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    display: block;\n    margin: 20px auto;\n}\nbutton:hover {\n    background-color: #0056b3;\n}\n.box-container {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n.color-box {\n    width: 100px;\n    height: 100px;\n    background-color: #28a745;\n    border-radius: 10px;\n    transition: background-color 0.3s ease;\n}\n.color-box.toggled {\n    background-color: #dc3545;\n}\n","index.js":"\nconsole.log('Welcome to your BuddyPad!');\n// Example: Using querySelectorAll to add interactivity\nconst boxes = document.querySelectorAll('.color-box');\nconst toggleButton = document.getElementById('toggleButton');\n\ntoggleButton.addEventListener('click', () => {\n    boxes.forEach(box => {\n        box.classList.toggle('toggled');\n    });\n});\n"};function e(t){return t.endsWith(".html")?"text/html":t.endsWith(".css")?"text/css":t.endsWith(".js")?"application/javascript":"text/plain"}class n{constructor(t,e={}){return this.bp=t,this.icon="/desktop/assets/images/icons/icon_pad_64.png",this}async help(){return"Pads are a fun way to create and share content with others.\n\n        You may create pads here and such...etc.\n\n        Enjoy!\n\n        "}async init(){this.bp.log("Hello from Pad");let t=await this.bp.load("/v5/apps/based/pad/pad.html");await this.bp.load("/v5/apps/based/pad/pad.css");let e=await this.bp.importModule("/v5/apps/based/pad/vendor/slugify.min.js",{},!1);return this.slugify=e.slugifyDefault,this.html=t,"loaded Pad"}async bindUI(){}async open(){async function t(){let t=await this.bp.apps.client.api.getPads();console.log("myPadsmyPads",t),this.renderPadRows(t.results)}this.padWindow||(this.padWindow=this.bp.apps.ui.windowManager.createWindow({id:"pad",title:"Pads",x:50,y:60,width:1e3,height:600,minWidth:200,minHeight:200,icon:this.icon,parent:$("#desktop")[0],content:this.html,resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,onClose:()=>{this.padWindow=null}}),this.tabs=new this.bp.apps.ui.Tabs(".tabs-container",this.padWindow.content),this.tabs.onTab((e=>{t.call(this)})));let e=await t.call(this);$(".tab-content:first",this.padWindow.content).show(),console.log(e),this.bp.me&&"Guest"!==this.bp.me?($(".loggedOut",this.padWindow.content).flexHide(),$(".loggedIn",this.padWindow.content).flexShow()):($(".loggedOut",this.padWindow.content).flexShow(),$(".loggedIn",this.padWindow.content).flexHide());let n="https://files.buddypond.com/"+this.bp.me,o=this.bp.config.host+"/"+this.bp.me;$(".userFilesHome",this.padWindow.content).html(o),$(".userFilesHome",this.padWindow.content).attr("href",o),$(".userFilesCDN",this.padWindow.content).html(n),$(".userFilesCDN",this.padWindow.content).attr("href",n);let a=this;const i=(t,e)=>{let n;return function(){const o=this,a=arguments;clearTimeout(n),n=setTimeout((()=>t.apply(o,a)),e)}};$(".padTitle",this.padWindow.content).on("input",i((function(t){$(this).removeClass("error"),console.log("Input changed:",t.target.value),function(t){let e=t.replace(/\s+/g,"-");e=e.replace(/-+/g,"_");let o=a.slugify(e,{lower:!0,replacement:"-",remove:/[^A-Za-z0-9_\-]/g,strict:!1});$(".padTitle",a.padWindow.content).val(o),$(".padUrl",a.padWindow.content).val(`${n}/pads/${o}`)}(t.target.value)}),250)),$(".padTitle",this.padWindow.content).on("input",(()=>{$(".status-indicator",this.padWindow.content).addClass("active").text("Generating URL...")})).on("input",i((()=>{$(".status-indicator",this.padWindow.content).removeClass("active").text(""),$(".padUrl",this.padWindow.content).val(`${o}/pads/${a.slugify($(".padTitle",a.padWindow.content).val())}`)}),250)),$(".bp-pad-form",this.padWindow.content).on("submit",(async t=>{if(t.preventDefault(),console.log("Save pad button clicked"),!$(".padTitle",this.padWindow.content).val())return void $(".padTitle",this.padWindow.content).addClass("error").attr("placeholder","Please enter a name...");$(".save-pad-button",this.padWindow.content).prop("disabled",!0),$(".save-pad-button",this.padWindow.content).addClass("disabled");let e,n,o=!1;try{n=await this.savePad(),o=!0}catch(t){console.error(t),e=t}if(o){console.log("the new pad is ",n);try{await this.buildPad(n.title)}catch(t){return void console.error("Error building pad",t)}$("#pads-upload-files",this.padWindow.content).show(),$("#pads-editor",this.padWindow.content).flexHide(),console.log("getting the pads again");let t=await this.bp.apps.client.api.getPads();console.log("got the pads again",t),this.renderPadRows(t),$(".bp-pad-container",this.padWindow.content).flexShow();let e=$("#padTitle").val();$(".openPadButton",this.padWindow.content).attr("data-context",`/pads/${e}/index.html`)}else console.log("Pad not saved",e),"Pad already exists"===e.message&&($(".padTitle",this.padWindow.content).addClass("error"),$(".status-indicator",this.padWindow.content).addClass("error").text("Pad already exists"));return $(".save-pad-button",this.padWindow.content).prop("disabled",!1),$(".save-pad-button",this.padWindow.content).removeClass("disabled"),!1})),$(".create-pad-button",this.padWindow.content).on("click",(()=>{this.tabs.navigateToTab("#pads-editor")}))}editPad(t){$(".tab-content",this.padWindow.content).flexHide(),$(".pad-code-editor",this.padWindow.content).flexShow()}}n.prototype.renderPadRows=function(t){if(t&&t.length>0){let e=$(".bp-pad-table",this.padWindow.content);e.empty(),t.forEach((t=>{let n=document.createElement("tr");n.setAttribute("data-title",t.title);let o=document.createElement("td");o.innerHTML=t.title,o.style.fontWeight="bold",o.style.minWidth="100px",n.appendChild(o),o=document.createElement("td");let a="/"+t.owner+"/pads/"+t.title,i=`<a href="${a}" target="_blank">${a}</a>`;o.innerHTML=i,n.appendChild(o),o=document.createElement("td"),o.style.textAlign="right";let d=document.createElement("button");d.classList.add("edit-button","ui-button"),d.innerHTML="Edit",d.onclick=()=>{},o.appendChild(d);let s=document.createElement("button");s.innerHTML="Delete",s.classList.add("delete-button","ui-button"),o.appendChild(s);let l=document.createElement("button");l.innerHTML="View",l.classList.add("view-button","ui-button"),o.appendChild(l),n.appendChild(o),n.addEventListener("click",(async e=>{let n;"submit"===e.target.type&&(n=e.target.innerHTML);let o=$(e.target).closest("tr"),a=o.attr("data-title"),i="/"+t.owner+"/pads/"+t.title,d="/"+t.owner+"/"+t.title,s="pads/"+t.title;if("View"===n&&window.open(i,"_blank"),"Delete"===n){if(confirm("Are you sure you want to delete "+a+"?")){$(".ui-button",o).prop("disabled",!0),$(".ui-button",o).addClass("disabled");try{await this.bp.apps.client.api.deletePad(d)}catch(t){console.log("error deleting pad",t)}try{await this.bp.apps.client.api.removeFile(s)}catch(t){console.log("error deleting pad file",t)}o.remove()}this.open()}"Edit"===n&&(this.bp.open("file-explorer",{context:"/"+s+"/index.html"}),this.bp.apps.ui.windowManager.focusWindow("file-explorer"))})),e.append(n)}))}else $(".bp-pad-container",this.padWindow.content).flexHide()},n.prototype.savePad=async function(){let t,e=$("#padTitle").val(),n="/"+this.bp.me+"/"+e,o=$("#padDescription").val();console.log("sending padKey",n);try{t=await this.bp.apps.client.api.getPad(n),console.log("got back the pad",t)}catch(t){console.error("error getting pad",t)}if(console.log("thePad",t),t)throw console.log("pad already exists, please choose a different name"),new Error("Pad already exists");{console.log("pad is available, creating pad");let t,n={title:e,description:o};try{t=await this.bp.apps.client.api.createPad(n),console.log("created pad",t)}catch(t){console.error("error creating pad",t)}return t}},n.prototype.buildPad=async function(n,o="default"){this.bp.me;for(const[o,a]of Object.entries(t)){console.log(`Creating ${o}`);const t=new Blob([a],{type:e(o)}),i=new File([t],o,{type:t.type,lastModified:new Date});i.filePath="pads/"+n+`/${o}`,console.log(`Uploading ${o}...`,i);try{this.bp.apps.client.api.uploadFile(i),console.log(`${o} uploaded successfully.`)}catch(t){console.error(`Error uploading ${o}: ${t.message}`)}}};export{n as default};
//# sourceMappingURL=pad.js.map
