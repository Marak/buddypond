class t{constructor(t,e={}){return this.bp=t,this.icon="desktop/assets/images/icons/icon_help_64.png",this}async help(){return"This is the help file for help you can't help but help\n        Choose any other app from the dropdown select to get more information about that app.\n        "}async init(){return console.log("help is: under construction"),this.html=await this.bp.load("/v5/apps/based/help/help.html"),await this.bp.load("/v5/apps/based/help/help.css"),"loaded help window"}async open(t={}){this.helpWindow||(this.helpWindow=this.bp.apps.ui.windowManager.createWindow({id:"help",title:"Help",icon:this.icon,x:250,y:75,width:400,height:400,minWidth:200,minHeight:200,parent:$("#desktop")[0],resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,onClose:()=>{this.helpWindow=null}})),"default"===t.context&&(t.context="help"),await this.render(this.helpWindow),this.eventBind(this.helpWindow)}}t.prototype.render=async function(t){if($(t.content).html(this.html),this.bp.apps.desktop&&this.bp.apps.desktop.apps){let e=$(".help-topics",t.content),o=Object.keys(this.bp.apps.desktop.apps);o.push("help"),o.sort(),o.forEach((t=>{let o=$("<option>").attr("value",t).text(t);e.append(o)}))}},t.prototype.eventBind=function(t){console.log("eventBind",t),this.bp.on("window::open","update-help-context",(async e=>{console.log("window::open",e);let o=e.id,p=e.type;if(this.bp.apps[o]&&this.bp.apps[o].help){let e=await this.bp.apps[o].help();$(".contextualHelpText",t.content).html(e),$(".help-context",t.content).html(o),"singleton"!==p&&$(".help-type",t.content).html(p),console.log("helpText",e)}else console.log("no help function found for app",o);$(".help-topics",t.content).val(o)})),$(".help-topics",t.content).on("change",(async e=>{let o=$(e.target).val();await this.bp.load(o);let p=this.bp.apps[o];console.log("app",p);let n=this.bp.apps[o].icon;if(console.log("iconSrc",n),n||(n=`desktop/assets/images/icons/icon_${o}_64.png`),n?$(".help-context",t.content).html(`<img src="${n}" class="icon" /> ${o}`):$(".help-context",t.content).html(o),$(".help-context",t.content).attr("data-app",o),this.bp.apps[o]&&this.bp.apps[o].help){let e=await this.bp.apps[o].help();$(".contextualHelpText",t.content).html(e),console.log("helpText",e)}else console.log("no help function found for app",o)})),$(".help-context",t.content).on("click",(async t=>{let e=$(t.target).closest(".help-context").attr("data-app");console.log(t.target),console.log("appId",e),this.bp.open(e)}))};export{t as default};
//# sourceMappingURL=help.js.map
