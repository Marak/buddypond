{"version":3,"file":"pad.js","sources":["../../../apps/based/pad/lib/defaultPadFiles.js","../../../apps/based/pad/lib/buildPad.js","../../../apps/based/pad/pad.js","../../../apps/based/pad/lib/renderPadRows.js","../../../apps/based/pad/lib/savePad.js"],"sourcesContent":["// Default index.html content for a new BuddyPad\nconst defaultIndexHtml = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Welcome to Your BuddyPad</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n</head>\n<body>\n    <h1>Your BuddyPad</h1>\n    <div class=\"welcome-section\">\n        <p>Welcome to your BuddyPad, a custom page hosted on the BuddyPond CDN!</p>\n        <p><strong>About BuddyPads:</strong></p>\n        <p>BuddyPads are custom routed pages on BuddyPond, allowing you to host any static content. Each BuddyPad is stored as a virtual directory in our CDN, accessible via the <strong>Buddy Files</strong> app in the \"pads\" folder.</p>\n        <p><strong>How to Customize Your BuddyPad:</strong></p>\n        <ul>\n            <li><strong>This Default Pad</strong>: This page includes <code>index.html</code> (structure), <code>style.css</code> (styling), and <code>index.js</code> (interactivity). These are linked using relative paths (e.g., <code>./style.css</code>, <code>./index.js</code>).</li>\n            <li><strong>Upload Any Files</strong>: Use the <strong>Buddy Files</strong> app (navigate to the \"pads\" folder) to upload any static files, such as HTML, CSS, JS, images, or entire projects (e.g., React, Vue, or static sites).</li>\n            <li><strong>Flexible Structure</strong>: You're not limited to these default files. Create multiple files, folders, or complex project structures. The BuddyPond CDN serves your content as configured.</li>\n            <li><strong>Accessing Your Pad</strong>: Your BuddyPad is hosted at a unique URL and served directly from our CDN for fast, reliable delivery.</li>\n        </ul>\n        <p><strong>Try It Out:</strong> Click the button below to toggle the color of the boxes, demonstrating how HTML, CSS, and JS work together.</p>\n        <button id=\"toggleButton\">Toggle Box Colors</button>\n        <div class=\"box-container\">\n            <div class=\"color-box\"></div>\n            <div class=\"color-box\"></div>\n            <div class=\"color-box\"></div>\n        </div>\n    </div>\n    <script src=\"./index.js\"></script>\n</body>\n</html>\n`;\n\n// Default style.css content for a new BuddyPad\nconst defaultStyleCss = `\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    background-color: #f4f4f9;\n    color: #333;\n    margin: 0;\n    padding: 20px;\n    line-height: 1.6;\n}\nh1 {\n    color: #007bff;\n    text-align: center;\n}\n.welcome-section {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\nul {\n    padding-left: 20px;\n}\ncode {\n    background: #f0f0f0;\n    padding: 2px 4px;\n    border-radius: 4px;\n}\nbutton {\n    background-color: #007bff;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    display: block;\n    margin: 20px auto;\n}\nbutton:hover {\n    background-color: #0056b3;\n}\n.box-container {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n.color-box {\n    width: 100px;\n    height: 100px;\n    background-color: #28a745;\n    border-radius: 10px;\n    transition: background-color 0.3s ease;\n}\n.color-box.toggled {\n    background-color: #dc3545;\n}\n`;\n\n// Default index.js content for a new BuddyPad\nconst defaultJs = `\nconsole.log('Welcome to your BuddyPad!');\n// Example: Using querySelectorAll to add interactivity\nconst boxes = document.querySelectorAll('.color-box');\nconst toggleButton = document.getElementById('toggleButton');\n\ntoggleButton.addEventListener('click', () => {\n    boxes.forEach(box => {\n        box.classList.toggle('toggled');\n    });\n});\n`;\n\nlet defaultFiles = {\n    'index.html': defaultIndexHtml,\n    'style.css': defaultStyleCss,\n    'index.js': defaultJs\n};\n\nexport default defaultFiles;","// similiar to generateDefaultProfile(), but is not intended to be called each logic\n// also will have separate code path for pad templates\nimport defaultPadFiles from './defaultPadFiles.js';\n\nexport default async function buildPad(padName, template = 'default') {\n    const basePath = \"https://files.buddypond.com/\" + this.bp.me;\n\n    for (const [fileName, fileContent] of Object.entries(defaultPadFiles)) {\n        console.log(`Creating ${fileName}`);\n        const blob = new Blob([fileContent], { type: getFileType(fileName) });\n        const file = new File([blob], fileName, {\n            type: blob.type,\n            lastModified: new Date()\n        });\n        file.filePath = 'pads/' +  padName + `/${fileName}`;\n        console.log(`Uploading ${fileName}...`, file);\n        try {\n            // don't wait for the default pad to generate each file\n            // just generate (3) at once and keep going\n            // TODO: we could track progress and show in UI, etc...\n            // await this.bp.apps.client.api.uploadFile(file);\n            this.bp.apps.client.api.uploadFile(file);\n            console.log(`${fileName} uploaded successfully.`);\n        } catch (uploadError) {\n            console.error(`Error uploading ${fileName}: ${uploadError.message}`);\n        }\n    }\n}\n\nfunction getFileType(fileName) {\n    if (fileName.endsWith('.html')) return 'text/html';\n    if (fileName.endsWith('.css')) return 'text/css';\n    if (fileName.endsWith('.js')) return 'application/javascript';\n    return 'text/plain';\n}","/* pad.js - Marak Squires 2024 - BuddyPond Pads */\n// TODO: clean-up this file\nimport renderPadRows from './lib/renderPadRows.js';\nimport savePad from './lib/savePad.js';\nimport buildPad from './lib/buildPad.js';\n\nexport default class Pad {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.icon = '/desktop/assets/images/icons/icon_pad_64.png';\n        return this;\n    }\n\n    // TODO: move to file\n    async help () {\n        return `Pads are a fun way to create and share content with others.\n\n        You may create pads here and such...etc.\n\n        Enjoy!\n\n        `\n    }\n\n    async init() {\n        this.bp.log('Hello from Pad');\n\n        let html = await this.bp.load('/v5/apps/based/pad/pad.html');\n        let css = await this.bp.load('/v5/apps/based/pad/pad.css');\n\n        let slugify = await this.bp.importModule('/v5/apps/based/pad/vendor/slugify.min.js', {}, false);\n        this.slugify = slugify.slugifyDefault;\n\n        this.html = html;\n\n        return 'loaded Pad';\n    }\n\n    // TODO: common function to bind UI\n    // this will *usually* be called inside an open() mutex with window\n    // if app is running headless mode than this is *expected* to be called after init()\n    // TODO: decouple all .bindUI() from .open()...\n    async bindUI () {\n\n    }\n\n    async open() {\n\n        if (!this.padWindow) {\n            this.padWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'pad',\n                title: 'Pads',\n                x: 50,\n                y: 60,\n                width: 1000,\n                height: 600,\n                minWidth: 200,\n                minHeight: 200,\n                icon: this.icon,\n                parent: $('#desktop')[0],\n                content: this.html,\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                    this.padWindow = null;\n                }\n            });\n\n            this.tabs = new this.bp.apps.ui.Tabs('.tabs-container', this.padWindow.content);\n\n            this.tabs.onTab((tabId) => {\n                // TODO: on tab if tabId = \"pads-home\", \n                // we do need to re-run getPads();....\n                if (tabId === 'pads-home') {\n                }\n                updateMyPads.call(this);\n\n            });\n\n        }\n\n        async function updateMyPads() {\n\n            // TODO: refactor this to separate function\n            // will show myPads by default\n            let myPads = await this.bp.apps.client.api.getPads();\n            console.log('myPadsmyPads', myPads)\n            this.renderPadRows(myPads.results);\n        }\n\n        let myPads = await updateMyPads.call(this);\n\n        // show the first .tab-content\n        //$('.tab-content').show();\n        $('.tab-content:first', this.padWindow.content).show();\n\n        console.log(myPads);\n        if (this.bp.me && this.bp.me !== 'Guest') {\n            $('.loggedOut', this.padWindow.content).flexHide();\n            $('.loggedIn', this.padWindow.content).flexShow();\n\n\n        } else {\n            $('.loggedOut', this.padWindow.content).flexShow();\n            $('.loggedIn', this.padWindow.content).flexHide();\n\n        }\n\n        let userFilesCDN = 'https://files.buddypond.com' + '/' + this.bp.me;\n        let userFilesHome = this.bp.config.host + '/' + this.bp.me;\n\n        $('.userFilesHome', this.padWindow.content).html(userFilesHome);\n        $('.userFilesHome', this.padWindow.content).attr('href', userFilesHome);\n\n        $('.userFilesCDN', this.padWindow.content).html(userFilesCDN);\n        $('.userFilesCDN', this.padWindow.content).attr('href', userFilesCDN);\n\n        let that = this;\n        // Function to update slug and URL preview\n        function updateSlug(value) {\n\n            // Remark, TODO: figure out why \"-\" was not working? Would be nice to have \"-\" in urls?\n            const slugOptions = {\n                lower: true,\n                replacement: '-',\n                remove: /[^A-Za-z0-9_\\-]/g,\n                strict: false\n            };\n\n            // First replace spaces with hyphens in your input\n            let preSlug = value.replace(/\\s+/g, '-');\n\n            // Replace any hypens with underscores\n            preSlug = preSlug.replace(/-+/g, '_');\n\n            let slug = that.slugify(preSlug, slugOptions);\n            //let slug = slugify(value);\n\n            $('.padTitle', that.padWindow.content).val(slug);\n            $('.padUrl', that.padWindow.content).val(`${userFilesCDN}/pads/${slug}`);\n        }\n\n        // Debounce function to limit how often a function can fire\n        const debounce = (func, delay) => {\n            let debounceTimer;\n            return function () {\n                const context = this;\n                const args = arguments;\n                clearTimeout(debounceTimer);\n                debounceTimer = setTimeout(() => func.apply(context, args), delay);\n            };\n        };\n\n        // Event listener for title input\n        $('.padTitle', this.padWindow.content).on('input', debounce(function (e) {\n            $(this).removeClass('error');\n\n            console.log('Input changed:', e.target.value);\n            updateSlug(e.target.value);\n        }, 250)); // Adjust debounce time as needed\n\n        // Optional: Display slugification in action (UX feedback)\n        $('.padTitle', this.padWindow.content).on('input', () => {\n            // Optionally, show some kind of indicator that slug is being generated\n            $('.status-indicator', this.padWindow.content).addClass('active').text('Generating URL...');\n        }).on('input', debounce(() => {\n            $('.status-indicator', this.padWindow.content).removeClass('active').text(''); // Clear indicator when done\n            // update url\n            $('.padUrl', this.padWindow.content).val(`${userFilesHome}/pads/${that.slugify($('.padTitle', that.padWindow.content).val())}`);\n        }, 250));\n\n\n        $('.bp-pad-form', this.padWindow.content).on('submit', async (e) => {\n            e.preventDefault();\n            console.log(`Save pad button clicked`);\n\n\n            // check that     let padTitle = $('#padTitle').val() is not empty\n            let padTitle = $('.padTitle', this.padWindow.content).val();\n            if (!padTitle) {\n                $('.padTitle', this.padWindow.content).addClass('error').attr('placeholder', 'Please enter a name...');\n                return;\n            }\n\n            // disable the save-pad-button to prevent double clicks\n            $('.save-pad-button', this.padWindow.content).prop('disabled', true);\n            // add disabled class to button\n            $('.save-pad-button', this.padWindow.content).addClass('disabled');\n\n            let padSaved = false;\n            let padError;\n            let newPad;\n\n            try {\n                newPad = await this.savePad();\n                padSaved = true;\n            } catch (err) {\n                console.error(err);\n                padError = err;\n            }\n\n            if (padSaved) {\n                console.log('the new pad is ', newPad)\n\n                try {\n                    await this.buildPad(newPad.title);\n\n                } catch (err) {\n                    // alert(`Error building pad: ${err.message}`);\n                    console.error('Error building pad', err);\n                    return;\n                }\n\n                // if not success, show the error\n\n                // now that the pad is created we will need to upload files\n                // show the #pads-upload-files div, which will move user to file-explorer\n                $('#pads-upload-files', this.padWindow.content).show();\n                $('#pads-editor', this.padWindow.content).flexHide();\n\n                // Reloads the My Pads list\n                console.log('getting the pads again');\n                let myPads = await this.bp.apps.client.api.getPads();\n                console.log('got the pads again', myPads);\n                this.renderPadRows(myPads);\n                // set the .bp-pad-container to visible\n                $('.bp-pad-container', this.padWindow.content).flexShow();\n\n                let padTitle = $('#padTitle').val();\n\n                $('.openPadButton', this.padWindow.content).attr('data-context', `/pads/${padTitle}/index.html`);\n                //alert('set')\n\n\n            } else {\n                console.log('Pad not saved', padError);\n                if (padError.message === 'Pad already exists') {\n                    // highlight the title input\n                    $('.padTitle', this.padWindow.content).addClass('error');\n                    $('.status-indicator', this.padWindow.content).addClass('error').text('Pad already exists');\n                }\n            }\n\n\n\n            // re-enable the save-pad-button to prevent double clicks\n            $('.save-pad-button', this.padWindow.content).prop('disabled', false);\n            // remove disabled class to button\n            $('.save-pad-button', this.padWindow.content).removeClass('disabled');\n\n\n            return false;\n\n        });\n\n        $('.create-pad-button', this.padWindow.content).on('click', () => {\n            this.tabs.navigateToTab('#pads-editor');\n        });\n\n    }\n\n    editPad(pad) {\n        $('.tab-content', this.padWindow.content).flexHide();\n        $('.pad-code-editor', this.padWindow.content).flexShow();\n    }\n\n}\n\nPad.prototype.renderPadRows = renderPadRows;\nPad.prototype.savePad = savePad;\nPad.prototype.buildPad = buildPad;","export default function renderPadRows(myPads) {\n    if (myPads && myPads.length > 0) {\n        // .bp-pad-table , add the tr rows\n        let table = $('.bp-pad-table', this.padWindow.content);\n\n        // clear the table\n        table.empty();\n\n        myPads.forEach((pad) => {\n            // console.log('pad', pad);\n            let tr = document.createElement('tr');\n\n            // set data-title attribute on tr\n            tr.setAttribute('data-title', pad.title);\n\n            // title\n            let td = document.createElement('td');\n            td.innerHTML = pad.title;\n            td.style.fontWeight = 'bold';\n            td.style.minWidth = '100px';\n            tr.appendChild(td);\n\n            // description\n            td = document.createElement('td');\n\n            let padUrl = '/' + pad.owner + '/pads/' + pad.title;\n            let padLink = `<a href=\"${padUrl}\" target=\"_blank\">${padUrl}</a>`;\n            td.innerHTML = padLink;\n\n            tr.appendChild(td);\n\n            // \n            /* Pad visibility is disabled until we implement role logic to bp-files-proxy\n            // The previous API utilized database for fetching pad content, now pad content is proxied through bp-files-proxy to CDN\n            td = document.createElement('td');\n            // create a drop-down select\n            let select = document.createElement('select');\n            select.name = 'visibility';\n            // add options\n            let options = ['Public', 'Private', 'Unlisted'];\n            options.forEach((option) => {\n                let optionElement = document.createElement('option');\n                optionElement.value = option;\n                optionElement.innerHTML = option;\n                console.log(\"comparing\", option, pad.visibility);\n                if (option.toLowerCase() === pad.visibility) {\n                    optionElement.selected = true;\n                }\n                select.appendChild(optionElement);\n            });\n            select.onchange = async (e) => {\n                console.log('visibility changed', e.target.value, pad);\n                pad.visibility = e.target.value.toLowerCase();\n                let profilePadKey = '/' + this.bp.me + '/' + pad.title;\n\n                await this.bp.apps.client.api.updatePad(profilePadKey, pad);\n            };\n            td.appendChild(select);\n            tr.appendChild(td);\n            */\n\n\n            // actions ( edit, delete, view )\n            td = document.createElement('td');\n            td.style.textAlign = 'right';\n            let editButton = document.createElement('button');\n            editButton.classList.add('edit-button', 'ui-button');\n            editButton.innerHTML = 'Edit';\n            editButton.onclick = () => {\n                // console.log('edit', pad);\n            }\n            td.appendChild(editButton);\n\n            let deleteButton = document.createElement('button');\n            deleteButton.innerHTML = 'Delete';\n            deleteButton.classList.add('delete-button', 'ui-button');\n\n            td.appendChild(deleteButton);\n\n            let viewButton = document.createElement('button');\n            viewButton.innerHTML = 'View';\n            viewButton.classList.add('view-button', 'ui-button');\n\n            td.appendChild(viewButton);\n            tr.appendChild(td);\n\n            // TODO: move event handler to separate function / file\n            tr.addEventListener('click', async (e) => {\n                let action;\n                if (e.target.type === 'submit') {\n                    action = e.target.innerHTML;\n                }\n                // alert('clicked ' + action);\n\n                let closestTr = $(e.target).closest('tr');\n                let title = closestTr.attr('data-title');\n                let padUrl = '/' + pad.owner + '/pads/' + pad.title;\n                let padKey = '/' + pad.owner + '/' + pad.title;\n                let relativePath = 'pads/' + pad.title;\n\n                if (action === 'View') {\n                    // console.log('open pad in new window', pad, title);\n                    // open a new window browser window\n                    // TODO: open a new browser window with options ( show url bar, but notinng else )\n                    let win = window.open(padUrl, '_blank');\n                }\n\n                if (action === 'Delete') {\n                    // confirm delete then call api\n\n                    let yesOrNo = confirm('Are you sure you want to delete ' + title + '?');\n\n                    if (yesOrNo) {\n                        // console.log('delete pad', pad, title, padKey);\n\n                        // disable all buttons\n                        $('.ui-button', closestTr).prop('disabled', true);\n                        // add disabled class to button\n                        $('.ui-button', closestTr).addClass('disabled');\n                        try {\n                            await this.bp.apps.client.api.deletePad(padKey);\n\n                        } catch (err) {\n                            console.log('error deleting pad', err);\n                        }\n\n                        try {\n\n                            await this.bp.apps.client.api.removeFile(relativePath);\n                        } catch (err) {\n                            console.log('error deleting pad file', err);\n\n                        }\n\n                        // remove the row from the table\n                        closestTr.remove();\n\n                    }\n\n                    // we need to re-render the table\n                    this.open();\n\n                }\n\n                if (action === 'Edit') {\n                    // open edit window with the pad data\n                    // console.log('edit pad', pad, title);\n                    this.bp.open('file-explorer', { context: '/' + relativePath + '/index.html' });\n                    // set focus\n                    this.bp.apps.ui.windowManager.focusWindow('file-explorer');\n                }\n\n\n            });\n\n            table.append(tr);\n        });\n\n\n\n    } else {\n        // no pads yet\n        $('.bp-pad-container', this.padWindow.content).flexHide();\n    }\n};","export default async function savePad() {\n    // at this point we need to create the Pad in the API\n\n    // check to see if pad with this name already exists\n    let padTitle = $('#padTitle').val();\n    let padKey = '/' + this.bp.me + '/' + padTitle;\n    let padDescription = $('#padDescription').val();    \n    // alert(padName)\n    let thePad;\n    console.log('sending padKey', padKey)\n    try {\n        thePad = await this.bp.apps.client.api.getPad(padKey);\n        console.log(\"got back the pad\", thePad);\n    } catch (err) {\n        console.error('error getting pad', err);\n    }\n    console.log('thePad', thePad);\n    if (!thePad) {\n        console.log('pad is available, creating pad');\n        let padData = {\n            title: padTitle,\n            description: padDescription\n        };\n        let createdPad;\n        try {\n            createdPad = await this.bp.apps.client.api.createPad(padData);\n            console.log('created pad', createdPad);\n        } catch (err) {\n            console.error('error creating pad', err);\n        }\n        return createdPad;\n    } else {\n        console.log('pad already exists, please choose a different name');\n        throw new Error('Pad already exists');\n        return;\n    }\n\n}"],"names":["defaultFiles","getFileType","fileName","endsWith","Pad","constructor","bp","options","this","icon","help","init","log","html","load","slugify","importModule","slugifyDefault","bindUI","open","async","updateMyPads","myPads","apps","client","api","getPads","console","renderPadRows","results","padWindow","ui","windowManager","createWindow","id","title","x","y","width","height","minWidth","minHeight","parent","$","content","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","tabs","Tabs","onTab","tabId","call","show","me","flexHide","flexShow","userFilesCDN","userFilesHome","config","host","attr","that","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","on","e","removeClass","target","value","preSlug","replace","slug","lower","replacement","remove","strict","val","updateSlug","addClass","text","preventDefault","prop","padError","newPad","padSaved","savePad","err","error","buildPad","padTitle","message","navigateToTab","editPad","pad","prototype","length","table","empty","forEach","tr","document","createElement","setAttribute","td","innerHTML","style","fontWeight","appendChild","padUrl","owner","padLink","textAlign","editButton","classList","add","onclick","deleteButton","viewButton","addEventListener","action","type","closestTr","closest","padKey","relativePath","window","confirm","deletePad","removeFile","focusWindow","append","thePad","padDescription","getPad","Error","createdPad","padData","description","createPad","padName","template","fileContent","Object","entries","defaultPadFiles","blob","Blob","file","File","lastModified","Date","filePath","uploadFile","uploadError"],"mappings":"AA8GA,IAAIA,EAAe,CACf,aA9GqB,4nEA+GrB,YA3EoB,imCA4EpB,WAhBc,uWCpElB,SAASC,EAAYC,GACjB,OAAIA,EAASC,SAAS,SAAiB,YACnCD,EAASC,SAAS,QAAgB,WAClCD,EAASC,SAAS,OAAe,yBAC9B,YACX,CC5Be,MAAMC,EACjB,WAAAC,CAAYC,EAAIC,EAAU,IAGtB,OAFAC,KAAKF,GAAKA,EACVE,KAAKC,KAAO,+CACLD,IACf,CAGI,UAAME,GACF,MAAO,+IAOf,CAEI,UAAMC,GACFH,KAAKF,GAAGM,IAAI,kBAEZ,IAAIC,QAAaL,KAAKF,GAAGQ,KAAK,qCACdN,KAAKF,GAAGQ,KAAK,8BAE7B,IAAIC,QAAgBP,KAAKF,GAAGU,aAAa,2CAA4C,CAAE,GAAE,GAKzF,OAJAR,KAAKO,QAAUA,EAAQE,eAEvBT,KAAKK,KAAOA,EAEL,YACf,CAMI,YAAMK,GAEV,CAEI,UAAMC,GAwCFC,eAAeC,IAIX,IAAIC,QAAed,KAAKF,GAAGiB,KAAKC,OAAOC,IAAIC,UAC3CC,QAAQf,IAAI,eAAgBU,GAC5Bd,KAAKoB,cAAcN,EAAOO,QACtC,CA7CarB,KAAKsB,YACNtB,KAAKsB,UAAYtB,KAAKF,GAAGiB,KAAKQ,GAAGC,cAAcC,aAAa,CACxDC,GAAI,MACJC,MAAO,OACPC,EAAG,GACHC,EAAG,GACHC,MAAO,IACPC,OAAQ,IACRC,SAAU,IACVC,UAAW,IACXhC,KAAMD,KAAKC,KACXiC,OAAQC,EAAE,YAAY,GACtBC,QAASpC,KAAKK,KACdgC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,WAAW,EACXC,QAAS,KACL5C,KAAKsB,UAAY,QAIzBtB,KAAK6C,KAAO,IAAI7C,KAAKF,GAAGiB,KAAKQ,GAAGuB,KAAK,kBAAmB9C,KAAKsB,UAAUc,SAEvEpC,KAAK6C,KAAKE,OAAOC,IAKbnC,EAAaoC,KAAKjD,UAe1B,IAAIc,QAAeD,EAAaoC,KAAKjD,MAIrCmC,EAAE,qBAAsBnC,KAAKsB,UAAUc,SAASc,OAEhD/B,QAAQf,IAAIU,GACRd,KAAKF,GAAGqD,IAAqB,UAAfnD,KAAKF,GAAGqD,IACtBhB,EAAE,aAAcnC,KAAKsB,UAAUc,SAASgB,WACxCjB,EAAE,YAAanC,KAAKsB,UAAUc,SAASiB,aAIvClB,EAAE,aAAcnC,KAAKsB,UAAUc,SAASiB,WACxClB,EAAE,YAAanC,KAAKsB,UAAUc,SAASgB,YAI3C,IAAIE,EAAe,+BAAsCtD,KAAKF,GAAGqD,GAC7DI,EAAgBvD,KAAKF,GAAG0D,OAAOC,KAAO,IAAMzD,KAAKF,GAAGqD,GAExDhB,EAAE,iBAAkBnC,KAAKsB,UAAUc,SAAS/B,KAAKkD,GACjDpB,EAAE,iBAAkBnC,KAAKsB,UAAUc,SAASsB,KAAK,OAAQH,GAEzDpB,EAAE,gBAAiBnC,KAAKsB,UAAUc,SAAS/B,KAAKiD,GAChDnB,EAAE,gBAAiBnC,KAAKsB,UAAUc,SAASsB,KAAK,OAAQJ,GAExD,IAAIK,EAAO3D,KA0BX,MAAM4D,EAAW,CAACC,EAAMC,KACpB,IAAIC,EACJ,OAAO,WACH,MAAMC,EAAUhE,KACViE,EAAOC,UACbC,aAAaJ,GACbA,EAAgBK,YAAW,IAAMP,EAAKQ,MAAML,EAASC,IAAOH,EAC/D,GAIL3B,EAAE,YAAanC,KAAKsB,UAAUc,SAASkC,GAAG,QAASV,GAAS,SAAUW,GAClEpC,EAAEnC,MAAMwE,YAAY,SAEpBrD,QAAQf,IAAI,iBAAkBmE,EAAEE,OAAOC,OAtC3C,SAAoBA,GAWhB,IAAIC,EAAUD,EAAME,QAAQ,OAAQ,KAGpCD,EAAUA,EAAQC,QAAQ,MAAO,KAEjC,IAAIC,EAAOlB,EAAKpD,QAAQoE,EAbJ,CAChBG,OAAO,EACPC,YAAa,IACbC,OAAQ,mBACRC,QAAQ,IAYZ9C,EAAE,YAAawB,EAAKrC,UAAUc,SAAS8C,IAAIL,GAC3C1C,EAAE,UAAWwB,EAAKrC,UAAUc,SAAS8C,IAAI,GAAG5B,UAAqBuB,IAC7E,CAkBYM,CAAWZ,EAAEE,OAAOC,MAChC,GAAW,MAGHvC,EAAE,YAAanC,KAAKsB,UAAUc,SAASkC,GAAG,SAAS,KAE/CnC,EAAE,oBAAqBnC,KAAKsB,UAAUc,SAASgD,SAAS,UAAUC,KAAK,wBACxEf,GAAG,QAASV,GAAS,KACpBzB,EAAE,oBAAqBnC,KAAKsB,UAAUc,SAASoC,YAAY,UAAUa,KAAK,IAE1ElD,EAAE,UAAWnC,KAAKsB,UAAUc,SAAS8C,IAAI,GAAG3B,UAAsBI,EAAKpD,QAAQ4B,EAAE,YAAawB,EAAKrC,UAAUc,SAAS8C,YACvH,MAGH/C,EAAE,eAAgBnC,KAAKsB,UAAUc,SAASkC,GAAG,UAAU1D,MAAO2D,IAO1D,GANAA,EAAEe,iBACFnE,QAAQf,IAAI,4BAIG+B,EAAE,YAAanC,KAAKsB,UAAUc,SAAS8C,MAGlD,YADA/C,EAAE,YAAanC,KAAKsB,UAAUc,SAASgD,SAAS,SAAS1B,KAAK,cAAe,0BAKjFvB,EAAE,mBAAoBnC,KAAKsB,UAAUc,SAASmD,KAAK,YAAY,GAE/DpD,EAAE,mBAAoBnC,KAAKsB,UAAUc,SAASgD,SAAS,YAEvD,IACII,EACAC,EAFAC,GAAW,EAIf,IACID,QAAezF,KAAK2F,UACpBD,GAAW,CACd,CAAC,MAAOE,GACLzE,QAAQ0E,MAAMD,GACdJ,EAAWI,CAC3B,CAEY,GAAIF,EAAU,CACVvE,QAAQf,IAAI,kBAAmBqF,GAE/B,UACUzF,KAAK8F,SAASL,EAAO9D,MAE9B,CAAC,MAAOiE,GAGL,YADAzE,QAAQ0E,MAAM,qBAAsBD,EAExD,CAMgBzD,EAAE,qBAAsBnC,KAAKsB,UAAUc,SAASc,OAChDf,EAAE,eAAgBnC,KAAKsB,UAAUc,SAASgB,WAG1CjC,QAAQf,IAAI,0BACZ,IAAIU,QAAed,KAAKF,GAAGiB,KAAKC,OAAOC,IAAIC,UAC3CC,QAAQf,IAAI,qBAAsBU,GAClCd,KAAKoB,cAAcN,GAEnBqB,EAAE,oBAAqBnC,KAAKsB,UAAUc,SAASiB,WAE/C,IAAI0C,EAAW5D,EAAE,aAAa+C,MAE9B/C,EAAE,iBAAkBnC,KAAKsB,UAAUc,SAASsB,KAAK,eAAgB,SAASqC,eAI1F,MACgB5E,QAAQf,IAAI,gBAAiBoF,GACJ,uBAArBA,EAASQ,UAET7D,EAAE,YAAanC,KAAKsB,UAAUc,SAASgD,SAAS,SAChDjD,EAAE,oBAAqBnC,KAAKsB,UAAUc,SAASgD,SAAS,SAASC,KAAK,uBAY9E,OALAlD,EAAE,mBAAoBnC,KAAKsB,UAAUc,SAASmD,KAAK,YAAY,GAE/DpD,EAAE,mBAAoBnC,KAAKsB,UAAUc,SAASoC,YAAY,aAGnD,KAIXrC,EAAE,qBAAsBnC,KAAKsB,UAAUc,SAASkC,GAAG,SAAS,KACxDtE,KAAK6C,KAAKoD,cAAc,kBAGpC,CAEI,OAAAC,CAAQC,GACJhE,EAAE,eAAgBnC,KAAKsB,UAAUc,SAASgB,WAC1CjB,EAAE,mBAAoBnC,KAAKsB,UAAUc,SAASiB,UACtD,EAIAzD,EAAIwG,UAAUhF,cCjRC,SAAuBN,GAClC,GAAIA,GAAUA,EAAOuF,OAAS,EAAG,CAE7B,IAAIC,EAAQnE,EAAE,gBAAiBnC,KAAKsB,UAAUc,SAG9CkE,EAAMC,QAENzF,EAAO0F,SAASL,IAEZ,IAAIM,EAAKC,SAASC,cAAc,MAGhCF,EAAGG,aAAa,aAAcT,EAAIxE,OAGlC,IAAIkF,EAAKH,SAASC,cAAc,MAChCE,EAAGC,UAAYX,EAAIxE,MACnBkF,EAAGE,MAAMC,WAAa,OACtBH,EAAGE,MAAM/E,SAAW,QACpByE,EAAGQ,YAAYJ,GAGfA,EAAKH,SAASC,cAAc,MAE5B,IAAIO,EAAS,IAAMf,EAAIgB,MAAQ,SAAWhB,EAAIxE,MAC1CyF,EAAU,YAAYF,sBAA2BA,QACrDL,EAAGC,UAAYM,EAEfX,EAAGQ,YAAYJ,GAkCfA,EAAKH,SAASC,cAAc,MAC5BE,EAAGE,MAAMM,UAAY,QACrB,IAAIC,EAAaZ,SAASC,cAAc,UACxCW,EAAWC,UAAUC,IAAI,cAAe,aACxCF,EAAWR,UAAY,OACvBQ,EAAWG,QAAU,OAGrBZ,EAAGI,YAAYK,GAEf,IAAII,EAAehB,SAASC,cAAc,UAC1Ce,EAAaZ,UAAY,SACzBY,EAAaH,UAAUC,IAAI,gBAAiB,aAE5CX,EAAGI,YAAYS,GAEf,IAAIC,EAAajB,SAASC,cAAc,UACxCgB,EAAWb,UAAY,OACvBa,EAAWJ,UAAUC,IAAI,cAAe,aAExCX,EAAGI,YAAYU,GACflB,EAAGQ,YAAYJ,GAGfJ,EAAGmB,iBAAiB,SAAShH,MAAO2D,IAChC,IAAIsD,EACkB,WAAlBtD,EAAEE,OAAOqD,OACTD,EAAStD,EAAEE,OAAOqC,WAItB,IAAIiB,EAAY5F,EAAEoC,EAAEE,QAAQuD,QAAQ,MAChCrG,EAAQoG,EAAUrE,KAAK,cACvBwD,EAAS,IAAMf,EAAIgB,MAAQ,SAAWhB,EAAIxE,MAC1CsG,EAAS,IAAM9B,EAAIgB,MAAQ,IAAMhB,EAAIxE,MACrCuG,EAAe,QAAU/B,EAAIxE,MASjC,GAPe,SAAXkG,GAIUM,OAAOxH,KAAKuG,EAAQ,UAGnB,WAAXW,EAAqB,CAKrB,GAFcO,QAAQ,mCAAqCzG,EAAQ,KAEtD,CAITQ,EAAE,aAAc4F,GAAWxC,KAAK,YAAY,GAE5CpD,EAAE,aAAc4F,GAAW3C,SAAS,YACpC,UACUpF,KAAKF,GAAGiB,KAAKC,OAAOC,IAAIoH,UAAUJ,EAE3C,CAAC,MAAOrC,GACLzE,QAAQf,IAAI,qBAAsBwF,EAC9D,CAEwB,UAEU5F,KAAKF,GAAGiB,KAAKC,OAAOC,IAAIqH,WAAWJ,EAC5C,CAAC,MAAOtC,GACLzE,QAAQf,IAAI,0BAA2BwF,EAEnE,CAGwBmC,EAAU/C,QAElC,CAGoBhF,KAAKW,MAEzB,CAE+B,SAAXkH,IAGA7H,KAAKF,GAAGa,KAAK,gBAAiB,CAAEqD,QAAS,IAAMkE,EAAe,gBAE9DlI,KAAKF,GAAGiB,KAAKQ,GAAGC,cAAc+G,YAAY,qBAMlDjC,EAAMkC,OAAO/B,KAKzB,MAEQtE,EAAE,oBAAqBnC,KAAKsB,UAAUc,SAASgB,UAEvD,ED8GAxD,EAAIwG,UAAUT,QElRC/E,iBAIX,IAII6H,EAJA1C,EAAW5D,EAAE,aAAa+C,MAC1B+C,EAAS,IAAMjI,KAAKF,GAAGqD,GAAK,IAAM4C,EAClC2C,EAAiBvG,EAAE,mBAAmB+C,MAG1C/D,QAAQf,IAAI,iBAAkB6H,GAC9B,IACIQ,QAAezI,KAAKF,GAAGiB,KAAKC,OAAOC,IAAI0H,OAAOV,GAC9C9G,QAAQf,IAAI,mBAAoBqI,EACnC,CAAC,MAAO7C,GACLzE,QAAQ0E,MAAM,oBAAqBD,EAC3C,CAEI,GADAzE,QAAQf,IAAI,SAAUqI,GACjBA,EAgBD,MADAtH,QAAQf,IAAI,sDACN,IAAIwI,MAAM,sBAhBP,CACTzH,QAAQf,IAAI,kCACZ,IAIIyI,EAJAC,EAAU,CACVnH,MAAOoE,EACPgD,YAAaL,GAGjB,IACIG,QAAmB7I,KAAKF,GAAGiB,KAAKC,OAAOC,IAAI+H,UAAUF,GACrD3H,QAAQf,IAAI,cAAeyI,EAC9B,CAAC,MAAOjD,GACLzE,QAAQ0E,MAAM,qBAAsBD,EAChD,CACQ,OAAOiD,CACf,CAMA,EF8OAjJ,EAAIwG,UAAUN,SD/QClF,eAAwBqI,EAASC,EAAW,WACLlJ,KAAKF,GAAGqD,GAE1D,IAAK,MAAOzD,EAAUyJ,KAAgBC,OAAOC,QAAQC,GAAkB,CACnEnI,QAAQf,IAAI,YAAYV,KACxB,MAAM6J,EAAO,IAAIC,KAAK,CAACL,GAAc,CAAErB,KAAMrI,EAAYC,KACnD+J,EAAO,IAAIC,KAAK,CAACH,GAAO7J,EAAU,CACpCoI,KAAMyB,EAAKzB,KACX6B,aAAc,IAAIC,OAEtBH,EAAKI,SAAW,QAAWZ,EAAU,IAAIvJ,IACzCyB,QAAQf,IAAI,aAAaV,OAAe+J,GACxC,IAKIzJ,KAAKF,GAAGiB,KAAKC,OAAOC,IAAI6I,WAAWL,GACnCtI,QAAQf,IAAI,GAAGV,2BAClB,CAAC,MAAOqK,GACL5I,QAAQ0E,MAAM,mBAAmBnG,MAAaqK,EAAY/D,UACtE,CACA,CACA"}