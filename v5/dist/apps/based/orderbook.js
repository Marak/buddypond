const e={};class r{constructor(r){this.resourceName=r,e[this.resourceName]={},this.memoryStore=e}create(r,t,o){Object.keys(o).forEach((r=>{if(o[r].required&&(void 0===t[r]||null===t[r]))throw new Error(`${r} is required`);if(o[r].unique){if(Object.values(e[this.resourceName]).some((e=>e[r]===t[r])))throw new Error(`${r} must be unique`)}if(o[r].type&&typeof t[r]!==o[r].type)throw new Error(`${r} must be of type ${o[r].type} value is ${t[r]}`)}));const s=Math.random().toString(36).substring(2,10),i={id:s,owner:r};return Object.keys(o).forEach((e=>{i[e]=t[e]||null})),e[this.resourceName][s]=i,i}get(r,t){const o=e[this.resourceName][t];return o&&o.owner===r?o:null}update(r,t,o,s){const i=e[this.resourceName][t];if(!i||i.owner!==r)throw new Error(`${this.resourceName} not found or unauthorized`);return Object.keys(s).forEach((e=>{if(s[e].required&&(void 0===o[e]||null===o[e]))throw new Error(`${e} is required`)})),Object.keys(s).forEach((e=>{void 0!==o[e]&&(i[e]=o[e])})),i}remove(r,t){const o=e[this.resourceName][t];if(!o||o.owner!==r)throw new Error(`${this.resourceName} not found or unauthorized`);return delete e[this.resourceName][t],{success:!0}}search(r,t){return Object.values(e[this.resourceName]).filter((e=>e.owner===r&&Object.keys(t).every((r=>e[r]===t[r]))))}list(r){return Object.values(e[this.resourceName]).filter((e=>e.owner===r))}all(){return Object.values(e[this.resourceName])}}class t{constructor(e,r={}){this.resourceName=e,this.apiEndpoint=r.apiEndpoint,r.bp&&(this.bp=r.bp)}async apiRequest(e,r,t=null,o=null){const s={method:e,headers:{"Content-Type":"application/json"}};t&&(s.body=JSON.stringify(t)),this.bp.qtokenid&&(s.headers.Authorization=`Bearer ${this.bp.qtokenid}`),s.headers["X-Me"]=this.bp.me;let i=`${this.apiEndpoint}/${r}`;if(o){i+=`?${new URLSearchParams(o).toString()}`}const n=await fetch(i,s);if(!n.ok){console.log("API request failed:",n);try{let e=await n.json();throw console.log("API request failed:",e),new Error(`${e.error}`)}catch(e){throw console.log("error",e),new Error(e)}throw new Error(`API request failed: ${json.error}`)}return n.json()}async create(e,r){return console.log("calling create",`${this.resourceName}`,r),this.apiRequest("POST",`${this.resourceName}`,r)}async get(e,r){return this.apiRequest("GET",`${this.resourceName}/${e}/${r}`)}async update(e,r){return console.log(`calling update ${this.resourceName}/${e}`,r),this.apiRequest("PUT",`${this.resourceName}/${e}`,r)}async remove(e){return this.apiRequest("DELETE",`${this.resourceName}/${e}`)}async list(){return console.log("calling list",`${this.resourceName}`),this.apiRequest("GET",`${this.resourceName}`)}async all(){return this.apiRequest("GET",this.resourceName)}async search(e,r,t={}){return this.apiRequest("POST",`${this.resourceName}/search`,r,t)}}class o{constructor(e){this.resourceName=e,this.dbName="BuddyPondResourceDB",this.version=1,this.db=null,this.init()}async init(){return new Promise(((e,r)=>{const t=indexedDB.open(this.dbName,this.version);t.onupgradeneeded=e=>{let r=e.target.result;r.objectStoreNames.contains(this.resourceName)||r.createObjectStore(this.resourceName,{keyPath:"id"})},t.onsuccess=r=>{this.db=r.target.result,e()},t.onerror=e=>{r(`IndexedDB Error: ${e.target.errorCode}`)}}))}async _withStore(e,r){return this.db||await this.init(),new Promise(((t,o)=>{const s=this.db.transaction(this.resourceName,e).objectStore(this.resourceName),i=r(s);i.onsuccess=()=>t(i.result),i.onerror=()=>o(i.error)}))}async create(e,r,t){const o={id:Math.random().toString(36).substring(2,10),owner:e};return Object.keys(t).forEach((e=>{o[e]=r[e]||null})),await this._withStore("readwrite",(e=>e.add(o))),o}async get(e,r){const t=await this._withStore("readonly",(e=>e.get(r)));return t&&t.owner===e?t:null}async update(e,r,t,o){const s=await this.get(e,r);if(!s)throw new Error(`${this.resourceName} not found or unauthorized`);return Object.keys(o).forEach((e=>{void 0!==t[e]&&(s[e]=t[e])})),await this._withStore("readwrite",(e=>e.put(s))),s}async remove(e,r){if(!await this.get(e,r))throw new Error(`${this.resourceName} not found or unauthorized`);return await this._withStore("readwrite",(e=>e.delete(r))),{success:!0}}async list(e){return new Promise(((r,t)=>{this._withStore("readonly",(o=>{const s=o.getAll();s.onsuccess=()=>{r(s.result.filter((r=>r.owner===e)))},s.onerror=()=>t(s.error)}))}))}async all(){return new Promise(((e,r)=>{this._withStore("readonly",(t=>{const o=t.getAll();o.onsuccess=()=>e(o.result),o.onerror=()=>r(o.error)}))}))}}const s={};class i{constructor(e,r){if(this.name=e,this.schema=r.schema||{},this.providerType=r.provider||"memory",0===Object.keys(this.schema).length)throw new Error(`Schema definition is required for resource: ${e}`);s[this.name]=this.schema,this.provider=this._createProvider(this.providerType,r),this.provider.bp=r.bp}_createProvider(e,s){switch(e){case"rest":return new t(this.name,s);case"indexeddb":return new o(this.name,s);default:return new r(this.name)}}create(e,r){return this.provider.create(e,r,this.schema)}get(e,r){return this.provider.get(e,r)}update(e,r,t){return this.provider.update(e,r,t,this.schema)}remove(e,r){return this.provider.remove(e,r)}list(e){return this.provider.list(e)}search(e,r,t){return this.provider.search(e,r,t)}all(){return this.provider.all()}async apiRequest(e,r,t=null){return this.provider.apiRequest(e,r,t)}}let n=class{constructor(e={}){this.asset=e.asset||"GBP",this.currency=e.currency||"BuddyBux",this.orders={buy:[],sell:[]},this.orderIdCounter=1,this.resource=e.resource,this.me=e.me||"Guest",this.bp=e.bp}buy(e,r=null,t={}){return this.placeOrder("buy",e,r,t)}sell(e,r=null,t={}){return this.placeOrder("sell",e,r,t)}matchOrders(e,r){for(let t=0;t<r.length;t++){let o=r[t];if("buy"===e.type&&(null===e.price||e.price>=o.price)||"sell"===e.type&&(null===e.price||e.price<=o.price)){let s=Math.min(e.amount,o.amount);if(e.amount-=s,o.amount-=s,console.log(`Trade executed: ${s} ${this.asset} at ${o.price} ${this.currency}`),console.log("matchedOrder",o),0===o.amount&&(console.log("removing matchedOrder",o),r.splice(t,1),t--),0===e.amount)break}}}sortOrders(e){"buy"===e?this.orders.buy.sort(((e,r)=>r.price-e.price)):this.orders.sell.sort(((e,r)=>e.price-r.price))}cancel(e){this.orders.buy=this.orders.buy.filter((r=>r.id!==e)),this.orders.sell=this.orders.sell.filter((r=>r.id!==e)),console.log(`Order ${e} canceled.`)}getOrders(){return console.log("Current Orders:",this.orders),this.orders}};n.prototype.cancelOrder=async function(e,r){console.log("cancelOrder",r),await this.resource.remove(r.uuid),this.listOrdersPerMarket.call(this,e,r.pair)},n.prototype.placeOrder=async function(e,r){console.log("placeOrder",r);let t=$("#market-pairs").val(),o=await this.resource.create(t,r);return await this.listOrdersPerMarket(e,t),o},n.prototype.listOrdersPerMarket=async function(e,r){"default"===r&&(r="GBP/BUX"),console.log(`listOrdersPerMarket(${r})`);let t=(await this.resource.search(this.bp.me,{pair:r,status:"open"})).results;if(0===t.length)return $(".orderbook-table",e).hide(),$(".orderbook-my-open-orders",e).hide(),$(".no-orders",e).show(),void $(".no-open-orders",e).show();$(".orderbook-table",e).show(),$(".no-orders",e).hide(),console.log("got back orders",t);let o=$(".orderbook-entries",e),s=$(".orderbook-openorder-entries",e);o.empty(),s.empty(),t.forEach((r=>{let t=!1,i=r.amount.toLocaleString("en-US"),n=r.price.toLocaleString("en-US",{style:"currency",currency:"USD"});r.owner===this.me&&(t=!0);let a=$(`\n     <tr>\n         <td>${r.pair}</td>\n         <td>${r.side}</td>\n         <td>${i}</td>\n         <td>${n}</td>\n        ${t?'<td><button class="cancelOrder">Cancel</button></td>':""}\n     </tr>\n `);a.on("click",(async t=>{if($(t.target).hasClass("cancelOrder"))return this.cancelOrder(e,r),!1})),o.append(a),r.owner===this.me&&($(".no-open-orders",e).hide(),s.append(a.clone()))})),0===s.children().length?$(".orderbook-my-open-orders",e).hide():$(".orderbook-my-open-orders",e).show()},n.prototype.listMarketMakersPerMarket=async function(e,r){console.log("listMarketMakersPerMarket",r);let t=r.split("/"),o=t[0];t[1],await this.bp.load("portfolio");const s=await this.bp.apps.portfolio.resource.search(this.bp.me,{symbol:o});console.log("assetHoldersassetHoldersassetHolders",s.results);let i=s.results,n=$(".marketmakers-entries",e);n.empty(),i.forEach((e=>{let r=$(`\n     <tr>\n         <td>${e.owner}</td>\n         <td>${e.amount}</td>\n     </tr>`);n.append(r)}))};class a{constructor(e,r={}){return this.bp=e,this.icon="desktop/assets/images/icons/icon_orderbook_64.png",this}async init(){this.html=await this.bp.load("/v5/apps/based/orderbook/orderbook.html"),this.css=await this.bp.load("/v5/apps/based/orderbook/orderbook.css"),await this.bp.load("coin"),this.resource=new i("orderbook",{provider:"rest",apiEndpoint:this.bp.config.orderbookEndpoint||"/",schema:{owner:{type:"string",required:!0},pair:{type:"string",required:!0,key:!0},price:{type:"number",required:!0},amount:{type:"number",required:!0},side:{type:"string",required:!0},ctime:{type:"number"},utime:{type:"number"}},bp:this.bp}),this.orderbook=new n({resource:this.resource,me:this.bp.me,bp:this.bp})}async open(e={}){this.orderbookWindow?(this.render(this.orderbookWindow.content,e),this.eventBind(this.orderbookWindow.content,e)):(this.orderbookWindow=this.bp.apps.ui.windowManager.createWindow({id:"orderbook",title:"Orderbook",icon:this.icon,x:250,y:75,width:800,height:700,minWidth:200,minHeight:200,parent:$("#desktop")[0],resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,onClose:()=>{this.orderbookWindow=null}}),this.render(this.orderbookWindow.content,e),this.eventBind(this.orderbookWindow.content,e)),"default"!==e.context&&this.orderbookWindow.setTitle("Orderbook "+e.context)}}a.prototype.render=async function(e,r={}){$(e).html(this.html),$("#order-market").val(r.context);let t=$("#market-pairs",e),o=await this.bp.apps.coin.resource.all();if(console.log("coins",o),o=o.sort(((e,r)=>e.symbol<r.symbol?-1:e.symbol>r.symbol?1:0)),o.forEach((e=>{if("listed"!==e.status)return;let r=$("<option></option>");"BUX"!==e.symbol&&(r.html(e.symbol+"/BUX"),r.val(e.symbol+"/BUX"),t.append(r))})),r.context&&"default"!==r.context&&$("#market-pairs",e).val(r.context),this.orderbook.listOrdersPerMarket(e,r.context),this.orderbook.listMarketMakersPerMarket(e,r.context),"Randolph"===this.bp.me)try{await this.createInitialOrders.call(this)}catch(e){console.error(e),$(".order-error").text(e.message)}},a.prototype.eventBind=async function(e){this.tabs=new this.bp.apps.ui.Tabs(".tabs-container",e),this.tabs.onTab((e=>{$(".coin-error").text("")})),$("#market-pairs").on("change",(async e=>{this.bp.open("orderbook",{context:$("#market-pairs").val()})})),$(".place-order",e).on("click",(async r=>{let t={owner:this.bp.me,pair:$("#market-pairs").val(),side:$("#order-side").val(),price:$("#order-price").val(),amount:$("#order-amount").val()};try{let r=await this.orderbook.placeOrder(e,t);console.log("placeOrder result",r),$(".orderbook-error",e).text(""),$(".orderbook-order-status",e).text("Order placed: "+JSON.stringify(r))}catch(r){console.log("Error placing order:",r),$(".orderbook-order-status",e).text(""),$(".orderbook-error",e).text(r.message)}}))},a.prototype.createInitialOrders=async function(){console.log("Initializing Randolph’s automated orders...");const e=[{description:"sell MEGA for BUX",searchParams:{owner:"Randolph",pair:"MEGA/BUX",side:"sell",status:"open"},createParams:{owner:"Randolph",pair:"MEGA/BUX",side:"sell",price:100,amount:1e6}},{description:"buy GBP for BUX",searchParams:{owner:"Randolph",pair:"GBP/BUX",side:"buy",status:"open"},createParams:{owner:"Randolph",pair:"GBP/BUX",side:"buy",price:100,amount:1e3}},{description:"sell GBP for BUX",searchParams:{owner:"Randolph",pair:"GBP/BUX",side:"sell",status:"open"},createParams:{owner:"Randolph",pair:"GBP/BUX",side:"sell",price:100,amount:1e3}}];for(const r of e)try{console.log(`Searching for Randolph’s ${r.description} order...`);const e=await this.resource.search(this.bp.me,r.searchParams);if(console.log(`${r.description} search result:`,e),0===e.results?.length){console.log(`Randolph has no ${r.description} orders. Placing new order...`);let e=await this.resource.create(this.bp.me,r.createParams);console.log(`New ${r.description} order created:`,e)}}catch(e){console.error(`Error processing ${r.description}:`,e),$(".order-error").text(e.message)}};export{a as default};
//# sourceMappingURL=orderbook.js.map
