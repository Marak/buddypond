class t{constructor(t,i={}){this.bp=t,this.settings={dictationEnabled:i.dictationEnabled||!0,language:i.language||"en-US"},this.recognition=null}async init(){if("SpeechRecognition"in window||"webkitSpeechRecognition"in window){const t=window.SpeechRecognition||window.webkitSpeechRecognition;this.recognition=new t,this.recognition.continuous=!1,this.recognition.interimResults=!1,this.recognition.lang=this.settings.language,this.available=!0,this.recognition.onresult=this.onResult.bind(this),this.recognition.onerror=this.onError.bind(this),this.recognition.onend=this.onEnd.bind(this)}else this.available=!1,console.log("Speech Recognition not supported in this browser.");this.bp.dictate=this.start.bind(this),await this.bp.appendCSS("/v5/apps/based/dictate/dictate.css")}open({targetEl:t}){console.log("Opening Dictate recorder...",t),this.targetEl=t,this.start()}start(){if(this.available&&this.settings.dictationEnabled){if(this.listening)return console.log("Stopping speech recognition as it is already active."),void this.stop();this.listening=!0,console.log("Starting speech recognition..."),this.recognition.start(),this.targetEl.addClass("dictate-active"),this.targetEl.attr("placeholder","Listening... Speak now!"),console.log("added class dictate-active to targetEl",this.targetEl)}else console.log("Warning: Speech recognition not available or disabled.")}stop(){this.available&&(console.log("Stopping speech recognition..."),this.recognition.stop())}onResult(t){const i=t.results[0][0].transcript;console.log("Recognized text:",i),this.targetEl.val()?this.targetEl.val(this.targetEl.val()+" "+i):this.targetEl.val(i)}onError(t){console.error("Speech recognition error:",t.error),this.targetEl&&(this.targetEl.removeClass("dictate-active"),console.log("removed class dictate-active from targetEl",this.targetEl))}onEnd(){console.log("Speech recognition ended."),this.targetEl&&(this.targetEl.removeClass("dictate-active"),console.log("removed class dictate-active from targetEl",this.targetEl)),this.listening=!1,this.targetEl.attr("placeholder","Type your message...")}enableDictation(t=!0){this.settings.dictationEnabled=t}setLanguage(t){this.settings.language=t,this.recognition&&(this.recognition.lang=t)}}export{t as default};
//# sourceMappingURL=dictate.js.map
