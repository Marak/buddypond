{"version":3,"file":"orderbook.js","sources":["../../../apps/based/resource/lib/MemoryProvider.js","../../../apps/based/resource/lib/RestProvider.js","../../../apps/based/resource/lib/IndexedDbProvider.js","../../../apps/based/resource/lib/Resource.js","../../../apps/based/orderbook/lib/Orderbook.js","../../../apps/based/orderbook/lib/cancelOrder.js","../../../apps/based/orderbook/lib/placeOrder.js","../../../apps/based/orderbook/lib/listOrdersPerMarket.js","../../../apps/based/orderbook/lib/listMarketMakersPerMarket.js","../../../apps/based/orderbook/orderbook.js","../../../apps/based/orderbook/lib/render.js","../../../apps/based/orderbook/lib/eventBind.js","../../../apps/based/orderbook/lib/createInitialOrders.js"],"sourcesContent":["const memoryStore = {}; // In-memory database\n\nexport default class MemoryProvider {\n    constructor(resourceName) {\n        this.resourceName = resourceName;\n        memoryStore[this.resourceName] = {}; // Change from array to object\n        this.memoryStore = memoryStore;\n    }\n\n    create(owner, data, schema) {\n        // Check for required fields\n        Object.keys(schema).forEach((key) => {\n            if (schema[key].required && (data[key] === undefined || data[key] === null)) {\n                throw new Error(`${key} is required`);\n            }\n\n            if (schema[key].unique) {\n                const entries = Object.values(memoryStore[this.resourceName]);\n                if (entries.some(entry => entry[key] === data[key])) {\n                    throw new Error(`${key} must be unique`);\n                }\n            }\n\n            if (schema[key].type && typeof data[key] !== schema[key].type) {\n                throw new Error(`${key} must be of type ${schema[key].type} value is ${data[key]}`);\n            }\n\n        });\n\n        const newId = generateUniqueId();\n        const newEntry = { id: newId, owner };\n\n        Object.keys(schema).forEach((key) => {\n            newEntry[key] = data[key] || null;\n        });\n\n        memoryStore[this.resourceName][newId] = newEntry;\n        return newEntry;\n    }\n\n    get(owner, id) {\n        const entry = memoryStore[this.resourceName][id];\n        return entry && entry.owner === owner ? entry : null;\n    }\n\n    update(owner, id, data, schema) {\n        const entry = memoryStore[this.resourceName][id];\n        if (!entry || entry.owner !== owner) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        // Check for required fields\n        Object.keys(schema).forEach((key) => {\n            if (schema[key].required && (data[key] === undefined || data[key] === null)) {\n                throw new Error(`${key} is required`);\n            }\n            /*\n            if (schema[key].unique && data[key] !== undefined) {\n                const entries = Object.values(memoryStore[this.resourceName]);\n                if (entries.some(e => e.id !== id && e[key] === data[key])) {\n                    throw new Error(`${key} must be unique`);\n                }\n            }\n                */\n        });\n\n        Object.keys(schema).forEach((key) => {\n            if (data[key] !== undefined) {\n                entry[key] = data[key];\n            }\n        });\n\n        return entry;\n    }\n\n    remove(owner, id) {\n        const entry = memoryStore[this.resourceName][id];\n        if (!entry || entry.owner !== owner) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        delete memoryStore[this.resourceName][id];\n        return { success: true };\n    }\n\n    search(owner, query) {\n        // example query: { name: 'John', age: 30 }\n        return Object.values(memoryStore[this.resourceName]).filter(item => item.owner === owner && Object.keys(query).every(key => item[key] === query[key]));\n    }\n\n    list(owner) {\n        return Object.values(memoryStore[this.resourceName]).filter(item => item.owner === owner);\n    }\n\n    all() {\n        return Object.values(memoryStore[this.resourceName]);\n    }\n}\n\n// ðŸš€ Helper Function: Generate a Unique ID\nfunction generateUniqueId() {\n    return Math.random().toString(36).substring(2, 10);\n}\n","export default class RestProvider {\n    constructor(resourceName, options = {}) {\n        // console.log('RestProvider', resourceName, options);\n        this.resourceName = resourceName;\n        this.apiEndpoint = options.apiEndpoint;\n        if (options.bp) {\n            this.bp = options.bp;\n        }\n    }\n\n    async apiRequest(method, path, body = null, urlparams = null) {\n        // console.log('apiRequest', method, path, body, urlparams);\n        const options = { method, headers: { 'Content-Type': 'application/json' } };\n        if (body) options.body = JSON.stringify(body);\n\n        if (this.bp.qtokenid) {\n            options.headers[\"Authorization\"] = `Bearer ${this.bp.qtokenid}`; // âœ… Use Authorization header\n        }\n\n        options.headers['X-Me'] = this.bp.me; // Add X-Me header\n\n        let url = `${this.apiEndpoint}/${path}`;\n        // append urlparams to url\n        if (urlparams) {\n            const params = new URLSearchParams(urlparams);\n            url += `?${params.toString()}`;\n        }\n        // console.log('apiRequest', method, url, options);\n\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            console.log('API request failed:', response);\n            // try to get json from json\n            try {\n                let json = await response.json();\n                console.log('API request failed:', json);\n                throw new Error(`${json.error}`);\n                return json;\n            } catch (err) {\n                console.log('error', err);\n                throw new Error(err);\n            }\n            throw new Error(`API request failed: ${json.error}`);\n        }\n        return response.json();\n    }\n\n    async create(id, data) {\n        console.log('calling create', `${this.resourceName}`, data);\n        return this.apiRequest('POST', `${this.resourceName}`, data);\n    }\n\n    async get(owner, id) {\n        return this.apiRequest('GET', `${this.resourceName}/${owner}/${id}`);\n    }\n\n    async update(id, data) {\n        console.log(`calling update ${this.resourceName}/${id}`, data);\n        return this.apiRequest('PUT', `${this.resourceName}/${id}`, data);\n    }\n\n    async remove(id) {\n        return this.apiRequest('DELETE', `${this.resourceName}/${id}`);\n    }\n\n    async list() {\n        console.log('calling list', `${this.resourceName}`);\n        return this.apiRequest('GET', `${this.resourceName}`);\n    }\n\n    async all() {\n        return this.apiRequest('GET', this.resourceName);\n    }\n\n    async search(owner, query, urlparams = {}) {\n        return this.apiRequest('POST', `${this.resourceName}/search`, query, urlparams);\n    }\n\n}\n","export default class IndexedDbProvider {\n    constructor(resourceName) {\n        this.resourceName = resourceName;\n        this.dbName = \"BuddyPondResourceDB\";\n        this.version = 1;\n        this.db = null;\n        this.init();\n    }\n\n    async init() {\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.dbName, this.version);\n\n            request.onupgradeneeded = (event) => {\n                let db = event.target.result;\n                if (!db.objectStoreNames.contains(this.resourceName)) {\n                    db.createObjectStore(this.resourceName, { keyPath: \"id\" });\n                }\n            };\n\n            request.onsuccess = (event) => {\n                this.db = event.target.result;\n                resolve();\n            };\n\n            request.onerror = (event) => {\n                reject(`IndexedDB Error: ${event.target.errorCode}`);\n            };\n        });\n    }\n\n    async _withStore(mode, callback) {\n        if (!this.db) {\n            await this.init();\n        }\n        return new Promise((resolve, reject) => {\n            const tx = this.db.transaction(this.resourceName, mode);\n            const store = tx.objectStore(this.resourceName);\n            const request = callback(store);\n\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    async create(owner, data, schema) {\n        const newId = generateUniqueId();\n        const newEntry = { id: newId, owner };\n\n        Object.keys(schema).forEach((key) => {\n            newEntry[key] = data[key] || null;\n        });\n\n        await this._withStore(\"readwrite\", (store) => store.add(newEntry));\n        return newEntry;\n    }\n\n    async get(owner, id) {\n        const entry = await this._withStore(\"readonly\", (store) => store.get(id));\n        return entry && entry.owner === owner ? entry : null;\n    }\n\n    async update(owner, id, data, schema) {\n        const entry = await this.get(owner, id);\n        if (!entry) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        Object.keys(schema).forEach((key) => {\n            if (data[key] !== undefined) {\n                entry[key] = data[key];\n            }\n        });\n\n        await this._withStore(\"readwrite\", (store) => store.put(entry));\n        return entry;\n    }\n\n    async remove(owner, id) {\n        const entry = await this.get(owner, id);\n        if (!entry) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        await this._withStore(\"readwrite\", (store) => store.delete(id));\n        return { success: true };\n    }\n\n    async list(owner) {\n        return new Promise((resolve, reject) => {\n            this._withStore(\"readonly\", (store) => {\n                const request = store.getAll();\n                request.onsuccess = () => {\n                    resolve(request.result.filter(item => item.owner === owner));\n                };\n                request.onerror = () => reject(request.error);\n            });\n        });\n    }\n\n    async all() {\n        return new Promise((resolve, reject) => {\n            this._withStore(\"readonly\", (store) => {\n                const request = store.getAll();\n                request.onsuccess = () => resolve(request.result);\n                request.onerror = () => reject(request.error);\n            });\n        });\n    }\n}\n\n// ðŸš€ Helper Function: Generate a Unique ID\nfunction generateUniqueId() {\n    return Math.random().toString(36).substring(2, 10);\n}\n","import MemoryProvider from './MemoryProvider.js';\nimport RestProvider from './RestProvider.js';\nimport IndexedDBProvider from './IndexedDbProvider.js';\n\nconst schemaRegistry = {};\n\nexport default class Resource {\n    constructor(name, options) {\n        this.name = name;\n        this.schema = options.schema || {};\n        this.providerType = options.provider || 'memory';\n\n        if (Object.keys(this.schema).length === 0) {\n            throw new Error(`Schema definition is required for resource: ${name}`);\n        }\n        \n        // console.log('Initializing provider with options:', options);\n        schemaRegistry[this.name] = this.schema; // Register the resource schema\n\n        this.provider = this._createProvider(this.providerType, options);\n        this.provider.bp = options.bp;\n    }\n\n    _createProvider(providerType, options) {\n        switch (providerType) {\n            case 'rest':\n                return new RestProvider(this.name, options);\n            case 'indexeddb':\n                return new IndexedDBProvider(this.name, options);\n            case 'memory':\n            default:\n                return new MemoryProvider(this.name);\n        }\n    }\n\n    create(owner, data) {\n        return this.provider.create(owner, data, this.schema);\n    }\n\n    get(owner, id) {\n        return this.provider.get(owner, id);\n    }\n\n    update(owner, id, data) {\n        return this.provider.update(owner, id, data, this.schema);\n    }\n\n    remove(owner, id) {\n        return this.provider.remove(owner, id);\n    }\n\n    list(owner) {\n        return this.provider.list(owner);\n    }\n\n    search(owner, query, urlparams) {\n        return this.provider.search(owner, query, urlparams);\n    }\n    \n    all() {\n        return this.provider.all();\n    }\n\n    \n\n    async apiRequest(method, path, body = null) {\n        return this.provider.apiRequest(method, path, body);\n    }\n\n}\n","import placeOrder from \"./placeOrder.js\";\nimport listOrdersPerMarket from \"./listOrdersPerMarket.js\";\nimport listMarketMakersPerMarket from \"./listMarketMakersPerMarket.js\";\nimport cancelOrder from \"./cancelOrder.js\";\n\nexport default class Orderbook {\n    constructor(config = {}) {\n        this.asset = config.asset || 'GBP';\n        this.currency = config.currency || 'BuddyBux';\n        this.orders = { buy: [], sell: [] };\n        this.orderIdCounter = 1;\n        this.resource = config.resource;\n        this.me = config.me || 'Guest';\n        this.bp = config.bp;\n    }\n\n    /*\n    placeOrder(type, amount, price, options = {}) {\n        console.log('placeOrder', type, amount, price, options);\n        const order = {\n            id: this.orderIdCounter++,\n            type,\n            amount,\n            price,\n            timestamp: Date.now(),\n            ...options\n        };\n\n        let oppositeType = type === 'buy' ? 'sell' : 'buy';\n        let orderBookSide = this.orders[type];\n        let oppositeBookSide = this.orders[oppositeType];\n\n        // Match orders if possible\n        this.matchOrders(order, oppositeBookSide);\n\n        // If not fully matched, add to order book\n        if (order.amount > 0) {\n            orderBookSide.push(order);\n            this.sortOrders(type);\n        }\n\n        // console.log('Order placed:', order);\n        return order.id;\n    }\n        */\n\n    buy(amount, price = null, options = {}) {\n        return this.placeOrder('buy', amount, price, options);\n    }\n\n    sell(amount, price = null, options = {}) {\n        return this.placeOrder('sell', amount, price, options);\n    }\n\n    matchOrders(order, oppositeBookSide) {\n        for (let i = 0; i < oppositeBookSide.length; i++) {\n            let matchedOrder = oppositeBookSide[i];\n            if ((order.type === 'buy' && (order.price === null || order.price >= matchedOrder.price)) ||\n                (order.type === 'sell' && (order.price === null || order.price <= matchedOrder.price))) {\n                let tradeAmount = Math.min(order.amount, matchedOrder.amount);\n                order.amount -= tradeAmount;\n                matchedOrder.amount -= tradeAmount;\n                console.log(`Trade executed: ${tradeAmount} ${this.asset} at ${matchedOrder.price} ${this.currency}`);\n                console.log('matchedOrder', matchedOrder);\n                if (matchedOrder.amount === 0) {\n                    console.log('removing matchedOrder', matchedOrder);\n                    oppositeBookSide.splice(i, 1);\n                    i--;\n                }\n\n                if (order.amount === 0) break;\n            }\n        }\n    }\n\n    sortOrders(type) {\n        if (type === 'buy') {\n            this.orders.buy.sort((a, b) => b.price - a.price); // Highest buy price first\n        } else {\n            this.orders.sell.sort((a, b) => a.price - b.price); // Lowest sell price first\n        }\n    }\n\n    cancel(orderId) {\n        this.orders.buy = this.orders.buy.filter(order => order.id !== orderId);\n        this.orders.sell = this.orders.sell.filter(order => order.id !== orderId);\n        console.log(`Order ${orderId} canceled.`);\n    }\n\n    getOrders() {\n        console.log('Current Orders:', this.orders);\n        return this.orders;\n    }\n}\n\nOrderbook.prototype.cancelOrder = cancelOrder;\nOrderbook.prototype.placeOrder = placeOrder;\nOrderbook.prototype.listOrdersPerMarket = listOrdersPerMarket;\nOrderbook.prototype.listMarketMakersPerMarket = listMarketMakersPerMarket;","export default async function cancelOrder (parent, order) {\n    console.log(\"cancelOrder\", order);\n    await this.resource.remove(order.uuid);\n    // update the coin list\n    this.listOrdersPerMarket.call(this, parent, order.pair);\n\n\n}","export default async function placeOrder (parent, order) {\n    console.log('placeOrder', order)\n\n    let marketPair = $('#market-pairs').val();\n\n    let result = await this.resource.create(marketPair, order);\n\n    await this.listOrdersPerMarket(parent, marketPair);\n\n    return result;\n\n}","export default async function listOrdersPerMarket(parent, marketPair) {\n\n    if (marketPair === 'default') {\n        marketPair = 'GBP/BUX';\n    }\n\n    console.log(`listOrdersPerMarket(${marketPair})`);\n    // update the orderbook list\n    let searchResult = await this.resource.search(this.bp.me, {\n        pair: marketPair,\n        status: 'open'\n    });\n    let orders = searchResult.results;\n    if (orders.length === 0) {\n        $('.orderbook-table', parent).hide();\n        $('.orderbook-my-open-orders', parent).hide();\n        $('.no-orders', parent).show();\n        $('.no-open-orders', parent).show();\n        return;\n    }\n    $('.orderbook-table', parent).show();\n    // $('.orderbook-my-open-orders', parent).show();\n    $('.no-orders', parent).hide();\n    console.log('got back orders', orders);\n    let html = '';\n    let table = $('.orderbook-entries', parent);\n    let openOrdersTable = $('.orderbook-openorder-entries', parent);\n\n    // clear the table\n    table.empty();\n    openOrdersTable.empty();\n\n    orders.forEach(order => {\n        let includeAdmin = false;\n        let formattedAmount =  order.amount.toLocaleString('en-US');\n        // format as USD\n        let formattedPrice = order.price.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n\n        if (order.owner === this.me) {\n            includeAdmin = true;\n        }\n\n\n        let row = $(`\n     <tr>\n         <td>${order.pair}</td>\n         <td>${order.side}</td>\n         <td>${formattedAmount}</td>\n         <td>${formattedPrice}</td>\n        ${includeAdmin ? `<td><button class=\"cancelOrder\">Cancel</button></td>` : ''}\n     </tr>\n `);\n\n        row.on('click', async (ev) => {\n\n            // check if target has class .removeCoin\n            if ($(ev.target).hasClass('cancelOrder')) {\n                /*\n                let confirmDelete = prompt(`Are you sure you want to delete this coin? Type \"${coin.symbol}\" to confirm.`);\n                if (confirmDelete !== coin.symbol) {\n                    return;\n                }\n                */\n                this.cancelOrder(parent, order);\n                return false;\n            }\n        });\n\n        table.append(row);\n\n        if (order.owner === this.me) {\n            $('.no-open-orders', parent).hide();\n            openOrdersTable.append(row.clone());\n        }\n\n\n    });\n\n    // check length of openOrdersTable, if empty hide it\n    if (openOrdersTable.children().length === 0) {\n        $('.orderbook-my-open-orders', parent).hide();\n    } else {\n        $('.orderbook-my-open-orders', parent).show();\n    }\n\n\n}","export default async function listMarketMakersPerMarket (parent, marketPair) {\n    // update the orderbook list\n    console.log('listMarketMakersPerMarket', marketPair);\n\n    let markets = marketPair.split('/');\n    let selling = markets[0];\n    let buying = markets[1];\n\n    await this.bp.load('portfolio');\n\n    // get the portfolio's assets\n    const assetHolders = await this.bp.apps.portfolio.resource.search(this.bp.me, {\n        symbol: selling\n    });\n    console.log('assetHoldersassetHoldersassetHolders', assetHolders.results);\n\n    let topHolders = assetHolders.results;\n\n\n    let html = '';\n    let table = $('.marketmakers-entries', parent);\n\n    // clear the table\n    table.empty();\n\n\n    topHolders.forEach(holder => {\n        let row = $(`\n     <tr>\n         <td>${holder.owner}</td>\n         <td>${holder.amount}</td>\n     </tr>`);\n        table.append(row);\n\n    });\n\n    /*\n    orders.forEach(order => {\n        let includeAdmin = false;\n        if (order.owner === this.me) {\n            includeAdmin = true;\n        }\n\n\n        let row = $(`\n     <tr>\n         <td>${order.pair}</td>\n         <td>${order.side}</td>\n         <td>${order.amount}</td>\n         <td>${order.price}</td>\n        ${includeAdmin ? `<td><button class=\"cancelOrder\">Cancel</button></td>` : ''}\n     </tr>\n `);\n\n        row.on('click', async (ev) => {\n\n            // check if target has class .removeCoin\n            if ($(ev.target).hasClass('cancelOrder')) {\n                let confirmDelete = prompt(`Are you sure you want to delete this coin? Type \"${coin.symbol}\" to confirm.`);\n                if (confirmDelete !== coin.symbol) {\n                    return;\n                }\n               this.cancelOrder(parent, order);\n                return false;\n            }\n        });\n\n        table.append(row);\n\n\n    });\n    */\n\n\n}","/* Orderbook.js - Marak Squires 2025 - BuddyPond */\nimport render from './lib/render.js';\nimport eventBind from './lib/eventBind.js';\nimport Resource from '../resource/lib/Resource.js';\nimport OrderbookClass from './lib/Orderbook.js';\n\nimport createInitialOrders from './lib/createInitialOrders.js';\n\nexport default class Orderbook {\n\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.icon = 'desktop/assets/images/icons/icon_orderbook_64.png';\n\n        return this;\n    }\n\n    async init() {\n        this.html = await this.bp.load('/v5/apps/based/orderbook/orderbook.html');\n        this.css = await this.bp.load('/v5/apps/based/orderbook/orderbook.css');\n\n        // load coin so we can get market pair information\n        await this.bp.load('coin');\n\n        this.resource = new Resource(\"orderbook\", {\n            provider: 'rest',\n            apiEndpoint: this.bp.config.orderbookEndpoint || '/',\n            schema: {\n                // orderbook schema\n                owner: { type: \"string\", required: true },\n                pair: { type: \"string\", required: true, key: true },\n                price: { type: \"number\", required: true },\n                amount: { type: \"number\", required: true },\n                side: { type: \"string\", required: true }, // BUY or SELL\n                ctime: { type: \"number\" },\n                utime: { type: \"number\" } // only utime if removed / or admin update ( for now )\n            },\n            bp: this.bp\n        });\n\n        this.orderbook = new OrderbookClass({ resource: this.resource, me: this.bp.me, bp: this.bp }); // TODO: remove BP reference from inside class\n\n    }\n\n    async open (options = {}) {\n        if (!this.orderbookWindow) {\n            this.orderbookWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'orderbook',\n                title: 'Orderbook',\n                icon: this.icon,\n                x: 250,\n                y: 75,\n                width: 800,\n                height: 700,\n                minWidth: 200,\n                minHeight: 200,\n                parent: $('#desktop')[0],\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                   this.orderbookWindow = null;\n                }\n            });\n            this.render(this.orderbookWindow.content, options);\n            this.eventBind(this.orderbookWindow.content, options);\n        } else {\n            // we will want to re-render the orderbook window, especially if the `context` market pair has changed\n            this.render(this.orderbookWindow.content, options);\n            this.eventBind(this.orderbookWindow.content, options);\n        }\n        if (options.context !== 'default') {\n            this.orderbookWindow.setTitle('Orderbook ' + options.context);\n        }\n\n    }  \n    \n}\n\nOrderbook.prototype.render = render;\nOrderbook.prototype.eventBind = eventBind;\nOrderbook.prototype.createInitialOrders = createInitialOrders;","export default async function render(parent, options = {}) {\n\n    $(parent).html(this.html);\n\n    $('#order-market').val(options.context);\n\n    let selector = $('#market-pairs', parent);\n    // get all the markets by getting all the coins and pairing them with BUX\n\n    let coins = await this.bp.apps.coin.resource.all();\n\n    console.log('coins', coins);\n\n    // order coins by symbol\n    coins = coins.sort((a, b) => {\n        if (a.symbol < b.symbol) {\n            return -1;\n        }\n        if (a.symbol > b.symbol) {\n            return 1;\n        }\n        return 0;\n    });\n\n    // for each market, add an options to the selector\n    coins.forEach(coin => {\n\n        if (coin.status !== 'listed') {\n            return;\n        }\n\n        let option = $('<option></option>');\n\n        // if the symbol is BUX, skip it as we can't pair it was USD\n        if (coin.symbol === 'BUX') return;\n\n        option.html(coin.symbol + '/BUX');\n        option.val(coin.symbol + '/BUX');\n        selector.append(option);\n    });\n    if (options.context && options.context !== 'default') {\n        // assume this is the market pair\n        $('#market-pairs', parent).val(options.context);\n    }\n    this.orderbook.listOrdersPerMarket(parent, options.context);\n    this.orderbook.listMarketMakersPerMarket(parent, options.context);\n\n    if (this.bp.me === 'Randolph') {\n        // initial seed coins, will only work the first time\n        // additional calls will fail due to unique constraint on symbol\n        try {\n            await this.createInitialOrders.call(this);\n\n        } catch (err) {\n            console.error(err);\n            $('.order-error').text(err.message);\n        }\n\n    }\n\n}","export default async function eventBind(parent) {\n\n    this.tabs = new this.bp.apps.ui.Tabs('.tabs-container', parent);\n\n    this.tabs.onTab((tabId) => {\n        $('.coin-error').text('');\n    });\n\n    $('#market-pairs').on('change', async (e) => {\n        this.bp.open('orderbook', { context: $('#market-pairs').val() });\n    });\n\n    $('.place-order', parent).on('click', async (e) => {\n        let order = {\n            owner: this.bp.me,\n            pair: $('#market-pairs').val(),\n            side: $('#order-side').val(),\n            price: $('#order-price').val(),\n            amount: $('#order-amount').val()\n        };\n        try {\n            let result = await this.orderbook.placeOrder(parent, order);\n            console.log('placeOrder result', result);\n            $('.orderbook-error', parent).text('');\n            $('.orderbook-order-status', parent).text('Order placed: ' + JSON.stringify(result));\n            // this.tabs.navigateToTab('#orderbook-book');\n    \n        } catch (err) {\n            console.log('Error placing order:', err);\n            $('.orderbook-order-status', parent).text('');\n            $('.orderbook-error', parent).text(err.message);\n        }\n\n    });\n\n}","// Creates initial orders for the orderbook from Randolph\n// Randolph will always:\n// - Sell MEGA for BUX\n// - Buy GBP for BUX (slightly discounted rate)\n// - Sell BUX for GBP (discounted rate)\n\nexport default async function createInitialOrders() {\n    console.log('Initializing Randolphâ€™s automated orders...');\n\n    const orders = [\n        {\n            description: 'sell MEGA for BUX',\n            searchParams: { owner: 'Randolph', pair: 'MEGA/BUX', side: 'sell', status: 'open' },\n            createParams: { owner: 'Randolph', pair: 'MEGA/BUX', side: 'sell', price: 100, amount: 1000000 }\n        },\n        {\n            description: 'buy GBP for BUX',\n            searchParams: { owner: 'Randolph', pair: 'GBP/BUX', side: 'buy', status: 'open' },\n            createParams: { owner: 'Randolph', pair: 'GBP/BUX', side: 'buy', price: 100, amount: 1000 }\n        },\n        {\n            description: 'sell GBP for BUX',\n            searchParams: { owner: 'Randolph', pair: 'GBP/BUX', side: 'sell', status: 'open' },\n            createParams: { owner: 'Randolph', pair: 'GBP/BUX', side: 'sell', price: 100, amount: 1000 }\n        }\n    ];\n\n    for (const order of orders) {\n        try {\n            console.log(`Searching for Randolphâ€™s ${order.description} order...`);\n            const existingOrder = await this.resource.search(this.bp.me, order.searchParams);\n\n            console.log(`${order.description} search result:`, existingOrder);\n\n            if (existingOrder.results?.length === 0) {\n                console.log(`Randolph has no ${order.description} orders. Placing new order...`);\n                let newMarketMakingOrder = await this.resource.create(this.bp.me, order.createParams);\n                console.log(`New ${order.description} order created:`, newMarketMakingOrder);\n            }\n        } catch (err) {\n            console.error(`Error processing ${order.description}:`, err);\n            $('.order-error').text(err.message);\n        }\n    }\n}\n"],"names":["memoryStore","MemoryProvider","constructor","resourceName","this","create","owner","data","schema","Object","keys","forEach","key","required","undefined","Error","unique","values","some","entry","type","newId","Math","random","toString","substring","newEntry","id","get","update","remove","success","search","query","filter","item","every","list","all","RestProvider","options","apiEndpoint","bp","apiRequest","method","path","body","urlparams","headers","JSON","stringify","qtokenid","me","url","URLSearchParams","response","fetch","ok","console","log","json","error","err","IndexedDbProvider","dbName","version","db","init","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","errorCode","_withStore","mode","callback","store","transaction","objectStore","add","put","delete","getAll","schemaRegistry","Resource","name","providerType","provider","length","_createProvider","IndexedDBProvider","Orderbook$1","config","asset","currency","orders","buy","sell","orderIdCounter","resource","amount","price","placeOrder","matchOrders","order","oppositeBookSide","i","matchedOrder","tradeAmount","min","splice","sortOrders","sort","a","b","cancel","orderId","getOrders","Orderbook","prototype","cancelOrder","async","parent","uuid","listOrdersPerMarket","call","pair","marketPair","$","val","status","results","hide","show","table","openOrdersTable","empty","includeAdmin","formattedAmount","toLocaleString","formattedPrice","style","row","side","on","ev","hasClass","append","clone","children","listMarketMakersPerMarket","markets","split","selling","load","assetHolders","apps","portfolio","symbol","topHolders","holder","icon","html","css","orderbookEndpoint","ctime","utime","orderbook","OrderbookClass","orderbookWindow","render","content","eventBind","ui","windowManager","createWindow","title","x","y","width","height","minWidth","minHeight","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","context","setTitle","selector","coins","coin","option","createInitialOrders","text","message","tabs","Tabs","onTab","tabId","e","description","searchParams","createParams","existingOrder","newMarketMakingOrder"],"mappings":"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"}