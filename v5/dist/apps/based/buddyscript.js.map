{"version":3,"file":"buddyscript.js","sources":["../../../apps/based/buddyscript/commands/defaultCommands.js","../../../apps/based/buddyscript/buddyscript.js"],"sourcesContent":["export default function Commands(bp) {\n\n  this.bp = bp;\n\n  const commands = {};\n  this.commands = commands;\n\n  /*\n  commands.say = function (context) {\n    console.log('Saying:', context);\n    bp.say(context);\n  };\n  */\n\n  /*\n  commands.give = async function (context) {\n    console.log('Giving:', context);\n    // load the portfolio app\n    await bp.load('portfolio');\n    console.log('loaded', bp.apps.portfolio);\n    bp.apps.portfolio.portfolio.transfer(null, {\n      from: bp.me,\n      to: context[0],\n      symbol: 'GBP',\n      amount: context[1]\n    });\n  }\n  */\n\n\n  /*\n  commands.give = function (context) {\n      console.log('Giving:', context);\n      return false;\n  };\n  */\n\n\n  // for all the legacy commands, call the legacy command\n  for (let command in legacyCommands) {\n\n          let commandObj = legacyCommands[command];\n      let commandStr = commandObj.command;\n\n    let evaler = function (context, options) {\n      let params = context.params;\n      console.log('Executing legacy command:', command, commandStr, context);\n      if (typeof commandStr === 'function') {\n        commandStr(context, options);\n        //eval(commandStr)\n\n      } else {\n        eval(commandStr)\n\n      };\n\n    };\n    //commands[command] = evaler;\n\n    commands[command] = {\n      fn: evaler,\n      object: commandObj\n    };\n\n    //console.log('new commands', command, commands);\n  }\n\n  return this;\n\n}\n\n/* Legacy commands, should be moved outside of this file and into the app itself on registration */\n\n// TODO: map all known apps\nlet legacyCommands = {\n  /*\n  appstore: {\n    command: 'desktop.ui.openWindow(\"appstore\");',\n    description: 'View Buddy Pond App Store',\n    icon: 'appstore'\n  },\n  */\n  av: {\n    command: function (params) {\n      bp.open('audio-visual');\n    },\n    description: 'Use the Microphone Audio to create Cool Visuals',\n    icon: 'visuals'\n  },\n  // show card\n  apps: {\n    command: function (params, context) {\n      console.log('apps command', params, context);\n      bp.apps.buddylist.showCard({ chatWindow: context.chatWindow, cardName: 'apps' });\n      return;\n    },\n    description: 'Lists all Buddy Pond Apps',\n    icon: 'merlin'\n  },\n  balance: {\n    command: function (params) {\n      console.log('balance command', params);\n      if (params.length > 0) {\n        bp.open('portfolio', { context: '#portfolio-balance', type: params[0] });\n      } else {\n        bp.open('portfolio', { context: '#portfolio-balance' });\n      }\n    },\n    description: 'View your Buddy Coin Balances',\n    icon: 'coin'\n  },\n  'cast': {\n    command: function (params) {\n      bp.open('spellbook');\n    },\n    description: 'Cast Spells with the Buddy Pond Spellbook',\n    icon: 'spellbook'\n  },\n  // TODO: add bs command to list BuddyScript commands\n  bs: {\n    command: function(params, context) {\n      console.log('bs command', params, context);\n      bp.apps.buddylist.showCard({ chatWindow: context.chatWindow, cardName: 'bs-commands' });\n      return;\n    },\n    description: 'Lists all BuddyScript Commands',\n    icon: 'buddyscript'\n  },\n /*\n  console: {\n    command: function (params) {\n      bp.open('console');\n    },\n    description: 'Buddy Pond Console Terminal ( For Hackers )',\n    icon: 'lofi'\n  },\n  */\n  coin: {\n    command: function (params) {\n      console.log('coin command', params);\n      if (params.length > 0) {\n        bp.open('coin', { type: params[0] });\n      } else {\n        bp.open('coin');\n      }\n    },\n    description: 'View available Buddy Coins',\n    icon: 'coin'\n  },\n\n  files: {\n    command: function (params) {\n      console.log('files command', params);\n      if (params.length > 0) {\n        bp.open('file-explorer', { context: params[0] });\n      } else {\n        bp.open('file-explorer');\n      }\n    },\n    description: 'View and Manage your Files',\n    icon: 'folder'\n  },\n \n  /*\n  faq: {\n    command: 'desktop.ui.openWindow(\"faq\");',\n    description: 'Frequently Asked Questions',\n    icon: 'folder'\n  },\n  lofi: {\n    command: 'desktop.ui.openWindow(\"lofi\");',\n    description: 'Chill Vibes Lofi Music Channel',\n    icon: 'lofi'\n  },\n  */\n  give: {\n    command: function (params) {\n      console.log('give command', params);\n      if (params.length > 0) {\n        bp.open('portfolio', { context: '#portfolio-transfer', type: params[0] });\n      } else {\n        bp.open('portfolio', { context: '#portfolio-transfer' });\n      }\n    },\n    description: 'Give Buddy Pond Coins to Buddies',\n    icon: 'coin'\n  },\n  leaderboard: {\n    command: function (params) {\n        bp.open('coin', { context: '#coin-leaderboard' });\n    },\n    description: 'View the Buddy Coins Leaderboards',\n    icon: 'coin'\n  },\n  // similiar to bs, use showCard to show the markdown card\n  markdown: {\n    command: function (params, context) {\n      console.log('markdown command', params, context);\n      bp.apps.buddylist.showCard({ chatWindow: context.chatWindow, cardName: 'markdown' });\n      return;\n    },\n    description: 'Lists all Markdown Commands',\n    icon: 'markdown'\n  },\n  portfolio: {\n    command: function (params) {\n      console.log('portfolio command', params);\n      if (params.length > 0) {\n        bp.open('portfolio', { context: params[0] });\n      } else {\n        bp.open('portfolio');\n      }\n    },\n    description: 'View your Buddy Coins Portfolio',\n    icon: 'portfolio'\n  },\n  logout: {\n    command: function (params) {\n      bp.logout();\n    },\n    description: 'Logs you out of Buddy Pond Desktop',\n    icon: 'login'\n  },\n  fluids: {\n    command: function (params) {\n      bp.open('fluid-simulation');\n    },\n    description: 'Fluid Simulations ( Trippy )',\n    icon: 'fluidsimulation'\n  },\n  games: {\n    command: function(params) {\n      bp.apps.desktop.openFolder('Games');\n    },\n    description: 'Stay Entertained with Buddy Pond Games',\n    icon: 'folder'\n  },\n  pond: {\n    command: function (params) {\n      console.log('ponds command', params);\n      if (params.length > 0) {\n        bp.open('pond', { context: params[0] });\n      } else {\n        bp.open('pond');\n      }\n    },\n    description: 'View or Join a Buddy Pond',\n    icon: 'pond'\n  },\n  /*\n  */\n  /*\n  gbp: {\n    command: 'desktop.ui.openWindow(\"gbp\");',\n    description: 'Give and receive Good Buddy Points',\n    icon: 'gbp'\n  },\n  */\n  /*\n  gifstudio: {\n    command: function(params) {\n      let str = `desktop.ui.openWindow(\"gifstudio\", { output: '${params.output}', context: '${params.context}' });`\n      return str;\n    },\n    description: 'Create, Edit, and Remix Animated GIFs',\n    icon: 'gifstudio'\n  },\n  */\n  globe: {\n    command: function (params) {\n      bp.open('globe');\n    },\n    description: '3-D Geo Map of World.',\n    icon: 'globe'\n  },\n  hex: {\n    command: function (params) {\n      bp.open('hex-editor');\n    },\n    description: 'Hex Editor. Write and Compile Hex Code',\n    icon: 'hex-editor'\n  },\n  hack: {\n    command: function (params) {\n      bp.open('hacker-typer');\n    },\n    description: 'A.I. Assisted Auto-Hacking Console',\n    icon: 'hackertyper'\n  },\n  hacks: {\n    command: function (params) {\n      bp.apps.desktop.openFolder('Hacking Tools');\n    },\n    description: 'Stay Entertained with Hacking Tools',\n    icon: 'hackertyper'\n  },\n  help: {\n    // show card\n    command: function (params, context) {\n      console.log('help command', params, context);\n      bp.apps.buddylist.showCard({ chatWindow: context.chatWindow, cardName: 'help' });\n      return;\n    },\n    description: 'Buddy Pond Help and Support',\n    icon: 'help'\n  },\n  youtube: {\n    command: function (params) {\n      bp.open('youtube');\n    },\n    description: 'Interdimensional Cable',\n    icon: 'interdimensionalcable'\n  },\n  /*\n  instruments: {\n    command: 'desktop.ui.openWindow(\"midifighter\");',\n    description: 'Opens Musical Instruments',\n    icon: 'midifighter'\n  },\n  */\n  /*\n  midi: {\n    command: 'desktop.ui.openWindow(\"midi\");',\n    description: 'Audio MIDI Setup',\n    icon: 'midi'\n  },\n  */\n  /*\n  midifighter: {\n    command: 'desktop.ui.openWindow(\"midifighter\");',\n    description: 'MIDI Fighter styled Music Pad.',\n    icon: 'midifighter'\n  },\n  */\n  maps: {\n    command: function (params) {\n      bp.open('maps');\n    },\n    description: '2-D Geo Maps of world.',\n    icon: 'maps'\n  },\n  /*\n  memepool: {\n    command: 'desktop.ui.openWindow(\"memepool\");',\n    description: 'Manage and Catalog your Memes.',\n    icon: 'memepool'\n  },\n  */\n  /*\n  meme: {\n    command: function(params) {\n      // handled by server via sendMessage code path\n    }\n  },\n  */\n  /*\n  memes: {\n    command: 'desktop.ui.openWindow(\"memepool\");',\n    description: 'Mnemosyne - A.I. Powered Meme Oracle',\n    icon: 'memepool'\n  },\n  */\n  /*\n  merlin: {\n    command: function(params) {\n      bp.open('merlin');\n    },      description: 'Merlin Automated Assistant',\n    icon: 'merlin'\n  },\n  */\n  /*\n  office: {\n    command: 'desktop.ui.openWindow(\"libreoffice\");',\n    description: 'Libre Office',\n    icon: 'libreoffice'\n  },\n  */\n  nes: {\n    command: function (params) {\n      bp.open('emulator', {\n        context: 'nes'\n      });\n    },\n    description: 'Nintendo Entertainment System',\n    icon: 'nes'\n  },\n  n64: {\n    command: function (params) {\n      bp.open('emulator', {\n        context: 'n64'\n      });\n    },\n    description: 'Nintendo 64',\n    icon: 'n64'\n  },\n  snes: {\n    command: function (params) {\n      bp.open('emulator', {\n        context: 'snes'\n      });\n    },\n    description: 'Super Nintendo Entertainment System',\n    icon: 'snes'\n  },\n  sega: {\n    command: function (params) {\n      bp.open('emulator', {\n        context: 'sega'\n      });\n    },\n    description: 'Sega Genesis',\n    icon: 'sega'\n  },\n  atari2600: {\n    command: function (params) {\n      bp.open('emulator', {\n        context: 'atari2600'\n      });\n    },\n    description: 'Atari 2600',\n    display: false,\n    icon: 'atari2600'\n  },\n  minesweeper: {\n    command: function (params) {\n      bp.open('minesweeper');\n    },\n    description: 'Classic Minesweeper Puzzle Game',\n    icon: 'minesweeper'\n  },\n  pad: {\n    command: function (params) {\n      bp.open('pad');\n    },\n    description: 'Create hosted Apps for Buddy Pond',\n    icon: 'pad'\n  },\n  sampler: {\n    command: function (params) {\n      bp.open('sampler');\n    },\n    description: 'Audio Sampler. Create and Remix Audio',\n    icon: 'sampler'\n  },\n  solitaire: {\n    command: function (params) {\n      bp.open('solitaire');\n    },\n    description: 'Classic Solitaire Card Game',\n    icon: 'solitaire'\n  },\n  /*\n\n  paint: {\n    command: function (params) {\n      bp.open('paint');\n      //let str = `desktop.ui.openWindow(\"paint\", { output: '${params.output}', context: '${params.context}' });`\n      //return str;\n    },\n    description: 'Paint Editor. Draw cool paintings for Buddies.',\n    icon: 'paint'\n  },\n  profile: {\n    command: function (params) {\n      if (params && params.length > 0) {\n        bp.open('profile', { type: params[0] });\n      } else {\n        bp.open('profile');\n      }\n    },\n    description: 'Buddy Profile Settings',\n    icon: 'profile'\n  },\n  /*\n  mtv: {\n    command: 'desktop.ui.openWindow(\"mtv\");',\n    description: 'Non-stop Music Videos',\n    icon: 'mtv'\n  },\n  */\n   camera: {\n    command: function (params) {\n      bp.open('camera');\n    },\n\n    description: 'Camera with Visual Effects',\n    icon: 'mirror'\n  },\n  gif: {\n    command: function (params) {\n      bp.open('image-search');\n    },\n    description: 'Search and Create Animated GIFs',\n    icon: 'gifstudio'\n  },\n  image: {\n    command: function (params) {\n      bp.open('image-search');\n    },\n    description: 'Search and Create Images',\n    icon: 'image'\n  },\n\n  mantra: {\n    command: function (params) {\n      bp.open('mantra');\n    },\n    description: 'Mantra Gaming Engine Demo',\n    icon: 'mantra'\n  },\n\n  mute: {\n    command: function (params) {\n      console.log('mute command', params);\n      bp.apps.desktop.toggleMute();\n    },\n    description: 'Mute the Audio',\n    icon: 'mute'\n  },\n  piano: {\n    command: function (params) {\n      bp.open('piano');\n    },\n    description: 'Tiny Piano Synth Keyboard for Jamming',\n    icon: 'piano'\n  },\n  soundcloud: {\n    command: function (params) {\n      bp.open('soundcloud');\n    },\n    description: 'Curated Music Playlists and Featured Buddies',\n    icon: 'soundcloud'\n  },\n  record: {\n    command: function (params) {\n      bp.open('soundrecorder');\n      //         let str = `desktop.ui.openWindow(\"soundrecorder\", { output: '${params.output}', context: '${params.context}' });`\n\n    },\n\n    description: 'Sound Recorder App. Record and Edit Audio',\n    icon: 'soundrecorder'\n  },\n  say: {\n    command: function(params) {\n      console.log('say params', params);\n      bp.apps.say.speak('params');\n    },\n    description: 'Text to Speech. Speak with Buddies',\n    icon: 'say'\n  },\n  /*\n  streamsquad: {\n    command: 'desktop.ui.openWindow(\"streamsquad\");',\n    description: 'Watch Live Streamers with your Buddies',\n    icon: 'soundrecorder'\n  },\n  */\n  /* TODO: > settings audio_tts_enabled false\n           // click to disable tts settings\n  settings: {\n    command: function(params) {\n      let str = `desktop.ui.openWindow(\"soundrecorder\", { output: '${params.output}', context: '${params.context}' });`\n      return str;\n    }\n  },\n  */\n  spellbook: {\n    command: function (params) {\n      bp.open('spellbook');\n    },\n    description: 'Spellbook. Cast Spells with Buddies',\n    icon: 'spellbook'\n  },\n  visuals: {\n    command: function (params) {\n      bp.open('audio-visual');\n    },\n    description: 'Audio Visualizer. Create Cool Visuals with Music',\n    icon: 'visuals'\n  }\n}","import Commands from './commands/defaultCommands.js';\n\nexport default class BuddyScript {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.commandActions = {};\n        this.commands = this.commandActions;\n    }\n\n    init() {\n        let defaultCommands = new Commands(this.bp);\n        // merge defaultCommands onto this.commandActions\n        Object.assign(this.commands, defaultCommands.commands);\n        // console.log(\"Merged commands\", this.commands);\n\n    }\n\n    isValidBuddyScript(command) {\n        // console.log(\"Checking if valid command\", command, this.commands);\n        return this.commands[command];\n    }\n\n    parseCommand(input, options = {}) {\n        if (!input || input.length < 2) {\n            // console.log('Invalid command length');\n            return false; // Ignore empty or too short commands\n        }\n        // alert(input)\n        let firstChar = input.substr(0, 1);\n        let commands = input.split(' ');\n        commands[0] = commands[0].substr(1); // Remove the first slash or backslash\n        // console.log('Parsing command', input, firstChar, commands);\n        if (firstChar === '\\\\') {\n            // alert('reverse command')\n            if (this.isValidBuddyScript(commands[0])) {\n                // console.log('running command', commands);\n                let commandData = this.commands[commands[0]];\n                // reverse shell commands will show the bs-card such that users can click on the command\n                // TODO: allow marak / admins to open apps remotely \n                return { command: commands.join(' '), type: 'show-card', input: input, commandData, options };\n            } else {\n                this.alertInvalidCommand();\n                return { type: 'invalid' };\n            }\n        }\n\n        if (firstChar === '/') {\n            // console.log('Handling pipes');\n            let commandData = this.commands[commands[0]];\n            // console.log('return pipe Running command', commands, commandData, options);\n            // instead of running handlePipes here, return an object that indicates the command is a pipable command\n            return { pipe: (options) => {\n                // console.log('pipe options', options);\n                return this.handlePipes(input, options);\n            }, command: commands.join(' '), type: 'execute', input: input, commandData, options };\n            // return this.handlePipes(input);\n        }\n\n        return false; // If no valid starting character, ignore\n    }\n\n    executeCommand(command, context, options = {}) {\n        if (this.commandActions[command]) {\n            // console.log(\"Executing command action\", command, context, this.commandActions[command]);\n            context.data = this.commandActions[command]; // maybe?\n            if (this.commandActions[command].fn) {\n                return this.commandActions[command].fn.call(this, context, options);\n            }\n            return this.commandActions[command].call(this, context, options);\n        } else {\n            // console.log(`Executing command: ${command}`);\n            console.log(command, context);\n            return true; // Default action if command is recognized but has no specific handler\n        }\n    }\n\n    handlePipes(input, options = {}) {\n        let parts = input.split('|');\n        let results = [];\n        let context = {}; // could also build a context object here\n        // console.log(\"Handling pipes\", parts);\n        for (let part of parts) {\n            let commandParts = part.trim().split(' ');\n            let command = commandParts[0].substr(1);\n            let commandArgs = commandParts.slice(1);\n            // console.log(\"aaCommand parts\", command, commandParts, commandArgs);\n            if (this.isValidBuddyScript(command)) {\n                results.push(this.executeCommand(command, commandArgs, options));\n            } else {\n                this.alertInvalidCommand();\n                return { type: 'invalid' };\n            }\n        }\n\n        return results;\n    }\n\n    alertInvalidCommand() {\n        console.log('Invalid BuddyScript. Will not send.');\n    }\n\n    addCommand(name, action) {\n        console.log('Adding command', name, action);\n        this.commandActions[name] = {\n            fn: action,\n            //            object: { command: name }\n        };\n    }\n\n    removeCommand(name) {\n        delete this.commands[name];\n    }\n}\n"],"names":["Commands","bp","this","commands","command","legacyCommands","commandObj","commandStr","evaler","context","options","params","console","log","eval","fn","object","av","open","description","icon","apps","buddylist","showCard","chatWindow","cardName","balance","length","type","cast","bs","coin","files","give","leaderboard","markdown","portfolio","logout","fluids","games","desktop","openFolder","pond","globe","hex","hack","hacks","help","youtube","maps","nes","n64","snes","sega","atari2600","display","minesweeper","pad","sampler","solitaire","camera","gif","image","mantra","mute","toggleMute","piano","soundcloud","record","say","speak","spellbook","visuals","BuddyScript","constructor","commandActions","init","defaultCommands","Object","assign","isValidBuddyScript","parseCommand","input","firstChar","substr","split","commandData","join","alertInvalidCommand","pipe","handlePipes","executeCommand","data","call","parts","results","part","commandParts","trim","commandArgs","slice","push","addCommand","name","action","removeCommand"],"mappings":"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"}