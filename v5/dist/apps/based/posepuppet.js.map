{"version":3,"file":"posepuppet.js","sources":["../../../apps/based/posepuppet/posepuppet.js"],"sourcesContent":["export default class PosePuppet {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n        this.waveCount = 0; // Track number of wave gestures\n        this.isSpinning = false; // Flag for spin animation\n        this.spinAngle = 0; // Current spin angle\n        this.backgroundColor = 'rgb(50, 50, 100)'; // Default background\n        return this;\n    }\n\n    async init() {\n        await this.bp.appendScript('https://cdn.jsdelivr.net/npm/@mediapipe/pose');\n        await this.bp.appendScript('https://cdn.jsdelivr.net/npm/@mediapipe/camera_utils');\n        await this.bp.appendCSS('/v5/apps/based/posepuppet/pose-puppet.css');\n        return 'loaded PosePuppet';\n    }\n\n    async open() {\n        this.win = this.bp.window(this.window());\n        this.startPosePuppet();\n        this.win.maximize();\n        return this.win;\n    }\n\n    window() {\n        const content = `\n        <video class=\"pose-puppet-video\" id=\"video\" width=\"640\" height=\"480\" autoplay style=\"display:none;\"></video>\n        <canvas id=\"canvas\" width=\"640\" height=\"480\" style=\"cursor:none;\"></canvas>\n        <div style=\"position:absolute; top:10px; left:10px; color:white; font-size:14px;\" id=\"status\">\n            üßç PosePuppet | Waves: 0 | B: Change Background, R: Reset\n        </div>\n        `;\n        return {\n            id: 'posepuppet',\n            title: 'PosePuppet',\n            icon: 'desktop/assets/images/icons/icon_puppet_64.png',\n            x: 300,\n            y: 100,\n            width: 700,\n            height: 520,\n            content,\n            parent: $('#desktop')[0],\n            resizable: true,\n            maximizable: true,\n            closable: true,\n        };\n    }\n\n    isWaveGesture(landmarks) {\n        // Wave: Both wrists above shoulders\n        const leftWrist = landmarks[15]; // Left wrist\n        const rightWrist = landmarks[16]; // Right wrist\n        const leftShoulder = landmarks[11]; // Left shoulder\n        const rightShoulder = landmarks[12]; // Right shoulder\n        return leftWrist.y < leftShoulder.y && rightWrist.y < rightShoulder.y;\n    }\n\n    async startPosePuppet() {\n        const video = document.getElementById('video');\n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext('2d');\n        const status = document.getElementById('status');\n\n        let latestLandmarks = null; // üëà cache the latest pose\n\n        document.addEventListener('keydown', (e) => {\n            switch (e.key.toLowerCase()) {\n                case 'b':\n                    this.backgroundColor = `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`;\n                    status.innerText = `üßç PosePuppet | Waves: ${this.waveCount} | B: Change Background, R: Reset`;\n                    break;\n                case 'r':\n                    this.waveCount = 0;\n                    this.isSpinning = false;\n                    this.spinAngle = 0;\n                    status.innerText = `üßç PosePuppet | Waves: ${this.waveCount} | B: Change Background, R: Reset`;\n                    break;\n            }\n        });\n\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        video.srcObject = stream;\n        await new Promise(resolve => (video.onloadeddata = resolve));\n        video.play();\n\n        const pose = new Pose({\n            locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n        });\n\n        pose.setOptions({\n            modelComplexity: 1,\n            smoothLandmarks: true,\n            minDetectionConfidence: 0.7,\n            minTrackingConfidence: 0.7\n        });\n\n        const camera = new Camera(video, {\n            onFrame: async () => await pose.send({ image: video }),\n            width: 640,\n            height: 480,\n        });\n        camera.start();\n\n        pose.onResults((results) => {\n            if (!results.poseLandmarks) {\n                latestLandmarks = null;\n                return;\n            }\n            latestLandmarks = results.poseLandmarks;\n        });\n\n        const drawPuppet = (landmarks) => {\n            const width = canvas.width;\n            const height = canvas.height;\n\n            // Map landmarks\n            const map = i => ({ x: landmarks[i].x * width, y: landmarks[i].y * height });\n            const leftShoulder = map(11), rightShoulder = map(12);\n            const leftElbow = map(13), rightElbow = map(14);\n            const leftWrist = map(15), rightWrist = map(16);\n            const leftHip = map(23), rightHip = map(24);\n            const leftKnee = map(25), rightKnee = map(26);\n            const leftAnkle = map(27), rightAnkle = map(28);\n\n            const centerX = (leftHip.x + rightHip.x) / 2;\n            const centerY = (leftHip.y + rightHip.y) / 2;\n            const shoulderMid = { x: (leftShoulder.x + rightShoulder.x) / 2, y: (leftShoulder.y + rightShoulder.y) / 2 };\n\n            ctx.strokeStyle = 'white';\n            ctx.lineWidth = 4;\n            ctx.fillStyle = 'white';\n\n            ctx.beginPath();\n            ctx.moveTo(shoulderMid.x, shoulderMid.y);\n            ctx.lineTo(centerX, centerY);\n            ctx.stroke();\n\n            const drawLimb = (a, b, c) => {\n                ctx.beginPath();\n                ctx.moveTo(a.x, a.y);\n                ctx.lineTo(b.x, b.y);\n                ctx.lineTo(c.x, c.y);\n                ctx.stroke();\n            };\n\n            drawLimb(leftShoulder, leftElbow, leftWrist);\n            drawLimb(rightShoulder, rightElbow, rightWrist);\n            drawLimb(leftHip, leftKnee, leftAnkle);\n            drawLimb(rightHip, rightKnee, rightAnkle);\n\n            // Head\n            ctx.beginPath();\n            ctx.arc(shoulderMid.x, shoulderMid.y - 30, 20, 0, 2 * Math.PI);\n            ctx.fill();\n\n            // Joints\n            [leftShoulder, rightShoulder, leftElbow, rightElbow, leftWrist, rightWrist, leftHip, rightHip, leftKnee, rightKnee, leftAnkle, rightAnkle].forEach(joint => {\n                ctx.beginPath();\n                ctx.arc(joint.x, joint.y, 5, 0, 2 * Math.PI);\n                ctx.fill();\n            });\n\n            if (this.isWaveGesture(landmarks) && !this.isSpinning) {\n                this.waveCount++;\n                this.isSpinning = true;\n                status.innerText = `üßç PosePuppet | Waves: ${this.waveCount} | B: Change Background, R: Reset`;\n            }\n        };\n\n        const renderLoop = () => {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = this.backgroundColor;\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            if (latestLandmarks) {\n                drawPuppet(latestLandmarks);\n            } else {\n                status.innerText = `üßç PosePuppet | Waves: ${this.waveCount} | No body detected | B: Change Background, R: Reset`;\n            }\n\n            requestAnimationFrame(renderLoop);\n        };\n\n        requestAnimationFrame(renderLoop);\n    }\n\n}"],"names":["PosePuppet","constructor","bp","options","this","waveCount","isSpinning","spinAngle","backgroundColor","init","appendScript","appendCSS","open","win","window","startPosePuppet","maximize","id","title","icon","x","y","width","height","content","parent","$","resizable","maximizable","closable","isWaveGesture","landmarks","leftWrist","rightWrist","leftShoulder","rightShoulder","video","document","getElementById","canvas","ctx","getContext","status","latestLandmarks","addEventListener","e","key","toLowerCase","Math","random","innerText","stream","navigator","mediaDevices","getUserMedia","srcObject","Promise","resolve","onloadeddata","play","pose","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","Camera","onFrame","async","send","image","start","onResults","results","poseLandmarks","drawPuppet","map","i","leftElbow","rightElbow","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","centerX","centerY","shoulderMid","strokeStyle","lineWidth","fillStyle","beginPath","moveTo","lineTo","stroke","drawLimb","a","b","c","arc","PI","fill","forEach","joint","renderLoop","clearRect","fillRect","requestAnimationFrame"],"mappings":"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"}