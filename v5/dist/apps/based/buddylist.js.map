{"version":3,"file":"buddylist.js","sources":["../../../apps/based/buddylist/lib/renderOrUpdateBuddyInBuddyList.js","../../../apps/based/buddylist/lib/message/parseMarkdownWithoutPTags.js","../../../apps/based/buddylist/lib/message/createChatMessageElement.js","../../../apps/based/buddylist/lib/forbiddenNotes.js","../../../apps/based/buddylist/lib/message/checkForLinksInMessage.js","../../../apps/based/buddylist/lib/message/isValidUrl.js","../../../apps/based/buddylist/lib/message/isValidYoutubeLink.js","../../../apps/based/buddylist/lib/message/isValidGithubLink.js","../../../apps/based/buddylist/lib/message/setupInputEvents.js","../../../apps/based/buddylist/lib/message/setupAutocomplete.js","../../../apps/based/buddylist/lib/ChatWindowButtonBar.js","../../../apps/based/buddylist/lib/message/setupChatWindowButtons.js","../../../apps/based/buddylist/lib/message/populateRoomList.js","../../../apps/based/buddylist/lib/openChatWindow.js","../../../apps/based/buddylist/lib/defaultProfileFiles.js","../../../apps/based/buddylist/lib/generateDefaultProfile.js","../../../apps/based/buddylist/lib/message/bindMessageContextMenu.js","../../../apps/based/buddylist/lib/ws/Client.js","../../../apps/based/buddylist/buddylist.js","../../../apps/based/buddylist/lib/ws/createWebSocketClient.js","../../../apps/based/buddylist/lib/defaultChatWindowButtons.js","../../../apps/based/buddylist/lib/message/renderGeoFlag.js","../../../apps/based/buddylist/lib/message/renderChatMessage.js","../../../apps/based/buddylist/lib/renderBuddyRequests.js","../../../apps/based/buddylist/lib/processProfile.js","../../../apps/based/buddylist/lib/buddylistUIEvents.js","../../../apps/based/buddylist/lib/requestDefaultCoinAllocations.js","../../../apps/based/buddylist/lib/sortBuddyList.js","../../../apps/based/buddylist/lib/showContextMenu.js","../../../apps/based/buddylist/lib/message/createMessageContextMenu.js","../../../apps/based/buddylist/lib/loadUserApps.js","../../../apps/based/buddylist/lib/message/sendMessageHandler.js","../../../apps/based/buddylist/lib/message/showCard.js","../../../apps/based/buddylist/lib/message/scrollToBottom.js","../../../apps/based/buddylist/lib/buddy/defaultAvatarSvg.js"],"sourcesContent":["// Timeout is for legacy API before websocket connections\n// We should now have a reliable way to track buddy status via websocket disconnect events\n// 15 minute hard-code timeout ( if setStatus() was missed )\nlet buddyTimeoutsInterval = 1000 * 60 * 60 * 5; // 5 hours, shoudn't be needed unless unknown error on server\n\nexport default function renderOrUpdateBuddyInBuddyList(data) {\n  let bp = this.bp;\n  let buddyname = data.name;\n  let buddydata = data.profile;\n\n  this.bp.buddyTimeouts = this.bp.buddyTimeouts || {};\n\n  // console.log('renderOrUpdateBuddyInBuddyList', buddyname, buddydata);\n\n  // Track previous connection status to detect changes\n  let buddyListItems = document.querySelectorAll('.buddylist li');\n  let existingBuddy = Array.from(buddyListItems).find(el => el.dataset.buddy === buddyname);\n  let wasConnected = existingBuddy ? existingBuddy.querySelector('.buddy-status').textContent.includes('🟢') : false;\n\n  // Handle status update only if status field is present\n  if (buddydata.hasOwnProperty('status')) {\n    if (buddydata.status === 'online') {\n      buddydata.isConnected = true;\n    } else {\n      buddydata.isConnected = false;\n    }\n\n    // console.log('isConnected', buddydata.isConnected, buddyname, buddydata.status);\n\n    // Clear the timeout if it exists\n    if (this.bp.buddyTimeouts[buddyname]) {\n      clearTimeout(this.bp.buddyTimeouts[buddyname]);\n      delete this.bp.buddyTimeouts[buddyname];\n    }\n\n    // Remark: Added 5/18/2025: Adds check if user hasn't been online for a while ( this is needed for legacy API )\n    // This may still stay in as CF worker could miss disconnect events\n    // TODO: consider re-implementing a keepAlive ping each 30 minutes\n    let now = new Date().getTime();\n    //console.log('BuddyList: buddydata.utime', buddyname, buddydata.utime, 'now', now);\n    let diff = now - buddydata.utime;\n    //console.log('BuddyList: diff', buddyname, buddydata.utime, diff, buddyTimeoutsInterval);  \n    // console.log('buddydata.utime', buddydata.utime, 'now', now, 'diff', diff);\n    // console.log('BuddyList: diff', buddyname, buddydata.utime, diff, buddyTimeoutsInterval);\n    // If buddy hasn't been online for a while, set them to offline\n    if (buddydata.isConnected && diff > buddyTimeoutsInterval) {\n      // console.log('Setting offline due to timeout', buddyname, buddydata.utime, diff);\n      // TODO: add this back in?\n      buddydata.isConnected = false;\n    }\n\n    /*\n    Remark: Removed 5/17/2025, no longer depending on utime / keepAlives\n    let now = new Date().getTime();\n    let diff = now - buddydata.utime;\n    if (now - buddydata.utime > buddyTimeoutsInterval) {\n      // console.log('Setting offline due to timeout', buddyname, buddydata.utime, diff);\n      buddydata.isConnected = false;\n    }\n    */\n    // Remark: Removed 5/17/2025, no longer depending on utime / keepAlives\n    // We may need to add this back in the future for cases when CF worker abruptly disconnects\n    // This would rely on a ping mechanism to keep the connection alive and update the utime\n    // Set a timeout to mark buddy as offline if they are currently connected\n    /*\n    if (buddydata.isConnected) {\n      this.bp.buddyTimeouts[buddyname] = setTimeout(() => {\n        let _data = {\n          name: buddyname,\n          profile: {\n            buddyname: buddyname,\n            isConnected: false,\n            status: 'offline',\n            utime: new Date().getTime(),\n            dtime: new Date().getTime(),\n            newMessages: false\n          }\n        };\n        renderOrUpdateBuddyInBuddyList.call(this, _data, false);\n      }, buddyTimeoutsInterval * 1.5);\n    }\n    */\n\n    // Play sound based on status change\n    // Don't play sound if buddy is me\n    if (buddyname !== this.bp.me) {\n      if (buddydata.isConnected && !wasConnected) {\n        // compare now time with buddydata.utime\n        // if less than 5 seconds, don't play sound\n        let now = new Date().getTime();\n        let diff = now - buddydata.utime;\n        if (diff > 300) {\n          bp.play('desktop/assets/audio/BUDDY-IN.mp3'); // Buddy comes online\n        }\n      } else if (!buddydata.isConnected && wasConnected) {\n        // Remark: Removed the signout sound as it was too loud / jarring\n        // bp.play('desktop/assets/audio/BUDDY-OUT.wav'); // Buddy goes offline\n      }\n    }\n  }\n\n  // Use existing isConnected if available, otherwise derive from DOM state\n  let isConnected = buddydata.hasOwnProperty('isConnected') ? buddydata.isConnected : wasConnected;\n  // console.log(buddydata);\n  if (buddydata.newMessages && buddydata.newMessages) {\n    isConnected = true;\n    this.bp.apps.buddylist.openChatWindow({ context: buddyname, type: 'buddy' });\n  }\n\n  let connectedStatusIcon = isConnected ? '🟢' : '🟠';\n  let isCalling = buddydata.isCalling ? '<span>📞</span>' : '';\n  let newMessages = buddydata.newMessages ? '<span>💬</span>' : '';\n\n  let lastSeen = buddydata.utime ? buddydata.utime : 0;\n  let lastSeenDate = new Date(lastSeen);\n  let lastSeenString = '';\n\n  try {\n    lastSeenString = 'Last seen: ' + lastSeenDate.toLocaleString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: true\n    });\n  } catch (err) {\n    console.log('Error formatting last seen date', err);\n  }\n\n  // Update or create buddy list item\n  let buddyListItemEl;\n  if (existingBuddy) {\n    // Update existing element to prevent flicker\n    buddyListItemEl = existingBuddy;\n    buddyListItemEl.dataset.utime = buddydata.utime;\n    buddyListItemEl.title = lastSeenString;\n    buddyListItemEl.querySelector('.buddy-status').innerHTML = `${newMessages}${connectedStatusIcon}${isCalling}`;\n    buddyListItemEl.querySelector('.message-buddy').textContent = buddyname;\n    buddyListItemEl.style.display = buddydata.status === 'hidden' ? 'none' : '';\n  } else {\n    // Create new element if buddy doesn't exist\n    let buddyListItem = `<li data-buddy=\"${buddyname}\" data-utime=\"${buddydata.utime}\" class=\"buddy-message-sender\" title=\"${lastSeenString}\">\n                          <span class=\"buddy-status\">${newMessages}${connectedStatusIcon}${isCalling}</span> \n                          <span data-buddy=\"${buddyname}\" class=\"message-buddy\" href=\"#\" draggable=\"false\">${buddyname}</span>\n                        </li>`;\n    buddyListItemEl = document.createElement('div');\n    buddyListItemEl.innerHTML = buddyListItem;\n    buddyListItemEl = buddyListItemEl.firstChild;\n\n    if (buddydata.status === 'hidden') {\n      buddyListItemEl.style.display = 'none';\n    }\n  }\n\n  if (buddydata.utime) {\n    let formattedDate = DateFormat.format.date(buddydata.utime, 'E MMMM dd, hh:mm:ss a');\n    $(buddyListItemEl).find('.buddy-status').attr('title', formattedDate);\n  }\n\n  // Append new buddy or ensure existing one is in the list\n  if (!existingBuddy) {\n    $('.buddylist').append(buddyListItemEl);\n  }\n\n  // Re-sort the entire buddy list\n  this.sortBuddyList();\n\n  // Add context menu functionality\n  attachContextMenu.call(this, buddyListItemEl);\n}\n\nfunction attachContextMenu(buddyElement) {\n  $(buddyElement).on('contextmenu', (e) => {\n    e.preventDefault();\n    let buddyName = e.target.closest('li').dataset.buddy;\n    this.showContextMenu(e.pageX, e.pageY, buddyName);\n  });\n}","// Function to remove outer <p> tags\nexport default function parseMarkdownWithoutPTags(markdown) {\n  if (!markdown) return ''; // empty text\n\n\n  if (isEmojiOnly(markdown)) {\n    return renderBigEmojiHTML(markdown);\n  }\n\n  // Supported colors and styles\n  const supportedColors = ['red', 'blue', 'green', 'yellow', 'purple', 'orange', 'black', 'white', 'gray', 'cyan', 'magenta', 'pink'];\n  const supportedStyles = ['bold', 'italic', 'underline', 'strike', 'blink', 'reverse', 'hidden', 'dim', 'rainbow'];\n\n  // Custom renderer for links to add target=\"_blank\"\n  const linkExtension = {\n    name: 'link',\n    level: 'inline',\n    renderer(token) {\n      // Ensure href is properly encoded\n      const href = token.href.replace(/\"/g, '&quot;');\n      // Add target=\"_blank\" and rel=\"noopener\" for security\n      return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener\">${this.parser.parseInline(token.tokens)}</a>`;\n    }\n  };\n\n\n  const styleExtension = {\n    name: 'style',\n    level: 'inline',\n\n    tokenizer(src) {\n      const match = /^((?:\\w+\\.)*\\w+)\\(\\s*([\\s\\S]+?)\\s*\\)/.exec(src);\n      if (match) {\n        const raw = match[0];\n        const modifiers = match[1].split('.');\n        const text = match[2];\n\n        const isValid = modifiers.every(mod => supportedColors.includes(mod) || supportedStyles.includes(mod));\n        if (!isValid) return;\n\n        return {\n          type: 'style',\n          raw,\n          modifiers,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    },\n\n    renderer(token) {\n      let content = this.parser.parseInline(token.tokens);\n\n      // Apply modifiers in reverse order to maintain proper nesting\n      token.modifiers.reverse().forEach(mod => {\n        if (supportedColors.includes(mod)) {\n          content = `<span style=\"color: ${mod};\">${content}</span>`;\n        } else if (mod === 'bold') {\n          content = `<strong>${content}</strong>`;\n        } else if (mod === 'italic') {\n          content = `<em>${content}</em>`;\n        } else if (mod === 'underline') {\n          content = `<u>${content}</u>`;\n        } else if (mod === 'strike') {\n          content = `<s>${content}</s>`;\n        } else if (mod === 'blink') {\n          // Using CSS animation instead of deprecated <blink> tag\n          content = `<span style=\"animation: blink 1s step-start infinite;\">${content}</span>`;\n        } else if (mod === 'reverse') {\n          content = content.split('').reverse().join('');\n        } else if (mod === 'hidden') {\n          content = `<span style=\"visibility: hidden;\" onmouseover=\"this.style.visibility='visible'\" onmouseout=\"this.style.visibility='hidden'\">${content}</span>`;\n        } else if (mod === 'dim') {\n          content = `<span style=\"opacity: 0.5;\">${content}</span>`;\n        } else if (mod === 'rainbow') {\n          content = content\n            .split('')\n            .map((char, i) => `<span style=\"color: hsl(${(i * 360) / content.length}, 100%, 50%);\">${char}</span>`)\n            .join('');\n        }\n      });\n\n      return content;\n    },\n\n    walkTokens(token) {\n      if (token.type === 'style') {\n        console.log(`Detected style token: ${token.modifiers.join('.')}`);\n      }\n    }\n  };\n\n  marked.use({ extensions: [styleExtension, linkExtension] });\n\n  let html;\n  try {\n    html = marked.parse(markdown);\n  } catch (error) {\n    html = markdown;\n  }\n\n  return html.replace(/^<p>(.*?)<\\/p>\\s*$/s, '$1');\n  // Explanation:\n  // ^<p>       → Matches the opening <p> at the start\n  // (.*?)      → Captures the content inside (non-greedy)\n  // <\\/p>\\s*$  → Matches the closing </p> with optional trailing whitespace\n  // $1         → Returns only the captured content\n}\n\n// Shared helper: Split emoji-aware graphemes\nfunction splitEmojiGraphemes(text) {\n  const splitter = new GraphemeSplitter();\n  return splitter.splitGraphemes(text.trim());\n}\n\n// Strip variation selector (U+FE0F) for matching against EMOJIS\nfunction normalizeEmoji(str) {\n  return str.replace(/\\uFE0F/g, '');\n}\n\nfunction isEmojiOnly(text) {\n  if (!text) return false;\n\n  const graphemes = splitEmojiGraphemes(text);\n  const emojiList = new Set(Object.keys(EMOJIS));\n\n  const emojis = graphemes.filter(g => \n    emojiList.has(g) || emojiList.has(normalizeEmoji(g))\n  );\n\n  return emojis.length > 0 &&\n    emojis.length <= 7 &&\n    emojis.join('') === text.trim();\n}\n\n// Render big emoji HTML\nfunction renderBigEmojiHTML(text) {\n  const graphemes = splitEmojiGraphemes(text);\n  return `<div class=\"emoji-only\">` +\n    graphemes.map(g => `<span class=\"big-emoji\">${g}</span>`).join('') +\n    `</div>`;\n}","import renderGeoFlag from './renderGeoFlag.js';\nimport parseMarkdownWithoutPTags from './parseMarkdownWithoutPTags.js';\n\n// Configuration\nconst config = {\n  useMarkdown: true,\n  allowHTML: true,\n};\n\n// New function to create hover menu\n// TODO: remove buttons, just use icons\n// TODO: update bindMessageContextMenu() method to bind to the icons instead of buttons\nfunction createHoverMenu(message) {\n  const hoverMenu = document.createElement('div');\n  hoverMenu.className = \n  'aim-hover-menu';\n\n  const menuItems = [];\n\n  if (message.from === this.bp.me || this.bp.me === 'Marak') { // TODO: admin rbac\n    menuItems.push({ text: 'Edit Message', action: 'edit-message',  icon: 'fa-duotone fa-regular fa-pencil' });\n  }\n\n  menuItems.push({ text: 'Reply Message', action: 'reply-message', icon: 'fa-duotone fa-regular fa-reply' });\n  menuItems.push({ text: '...', action: 'more-options', icon: 'fa-solid fa-regular fa-ellipsis' });\n\n\n  menuItems.forEach(item => {\n    const button = document.createElement('button');\n    button.setAttribute('data-action', item.action);\n    button.className = 'aim-hover-menu-item';\n\n    if (item.icon) {\n      const icon = document.createElement('i');\n      icon.className = item.icon;\n      button.appendChild(icon);\n      button.appendChild(document.createTextNode(' ')); // Add space between icon and text\n    } else {\n      button.appendChild(document.createTextNode(item.text));\n    }\n    // set title hint with item.text  \n    button.setAttribute('title', item.text);\n    hoverMenu.appendChild(button);\n  });\n\n  return hoverMenu;\n}\n\nexport default function createChatMessageElement(message, messageTime, chatWindow, container) {\n  // Create main message container\n  const chatMessage = document.createElement('div');\n  chatMessage.className = 'aim-chat-message';\n  chatMessage.setAttribute('data-id', message.id);\n  chatMessage.setAttribute('data-from', message.from);\n  chatMessage.setAttribute('data-to', message.to);\n  chatMessage.setAttribute('data-type', message.type);\n  chatMessage.setAttribute('data-uuid', message.uuid);\n  chatMessage.setAttribute('data-chat-id', message.chatId);\n\n  // Profile picture (SVG)\n  const profilePicture = document.createElement('div');\n  profilePicture.className = 'aim-profile-picture';\n\n  if (!message.profilePicture) {\n    // check if we happen to have a profilePicture in local cache\n    // this may happen if Randolph or other admin is sending messages on behalf of a user\n    // TODO: better way to do this...\n    if (\n      this.bp.apps.buddylist.data.profileState &&\n      this.bp.apps.buddylist.data.profileState.buddylist &&\n      this.bp.apps.buddylist.data.profileState.buddylist[message.from] && \n      this.bp.apps.buddylist.data.profileState.buddylist[message.from].profile_picture) {\n      message.profilePicture = this.bp.apps.buddylist.data.profileState.buddylist[message.from].profile_picture;\n    }\n\n  }\n\n  if (message.profilePicture) {\n    // use url as profile picture src\n    const img = document.createElement('img');\n    img.src = message.profilePicture;\n    img.alt = `${message.from}'s avatar`;\n    img.className = 'aim-chat-message-profile-picture-img';\n    profilePicture.appendChild(img);\n  } else {\n    const defaultAvatar = this.defaultAvatarSvg(message.from);\n    profilePicture.innerHTML = defaultAvatar;\n  }\n\n  // console.log('profilePicture', profilePicture);\n  profilePicture.alt = `${message.from}'s avatar`;\n\n  // Message content wrapper\n  const contentWrapper = document.createElement('div');\n  contentWrapper.className = 'aim-content-wrapper';\n\n  // Message header (sender + timestamp)\n  const messageHeader = document.createElement('div');\n  messageHeader.className = 'aim-message-header';\n\n  const sender = document.createElement('span');\n  sender.className = 'aim-sender';\n  sender.textContent = message.from === 'anonymous'\n    ? `Anonymous (${message.tripcode || 'tr1pc0d3'})`\n    : message.from;\n\n  const timestamp = document.createElement('span');\n  timestamp.className = 'aim-timestamp';\n  timestamp.textContent = messageTime;\n\n  // Message meta (geoflag + badges placeholder)\n  const messageMeta = document.createElement('div');\n  messageMeta.className = 'aim-message-meta';\n\n  const geoFlag = renderGeoFlag(message);\n  const badgesContainer = document.createElement('span');\n  badgesContainer.className = 'aim-badges';\n\n  messageMeta.appendChild(geoFlag);\n  messageMeta.appendChild(badgesContainer);\n\n  messageHeader.appendChild(sender);\n  messageHeader.appendChild(messageMeta);\n  messageHeader.appendChild(timestamp);\n\n  // Reply indicator (if message is a reply)\n  let replyIndicator = null;\n  if (message.replyto) {\n    const repliedMessage = chatWindow.content.querySelector(\n      `.aim-chat-message[data-uuid=\"${message.replyto}\"]`\n    );\n    if (repliedMessage) {\n      const repliedSender = repliedMessage.querySelector('.aim-sender')?.textContent || 'Unknown';\n      const repliedText = repliedMessage.querySelector('.aim-message-content')?.innerText || '';\n\n      replyIndicator = document.createElement('div');\n      replyIndicator.className = 'aim-reply-indicator';\n      replyIndicator.innerHTML = `\n        <span class=\"aim-reply-sender\">${repliedSender}</span>\n        <span class=\"aim-reply-content\">${repliedText}</span>\n      `;\n\n      // Add click handler to scroll to the replied message\n      const replySender = replyIndicator.querySelector('.aim-reply-sender');\n      replySender.addEventListener('click', () => {\n        repliedMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        repliedMessage.classList.add('aim-highlight');\n        setTimeout(() => repliedMessage.classList.remove('aim-highlight'), 2000);\n      });\n    }\n  }\n\n  // Message content\n  const messageContent = document.createElement('div');\n  messageContent.className = 'aim-message-content';\n\n  const processedText = config.useMarkdown\n    ? parseMarkdownWithoutPTags(message.text)\n    : message.text;\n\n  if (config.allowHTML) {\n    messageContent.innerHTML = processedText;\n  } else {\n    messageContent.textContent = processedText;\n  }\n\n  // Hover menu\n  const hoverMenu = createHoverMenu.call(this, message)\n\n  // Assemble message\n  contentWrapper.appendChild(messageHeader);\n  if (replyIndicator) {\n    contentWrapper.appendChild(replyIndicator);\n  }\n  contentWrapper.appendChild(messageContent);\n  contentWrapper.appendChild(hoverMenu);\n\n  chatMessage.appendChild(profilePicture);\n  chatMessage.appendChild(contentWrapper);\n\n  if (container) { // card container?\n    contentWrapper.appendChild(container);\n  }\n\n  // Image load handler\n  chatMessage.querySelectorAll('img').forEach(img => {\n    img.addEventListener('load', () => {\n      // Implement scrollToBottom when ready\n    });\n  });\n\n  insertChatMessage(chatWindow, message, chatMessage);\n  return chatMessage;\n}\n\nfunction insertChatMessage(chatWindow, message, chatMessage) {\n  // console.log('insertChatMessage', chatWindow, message, chatMessage);\n  let aimMessages = chatWindow.content.querySelector('.aim-messages');\n\n  if (message.type === 'pond') {\n    // console.log('Inserting message into pond chat window', message);\n    // TODO: find the specific .aim-messages-container for the pond\n    aimMessages = chatWindow.content.querySelector(`.aim-messages-container[data-context=\"${message.to}\"] .aim-messages`);\n    // console.log('Pond messages container found:', aimMessages);\n  }\n\n  if (!aimMessages) {\n    console.error('aim-messages not found. user most likely not in the chat window');\n    return;\n  }\n  const allMessages = Array.from(aimMessages.querySelectorAll('.aim-chat-message'));\n  let inserted = false;\n\n  for (const existingMessage of allMessages) {\n    const existingId = parseInt(existingMessage.getAttribute('data-id'), 10);\n    if (message.id < existingId) {\n      aimMessages.insertBefore(chatMessage, existingMessage);\n      inserted = true;\n      break;\n    }\n  }\n\n  if (!inserted) {\n    aimMessages.appendChild(chatMessage);\n  }\n\n  return chatMessage;\n}\n","// contains list of bad words we dont't want the Desktop to render\n// these are stored as Base64 so we don't have to see them introduced into the codebase\n// if you wish to view the list simply run: \"console.log(atob(forbiddenNotes.base64))\" in console\n\nlet forbiddenNotes = {\n  \"base64\": \"WyI0cjVlIiwiNWgxdCIsIjVoaXQiLCJhNTUiLCJhbmFsIiwiYW51cyIsImFyNWUiLCJhcnJzZSIsImFyc2UiLCJhc3MiLCJhc3MtZnVja2VyIiwiYXNzZXMiLCJhc3NmdWNrZXIiLCJhc3NmdWtrYSIsImFzc2hvbGUiLCJhc3Nob2xlcyIsImFzc3dob2xlIiwiYV9zX3MiLCJiIXRjaCIsImIwMGJzIiwiYjE3Y2giLCJiMXRjaCIsImJhbGxiYWciLCJiYWxscyIsImJhbGxzYWNrIiwiYmFzdGFyZCIsImJlYXN0aWFsIiwiYmVhc3RpYWxpdHkiLCJiZWxsZW5kIiwiYmVzdGlhbCIsImJlc3RpYWxpdHkiLCJiaStjaCIsImJpYXRjaCIsImJpdGNoIiwiYml0Y2hlciIsImJpdGNoZXJzIiwiYml0Y2hlcyIsImJpdGNoaW4iLCJiaXRjaGluZyIsImJsb29keSIsImJsb3cgam9iIiwiYmxvd2pvYiIsImJsb3dqb2JzIiwiYm9pb2xhcyIsImJvbGxvY2siLCJib2xsb2siLCJib25lciIsImJvb2IiLCJib29icyIsImJvb29icyIsImJvb29vYnMiLCJib29vb29icyIsImJvb29vb29vYnMiLCJicmVhc3RzIiwiYnVjZXRhIiwiYnVnZ2VyIiwiYnVtIiwiYnVubnkgZnVja2VyIiwiYnV0dCIsImJ1dHRob2xlIiwiYnV0dG11bmNoIiwiYnV0dHBsdWciLCJjMGNrIiwiYzBja3N1Y2tlciIsImNhcnBldCBtdW5jaGVyIiwiY2F3ayIsImNoaW5rIiwiY2lwYSIsImNsMXQiLCJjbGl0IiwiY2xpdG9yaXMiLCJjbGl0cyIsImNudXQiLCJjb2NrIiwiY29jay1zdWNrZXIiLCJjb2NrZmFjZSIsImNvY2toZWFkIiwiY29ja211bmNoIiwiY29ja211bmNoZXIiLCJjb2NrcyIsImNvY2tzdWNrICIsImNvY2tzdWNrZWQgIiwiY29ja3N1Y2tlciIsImNvY2tzdWNraW5nIiwiY29ja3N1Y2tzICIsImNvY2tzdWthIiwiY29ja3N1a2thIiwiY29rIiwiY29rbXVuY2hlciIsImNva3N1Y2thIiwiY29vbiIsImNveCIsImNyYXAiLCJjdW0iLCJjdW1tZXIiLCJjdW1taW5nIiwiY3VtcyIsImN1bXNob3QiLCJjdW5pbGluZ3VzIiwiY3VuaWxsaW5ndXMiLCJjdW5uaWxpbmd1cyIsImN1bnQiLCJjdW50bGljayAiLCJjdW50bGlja2VyICIsImN1bnRsaWNraW5nICIsImN1bnRzIiwiY3lhbGlzIiwiY3liZXJmdWMiLCJjeWJlcmZ1Y2sgIiwiY3liZXJmdWNrZWQgIiwiY3liZXJmdWNrZXIiLCJjeWJlcmZ1Y2tlcnMiLCJjeWJlcmZ1Y2tpbmcgIiwiZDFjayIsImRhbW4iLCJkaWNrIiwiZGlja2hlYWQiLCJkaWxkbyIsImRpbGRvcyIsImRpbmsiLCJkaW5rcyIsImRpcnNhIiwiZGxjayIsImRvZy1mdWNrZXIiLCJkb2dnaW4iLCJkb2dnaW5nIiwiZG9ua2V5cmliYmVyIiwiZG9vc2giLCJkdWNoZSIsImR5a2UiLCJlamFjdWxhdGUiLCJlamFjdWxhdGVkIiwiZWphY3VsYXRlcyAiLCJlamFjdWxhdGluZyAiLCJlamFjdWxhdGluZ3MiLCJlamFjdWxhdGlvbiIsImVqYWt1bGF0ZSIsImYgdSBjIGsiLCJmIHUgYyBrIGUgciIsImY0bm55IiwiZmFnIiwiZmFnZ2luZyIsImZhZ2dpdHQiLCJmYWdnb3QiLCJmYWdncyIsImZhZ290IiwiZmFnb3RzIiwiZmFncyIsImZhbm55IiwiZmFubnlmbGFwcyIsImZhbm55ZnVja2VyIiwiZmFueXkiLCJmYXRhc3MiLCJmY3VrIiwiZmN1a2VyIiwiZmN1a2luZyIsImZlY2siLCJmZWNrZXIiLCJmZWxjaGluZyIsImZlbGxhdGUiLCJmZWxsYXRpbyIsImZpbmdlcmZ1Y2sgIiwiZmluZ2VyZnVja2VkICIsImZpbmdlcmZ1Y2tlciAiLCJmaW5nZXJmdWNrZXJzIiwiZmluZ2VyZnVja2luZyAiLCJmaW5nZXJmdWNrcyAiLCJmaXN0ZnVjayIsImZpc3RmdWNrZWQgIiwiZmlzdGZ1Y2tlciAiLCJmaXN0ZnVja2VycyAiLCJmaXN0ZnVja2luZyAiLCJmaXN0ZnVja2luZ3MgIiwiZmlzdGZ1Y2tzICIsImZsYW5nZSIsImZvb2siLCJmb29rZXIiLCJmdWNrIiwiZnVja2EiLCJmdWNrZWQiLCJmdWNrZXIiLCJmdWNrZXJzIiwiZnVja2hlYWQiLCJmdWNraGVhZHMiLCJmdWNraW4iLCJmdWNraW5nIiwiZnVja2luZ3MiLCJmdWNraW5nc2hpdG1vdGhlcmZ1Y2tlciIsImZ1Y2ttZSAiLCJmdWNrcyIsImZ1Y2t3aGl0IiwiZnVja3dpdCIsImZ1ZGdlIHBhY2tlciIsImZ1ZGdlcGFja2VyIiwiZnVrIiwiZnVrZXIiLCJmdWtrZXIiLCJmdWtraW4iLCJmdWtzIiwiZnVrd2hpdCIsImZ1a3dpdCIsImZ1eCIsImZ1eDByIiwiZl91X2NfayIsImdhbmdiYW5nIiwiZ2FuZ2JhbmdlZCAiLCJnYW5nYmFuZ3MgIiwiZ2F5bG9yZCIsImdheXNleCIsImdvYXRzZSIsImdvZC1kYW0iLCJnb2QtZGFtbmVkIiwiZ29kZGFtbiIsImdvZGRhbW5lZCIsImhhcmRjb3Jlc2V4ICIsImhlbGwiLCJoZXNoZSIsImhvYXIiLCJob2FyZSIsImhvZXIiLCJob21vIiwiaG9yZSIsImhvcm5pZXN0IiwiaG9ybnkiLCJob3RzZXgiLCJqYWNrLW9mZiAiLCJqYWNrb2ZmIiwiamFwIiwiamVyay1vZmYgIiwiamlzbSIsImppeiAiLCJqaXptICIsImppenoiLCJrYXdrIiwia25vYiIsImtub2JlYWQiLCJrbm9iZWQiLCJrbm9iZW5kIiwia25vYmhlYWQiLCJrbm9iam9ja3kiLCJrbm9iam9rZXkiLCJrb2NrIiwia29uZHVtIiwia29uZHVtcyIsImt1bSIsImt1bW1lciIsImt1bW1pbmciLCJrdW1zIiwia3VuaWxpbmd1cyIsImtpdW50IiwibDNpK2NoIiwibDNpdGNoIiwibGFiaWEiLCJsbWZhbyIsImx1c3QiLCJsdXN0aW5nIiwibTBmMCIsIm0wZm8iLCJtNDV0ZXJiYXRlIiwibWE1dGVyYjgiLCJtYTV0ZXJiYXRlIiwibWFzb2NoaXN0IiwibWFzdGVyLWJhdGUiLCJtYXN0ZXJiOCIsIm1hc3RlcmJhdCoiLCJtYXN0ZXJiYXQzIiwibWFzdGVyYmF0ZSIsIm1hc3RlcmJhdGlvbiIsIm1hc3RlcmJhdGlvbnMiLCJtYXN0dXJiYXRlIiwibW8tZm8iLCJtb2YwIiwibW9mbyIsIm1vdGhhZnVjayIsIm1vdGhhZnVja2EiLCJtb3RoYWZ1Y2thcyIsIm1vdGhhZnVja2F6IiwibW90aGFmdWNrZWQgIiwibW90aGFmdWNrZXIiLCJtb3RoYWZ1Y2tlcnMiLCJtb3RoYWZ1Y2tpbiIsIm1vdGhhZnVja2luZyAiLCJtb3RoYWZ1Y2tpbmdzIiwibW90aGFmdWNrcyIsIm1vdGhlciBmdWNrZXIiLCJtb3RoZXJmdWNrIiwibW90aGVyZnVja2VkIiwibW90aGVyZnVja2VyIiwibW90aGVyZnVja2VycyIsIm1vdGhlcmZ1Y2tpbiIsIm1vdGhlcmZ1Y2tpbmciLCJtb3RoZXJmdWNraW5ncyIsIm1vdGhlcmZ1Y2trYSIsIm1vdGhlcmZ1Y2tzIiwibXVmZiIsIm11dGhhIiwibXV0aGFmZWNrZXIiLCJtdXRoYWZ1Y2trZXIiLCJtdXRoZXIiLCJtdXRoZXJmdWNrZXIiLCJuMWdnYSIsIm4xZ2dlciIsIm5hemkiLCJuaWdnM3IiLCJuaWdnNGgiLCJuaWdnYSIsIm5pZ2dhaCIsIm5pZ2dhcyIsIm5pZ2dheiIsIm5pZ2dlciIsIm5pZ2dlcnMiLCJub2IiLCJub2Igam9rZXkiLCJub2JoZWFkIiwibm9iam9ja3kiLCJub2Jqb2tleSIsIm51bWJudXRzIiwibnV0c2FjayIsIm9yZ2FzaW0gIiwib3JnYXNpbXMgIiwib3JnYXNtIiwib3JnYXNtcyAiLCJwMHJuIiwicGF3biIsInBlY2tlciIsInBlbmlzIiwicGVuaXNmdWNrZXIiLCJwaG9uZXNleCIsInBodWNrIiwicGh1ayIsInBodWtlZCIsInBodWtpbmciLCJwaHVra2VkIiwicGh1a2tpbmciLCJwaHVrcyIsInBodXEiLCJwaWdmdWNrZXIiLCJwaW1waXMiLCJwaXNzIiwicGlzc2VkIiwicGlzc2VyIiwicGlzc2VycyIsInBpc3NlcyAiLCJwaXNzZmxhcHMiLCJwaXNzaW4gIiwicGlzc2luZyIsInBpc3NvZmYgIiwicG9vcCIsInBvcm4iLCJwb3JubyIsInBvcm5vZ3JhcGh5IiwicG9ybm9zIiwicHJpY2siLCJwcmlja3MgIiwicHJvbiIsInB1YmUiLCJwdXNzZSIsInB1c3NpIiwicHVzc2llcyIsInB1c3N5IiwicHVzc3lzICIsInJlY3R1bSIsInJldGFyZCIsInJpbWphdyIsInJpbW1pbmciLCJzIGhpdCIsInMuby5iLiIsInNhZGlzdCIsInNjaGxvbmciLCJzY3Jld2luZyIsInNjcm9hdCIsInNjcm90ZSIsInNjcm90dW0iLCJzZW1lbiIsInNleCIsInNoISsiLCJzaCF0Iiwic2gxdCIsInNoYWciLCJzaGFnZ2VyIiwic2hhZ2dpbiIsInNoYWdnaW5nIiwic2hlbWFsZSIsInNoaSsiLCJzaGl0Iiwic2hpdGRpY2siLCJzaGl0ZSIsInNoaXRlZCIsInNoaXRleSIsInNoaXRmdWNrIiwic2hpdGZ1bGwiLCJzaGl0aGVhZCIsInNoaXRpbmciLCJzaGl0aW5ncyIsInNoaXRzIiwic2hpdHRlZCIsInNoaXR0ZXIiLCJzaGl0dGVycyAiLCJzaGl0dGluZyIsInNoaXR0aW5ncyIsInNoaXR0eSAiLCJza2FuayIsInNsdXQiLCJzbHV0cyIsInNtZWdtYSIsInNtdXQiLCJzbmF0Y2giLCJzb24tb2YtYS1iaXRjaCIsInNwYWMiLCJzcHVuayIsInNfaF9pX3QiLCJ0MXR0MWU1IiwidDF0dGllcyIsInRlZXRzIiwidGVleiIsInRlc3RpY2FsIiwidGVzdGljbGUiLCJ0aXQiLCJ0aXRmdWNrIiwidGl0cyIsInRpdHQiLCJ0aXR0aWU1IiwidGl0dGllZnVja2VyIiwidGl0dGllcyIsInRpdHR5ZnVjayIsInRpdHR5d2FuayIsInRpdHdhbmsiLCJ0b3NzZXIiLCJ0dXJkIiwidHc0dCIsInR3YXQiLCJ0d2F0aGVhZCIsInR3YXR0eSIsInR3dW50IiwidHd1bnRlciIsInYxNGdyYSIsInYxZ3JhIiwidmFnaW5hIiwidmlhZ3JhIiwidnVsdmEiLCJ3MDBzZSIsIndhbmciLCJ3YW5rIiwid2Fua2VyIiwid2Fua3kiLCJ3aG9hciIsIndob3JlIiwid2lsbGllcyIsIndpbGx5IiwieHJhdGVkIiwieHh4Il0=\"\n};\n\nforbiddenNotes.randowFunWord = function randowFunWord() {\n  let words = [\"daffodil\", \"chrysanthemum\", \"waffles\", \"puppies\", \"senpai\", \"kohai\", \"rainbow\", \"fluffy\", \"marklar\"];\n  // TODO: use bp.random() in order to get seedable randomness\n  // this will provide consistent results across all client instances\n  var item = words[Math.floor(Math.random() * words.length)];\n  return item;\n}\n\nforbiddenNotes.containsBadWord = function (str) {\n  // Convert input to lowercase for case-insensitive matching\n  const lowerStr = str.toLowerCase();\n  // Check each forbidden word using word boundaries\n  return forbiddenNotes.decoded.some(function (fnote) {\n    // Create a regex with word boundaries for whole-word matching\n    const regex = new RegExp(`\\\\b${fnote}\\\\b`, 'i');\n    const found = regex.test(lowerStr);\n    return found;\n  });\n};\n\nforbiddenNotes.filter = function (str) {\n  forbiddenNotes.decoded.forEach(function (fnote) {\n    str = str.replace(new RegExp(\"\\\\b\" + fnote + \"\\\\b\"), forbiddenNotes.randowFunWord())\n    str = str.replace(new RegExp(\"\\\\b\" + fnote + \"\\\\b\", \"gi\"), forbiddenNotes.randowFunWord())\n  });\n  return str;\n}\n\nforbiddenNotes.decoded = JSON.parse(atob(forbiddenNotes.base64))\n\nexport default forbiddenNotes;\n","// TODO: move all this app specific code *outside* of the buddylist / renderMessage\n// use the system.addMessageProcessor() API instead\n\nimport isValidUrl from './isValidUrl.js';\nimport isValidYoutubeLink from './isValidYoutubeLink.js';\nimport isValidGithubLink from './isValidGithubLink.js';\n\nexport default function checkForLinksInMessage(message) {\n  const text = message.text || '';\n\n  // Basic URL regex — matches http(s) links\n  const urlRegex = /https?:\\/\\/(?:[^\\s()<>\\[\\]{}\"']+|\\([^\\s()]*?\\))+/gi;\n  let match = text.match(urlRegex);\n  // match = [message.text];\n\n  if (match && isValidUrl(match[0])) {\n    let contentUrl = match[0];\n    // console.log('Found URL in message:', contentUrl);\n    message.card = {\n      url: contentUrl,\n      type: 'website',\n    };\n\n    // Determine file type from extension\n    let ext = contentUrl.split('.').pop().split(/\\#|\\?/)[0]; // Strip off hash/query\n    if (ext && typeof ext === 'string') {\n      if (buddypond.supportedImageTypesExt.includes(ext.toLowerCase())) {\n        message.card.type = 'image';\n      }\n      if (buddypond.supportedAudioTypesExt.includes(ext.toLowerCase())) {\n        message.card.type = 'audio';\n      }\n      if (buddypond.supportedVideoTypesExt.includes(ext.toLowerCase())) {\n        message.card.type = 'video';\n      }\n    }\n\n    // YouTube link handling\n    if (isValidYoutubeLink(contentUrl)) {\n      const videoId = new URL(contentUrl).searchParams.get('v');\n      if (videoId) {\n        message.card.type = 'youtube';\n        message.card.thumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\n        message.card.context = videoId;\n      }\n    }\n\n    // GitHub link handling\n    if (isValidGithubLink(contentUrl)) {\n      message.card.type = 'github';\n      const githubRegex = /^https?:\\/\\/github\\.com\\/([^\\/]+)\\/([^\\/]+)\\/blob\\/([^\\/]+)\\/(.+)$/;\n      const match = contentUrl.match(githubRegex);\n      if (match) {\n        message.card.owner = match[1];\n        message.card.repo = match[2];\n        message.card.filename = match[4];\n      } else {\n        console.error(\"Invalid GitHub URL format.\");\n      }\n    }\n  }\n}\n","export default function isValidUrl(messageText) {\n    if (!messageText) return false;\n  \n    messageText = messageText.trim(); // Trim whitespace from both ends\n  \n    try {\n      const url = new URL(messageText);\n  \n      // Ensure the URL has http or https protocol\n      if (url.protocol === \"http:\" || url.protocol === \"https:\") {\n        // console.log('This is a valid URL:', url.href);\n        return true;\n      }\n  \n      return false; // Invalid if protocol is not http or https\n    } catch (error) {\n      return false; // If an error is thrown, it's not a valid URL\n    }\n  }","export default function checkIsValidYoutubeLink(url) {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : null; // Return video ID or null\n}\n","export default function isValidGithubLink(url) {\n    const regex = /^https?:\\/\\/github\\.com\\/([^\\/]+)\\/([^\\/]+)\\/blob\\/([^\\/]+)\\/(.+)$/;\n    const match = url.match(regex);\n    return match ? match.slice(1) : null; \n    // Returns [owner, repo, branch, filePath] or null\n}\n","export default function setupInputEvents(windowType, contextName, chatWindow) {\n    const $input = $(\".aim-input\", chatWindow.content);\n    const $form = $(\".message_form\", chatWindow.content);\n    const $sendButton = $(\".aim-send-btn\", chatWindow.content);\n\n    \n    // Trigger autocomplete manually on input\n    let that = this;\n    $input.on(\"input\", function (event) {\n        const $sendButton = $(\".aim-send-btn\", chatWindow.content);\n\n        that.handleEmojiInput(event, $sendButton);\n        const cursorPos = this.selectionStart;\n        const inputValue = $input.val();\n        const context = that.getInputContext(inputValue, cursorPos);\n\n        if (context && ((context.type === 'emoji' && context.text.length >= 2) || context.type === 'command')) {\n            $(this).autocomplete(\"search\", context.text);\n        } else {\n            $(this).autocomplete(\"close\");\n        }\n    });\n\n    $input.on(\"keydown\", (e) => {\n        if (e.which === 13 && e.shiftKey) {\n            const inputValue = $input.val();\n            const cursorPosition = $input[0].selectionStart;\n            const newValue = inputValue.slice(0, cursorPosition) + \"\\n\" + inputValue.slice(cursorPosition);\n            $input.val(newValue);\n            $input[0].setSelectionRange(cursorPosition + 1, cursorPosition + 1);\n            $sendButton.css(\"opacity\", newValue.length > 0 ? 1 : 0.5);\n            return false;\n        }\n\n        // Prevent form submission on Enter when autocomplete is visible\n        if (e.which === 13 && $input.autocomplete(\"widget\").is(\":visible\")) {\n            // check if this is a BS command, if so we do need to submit the form\n            const inputValue = $input.val();\n            // check if inputValue starts with / or \\, if so, run it\n            if (inputValue.startsWith(\"/\") || inputValue.startsWith(\"\\\\\")) {\n                $form.submit();\n                e.preventDefault();\n                return false;\n            }\n            e.preventDefault();\n            return false; // Let jQuery UI handle selection\n        }\n\n        // Prevent focus change on Tab ( with or without autocomplete visible )\n        if (e.which === 9) {\n            e.preventDefault();\n            return false; // Let jQuery UI handle selection\n        }\n\n        if (e.which === 13) {\n            let message = $input.val().replace(/\\n/g, \"<br>\");\n            message = that.replaceShortcodes(message);\n\n            $input.val(message);\n            $form.submit();\n            e.preventDefault();\n            return false;\n        }\n\n        let activeContext = chatWindow.currentActiveContext || contextName;\n\n        this.bp.emit(\"buddy::typing\", {\n            from: this.bp.me,\n            to: activeContext,\n            type: windowType,\n            isTyping: true,\n            ctime: Date.now(),\n        });\n    });\n\n    $input.on(\"keyup\", (e) => {\n        const inputValue = $input.val();\n        $sendButton.css(\"opacity\", inputValue.length > 0 ? 1 : 0.5);\n    });\n}","export default function setupAutocomplete(chatWindow) {\n    if (!this.options.autocomplete) return;\n\n    const $input = $(\".aim-input\", chatWindow.content);\n    const $form = $(\".message_form\", chatWindow.content);\n    const $sendButton = $(\".aim-send-btn\", chatWindow.content);\n\n    this.replaceShortcodes = replaceShortcodes.bind(this);\n\n    // Create a lookup map for faster emoji shortcode to Unicode conversion\n    if (!this.emojiMap) {\n         const usedShortcodes = new Set(); // Track used shortcodes to avoid duplicates\n        this.emojiMap = Object.keys(EMOJIS).reduce((map, emoji) => {\n            const aliases = EMOJIS[emoji].filter(isValidShortcode);\n            aliases.forEach(alias => {\n                const shortcode = `:${alias}:`;\n                // Only add if shortcode hasn't been used (prioritize first emoji)\n                if (!usedShortcodes.has(shortcode)) {\n                    map[shortcode] = emoji;\n                    usedShortcodes.add(shortcode);\n                }\n            });\n            return map;\n        }, {});\n    }\n\n    // Prepare autocomplete data for emojis: array of { label, value, emoji, type }\n    if (!this.emojiSuggestions) {\n        this.emojiSuggestions = Object.keys(EMOJIS).reduce((suggestions, emoji) => {\n            const aliases = EMOJIS[emoji].filter(isValidShortcode);\n            aliases.forEach(alias => {\n                suggestions.push({\n                    label: `${emoji} :${alias}:`, // Display: \"🏴‍☠️ :skull_and_crossbones:\"\n                    value: `:${alias}:`, // Insert: \":skull_and_crossbones:\"\n                    emoji: emoji,\n                    type: 'emoji'\n                });\n            });\n            return suggestions;\n        }, []);\n    }\n\n    if (!this.commands) {\n        // Prepare autocomplete data for commands\n        this.commands = Object.keys(this.options.autocomplete).map(command => ({\n            label: `/${command}`,\n            value: `/${command}`,\n            type: 'command'\n        }));\n    }\n\n    this.handleEmojiInput = handleEmojiInput.bind(this);\n\n    // Function to get the partial shortcode or command at the cursor position\n    function getInputContext(text, cursorPos) {\n        const textBeforeCursor = text.slice(0, cursorPos);\n        const textAfterCursor = text.slice(cursorPos);\n\n        // Check for partial or complete emoji shortcode (e.g., \":sku\" or \":skull_and_crossbones:\")\n        const lastColonIndex = textBeforeCursor.lastIndexOf(':');\n        if (lastColonIndex !== -1) {\n            // Extract potential shortcode from last \":\" to next \":\" or cursor\n            let endIndex = cursorPos;\n            const nextColonIndex = text.indexOf(':', cursorPos);\n            if (nextColonIndex !== -1) {\n                // Include trailing \":\" if it forms a valid shortcode\n                const potentialShortcode = text.slice(lastColonIndex, nextColonIndex + 1);\n                if (/^:[a-z0-9_+]+:$/.test(potentialShortcode)) {\n                    endIndex = nextColonIndex + 1;\n                }\n            }\n            const potentialShortcode = text.slice(lastColonIndex, endIndex);\n            // Match partial (\":sku\") or complete (\":skull_and_crossbones:\") shortcode\n            if (/^:[a-z0-9_+]*(?::|$)/.test(potentialShortcode)) {\n                return {\n                    type: 'emoji',\n                    text: potentialShortcode,\n                    startIndex: lastColonIndex,\n                    endIndex: endIndex\n                };\n            }\n        }\n\n        // Check for command (starts with \"/\" or \"\\\")\n        const firstChar = textBeforeCursor.charAt(0);\n        if ([\"/\", \"\\\\\"].includes(firstChar)) {\n            return {\n                type: 'command',\n                text: textBeforeCursor,\n                startIndex: 0,\n                endIndex: cursorPos\n            };\n        }\n        return null;\n    }\n\n    this.getInputContext = getInputContext.bind(this);\n\n    let that = this;\n\n    // Initialize autocomplete for both commands and emojis\n    $input.autocomplete({\n\n        focus: function (event, ui) {\n            // Prevent jQuery UI from inserting `.label` automatically\n            event.preventDefault();\n            return false;\n        },\n\n        source: function (request, response) {\n            const cursorPos = $input[0].selectionStart;\n            const inputValue = $input.val();\n            const context = getInputContext(inputValue, cursorPos);\n\n            if (!context) {\n                response([]);\n                return;\n            }\n\n            if (context.type === 'emoji' && context.text.length >= 2) {\n                const query = context.text.replace(/^:|:$/g, '').toLowerCase();\n                const matches = that.emojiSuggestions.filter(suggestion =>\n                    suggestion.value.toLowerCase().includes(query)\n                ).slice(0, 10);\n                response(matches);\n            } else if (context.type === 'command') {\n                const query = context.text.slice(1).toLowerCase();\n                console.log('Command query:', query);\n                console.log('Available commands:', that.commands);\n                const matches = that.commands.filter(suggestion =>\n                    suggestion.value.toLowerCase().includes(query)\n                ).slice(0, 10);\n                response(matches);\n            } else {\n                response([]);\n            }\n        },\n        select: function (event, ui) {\n            const textarea = $input[0];\n            const cursorPos = textarea.selectionStart;\n            const inputValue = $input.val();\n            const context = getInputContext(inputValue, cursorPos);\n\n            if (context) {\n                // Replace from startIndex to endIndex\n                const before = inputValue.slice(0, context.startIndex);\n                const after = inputValue.slice(context.endIndex);\n                const newValue = before + (ui.item.emoji || ui.item.value) + after;\n                $input.val(newValue);\n\n                // Set cursor after the inserted value\n                const newCursorPos = context.startIndex + ui.item.value.length;\n                textarea.setSelectionRange(newCursorPos, newCursorPos);\n\n                // Trigger input event for emoji replacement (if emoji)\n                if (ui.item.type === 'emoji') {\n                    $input.trigger('input');\n                }\n\n                // Update send button\n                $sendButton.css(\"opacity\", newValue.length > 0 ? 1 : 0.5);\n\n                return false;\n            }\n\n            // Close autocomplete\n            $input.autocomplete(\"close\");\n            return false;\n\n        },\n        minLength: 0,\n        position: { my: \"left bottom\", at: \"left top\", collision: \"none\" },\n        open: function () {\n            $('.ui-autocomplete').css({\n                'max-height': '200px',\n                'overflow-y': 'auto',\n                'z-index': 1000\n            });\n        }\n    });\n}\n\n// Function to validate and normalize a shortcode name\nfunction isValidShortcode(name) {\n    return /^[a-z0-9_+]+$/.test(name) && !name.startsWith(':') && !name.includes(' ');\n}\n\n// Function to replace shortcodes in a string with emojis\nfunction replaceShortcodes(text) {\n    const shortcodeRegex = /:[a-z0-9_+]+:/g;\n    return text.replace(shortcodeRegex, match => this.emojiMap[match] || match);\n}\n\n// Function to handle text area input and replace shortcodes\nfunction handleEmojiInput(event, $sendButton) {\n    const textarea = event.target;\n    const $textarea = $(textarea);\n    const cursorPos = textarea.selectionStart;\n    const originalText = $textarea.val();\n    const newText = replaceShortcodes.call(this, originalText);\n\n    if (newText !== originalText) {\n        $textarea.val(newText);\n        const offset = newText.length - originalText.length;\n        const newCursorPos = cursorPos + offset;\n        textarea.setSelectionRange(newCursorPos, newCursorPos);\n        $sendButton.css(\"opacity\", newText.length > 0 ? 1 : 0.5);\n    }\n}","export default class ChatWindowButtonBar {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n\n        // Button objects provided via options\n        const inputButtons = options.buttons || [];\n\n        // Read stored order of button labels\n        const storedOrder = this.bp.settings?.['buttonBar.buttons'];\n\n        if (Array.isArray(storedOrder)) {\n            // Sort input buttons by stored order\n            this.buttons = this.sortButtonsByOrder(inputButtons, storedOrder);\n        } else {\n            this.buttons = inputButtons;\n        }\n\n        this.container = this.render();       // DOM\n        this.enableDragAndDrop();             // jQuery UI sorting\n        return this;\n    }\n\n    render() {\n        const buttonBar = document.createElement('div');\n        buttonBar.classList.add('button-bar');\n\n        this.buttons.forEach(button => {\n            const element = this.createButtonElement(button);\n            buttonBar.appendChild(element);\n        });\n\n        return buttonBar;\n    }\n\n    createButtonElement(button) {\n        let element;\n\n        const baseDataset = {\n            context: this.options.context || button.text,\n            type: this.options.type || 'buddy'\n        };\n\n        if (button.image) {\n            element = document.createElement('img');\n            element.src = button.image;\n            element.alt = button.text;\n            element.title = button.text;\n            element.draggable = false;\n        } else {\n            element = document.createElement('button');\n            element.innerText = button.text;\n        }\n\n        Object.entries(baseDataset).forEach(([key, value]) => {\n            element.dataset[key] = value;\n        });\n\n        element.classList.add('button-bar-button');\n        if (button.className) {\n            element.classList.add(button.className);\n        }\n\n        element.dataset.text = button.text;\n        element.onclick = button.onclick;\n\n        return element;\n    }\n\n    addButton(button) {\n        if (this.buttons.some(b => b.text === button.text)) {\n            console.warn(`Button with text \"${button.text}\" already exists.`);\n            return;\n        }\n        \n\n        this.buttons.push(button);\n        const newButtonElement = this.createButtonElement(button);\n        this.container.appendChild(newButtonElement);\n        this.refreshSortable();\n    }\n\n    removeButton(buttonText) {\n        const index = this.buttons.findIndex(button => button.text === buttonText);\n        if (index === -1) return;\n\n        this.buttons.splice(index, 1);\n\n        const children = Array.from(this.container.children);\n        for (const el of children) {\n            if ((el.innerText === buttonText || el.alt === buttonText) && el.classList.contains('button-bar-button')) {\n                this.container.removeChild(el);\n                break;\n            }\n        }\n\n        this.refreshSortable();\n        this.saveButtonOrder();\n    }\n\n    enableDragAndDrop() {\n        $(this.container).sortable({\n            items: '.button-bar-button',\n            tolerance: 'pointer',\n            stop: () => this.syncButtonOrder()\n        });\n    }\n\n    refreshSortable() {\n        $(this.container).sortable('refresh');\n    }\n\n    syncButtonOrder() {\n        const orderedTexts = Array.from(this.container.children).map(el => el.dataset.text);\n        this.buttons = orderedTexts\n            .map(text => this.buttons.find(b => b.text === text))\n            .filter(Boolean);\n\n        this.saveButtonOrder();\n    }\n\n    saveButtonOrder() {\n        const orderedTexts = this.buttons.map(b => b.text);\n        this.bp.set('buttonBar.buttons', orderedTexts);\n\n        const openWindows = this.bp.apps.ui.windowManager.findWindows({\n            app: 'buddylist',\n            type: ['buddy', 'pond']\n        });\n\n        console.log('openWindows to reorder', openWindows);\n\n        openWindows.forEach(window => {\n            if (window.buttonBar) {\n                // Reorder buttons\n                window.buttonBar.buttons = this.sortButtonsByOrder(window.buttonBar.buttons, orderedTexts);\n\n                // Re-render DOM\n                window.buttonBar.reRenderButtons();\n            }\n        });\n    }\n\n    //reRenderButtons() is only used when making a remote change to the button order from an outside source\n    // drag and drop does not use this method and instead uses syncButtonOrder\n    // we use reRenderButtons to update the button bar in all other existing open windows\n    reRenderButtons() {\n        // Clear the container\n        this.container.innerHTML = '';\n\n        // Recreate and append all buttons in current order\n        this.buttons.forEach(button => {\n            const el = this.createButtonElement(button);\n            this.container.appendChild(el);\n        });\n\n        // Re-enable drag and drop after replacing children\n        this.refreshSortable();\n    }\n\n    sortButtonsByOrder(buttons, order) {\n        const buttonMap = Object.fromEntries(buttons.map(b => [b.text, b]));\n        const ordered = order.map(text => buttonMap[text]).filter(Boolean);\n\n        // Append any new buttons not in stored order\n        const remaining = buttons.filter(b => !order.includes(b.text));\n        return [...ordered, ...remaining];\n    }\n}\n","import ChatWindowButtonBar from \"../ChatWindowButtonBar.js\";\n\n\nexport default function setupChatWindowButtons(windowType, contextName, chatWindow) {\n    if (!this.options.chatWindowButtons) return;\n\n    let buttons = this.options.chatWindowButtons.slice();\n    if (windowType === \"pond\") {\n        buttons = buttons.filter((button) => button.type !== \"buddy-only\");\n    }\n\n    if (this.bp.isMobile() && windowType === \"buddy\") {\n        // don't show help button on mobile buddy chat windows\n        buttons = buttons.filter((button) => button.text !== \"BuddyHelp\");\n    }\n\n    if (isIOS()) {\n        buttons = buttons.filter((button) => button.env !== \"desktop-only\");\n    }\n\n    chatWindow.buttonBar = new ChatWindowButtonBar(this.bp, {\n        context: contextName,\n        type: windowType,\n        buttons,\n    });\n    $(\".aim-message-controls\", chatWindow.content).prepend(chatWindow.buttonBar.container);\n}\n\nfunction isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && \"ontouchend\" in document;\n}","// Populates or updates the pond room list in the chat window\n// Maintains sort order by connection_count (descending) without full re-render\n// Manages .aim-room-active class only when an activeContext is specified\nexport default function populateRoomList(hotPonds, chatWindow, activeContext = null) {\n    // console.log('populateRoomList called with hotPonds:', hotPonds, 'chatWindow:', chatWindow, 'activeContext:', activeContext);\n    const roomList = $(\".aim-room-list-items\", chatWindow.content);\n    if (!roomList.length) return;\n\n    if (!hotPonds || !Array.isArray(hotPonds)) return;\n\n    // Sort ponds by connection count (descending)\n    const sortedPonds = [...hotPonds].sort((a, b) => b.connection_count - a.connection_count);\n    // console.log('Sorted ponds:', sortedPonds);\n\n    // Track user-opened ponds\n    const userOpenedPonds = this.data.activePonds || [];\n\n    // Track existing room items by pond_id\n    const existingItems = new Map();\n    const existingPondIds = new Set();\n    roomList.find(\".aim-room-item\").each((_, item) => {\n        const pondId = $(item).data(\"pond\");\n        if (pondId) {\n            existingItems.set(pondId, $(item));\n            existingPondIds.add(pondId);\n        }\n    });\n\n    // Update or add room items\n    sortedPonds.forEach((pond) => {\n        const pondId = pond.pond_id;\n        const pondName = pondId.replace(\"pond/\", \"\");\n        const isUserOpened = userOpenedPonds.includes(pondId);\n        const isActive = pondId === activeContext;\n\n        const existingItem = existingItems.get(pondId);\n        if (existingItem) {\n            // Update existing item only if data has changed\n            const $scoreElement = existingItem.find(\".aim-room-list-item-score\");\n            if ($scoreElement.text() !== String(pond.connection_count)) {\n                console.log(`Updating connection_count for ${pondId}: ${pond.connection_count}`);\n                $scoreElement.text(pond.connection_count);\n            }\n\n            const $closeButton = existingItem.find(\".aim-room-close-btn\");\n            if (isUserOpened) {\n                if (!$closeButton.length) {\n                    console.log(`Adding close button for ${pondId}`);\n                    existingItem.append(`<button class=\"aim-room-close-btn\" data-context=\"${pondId}\">X</button>`);\n                }\n            } else if ($closeButton.length) {\n                console.log(`Removing close button for ${pondId}`);\n                $closeButton.remove();\n            }\n\n            // Update active class only if activeContext is specified\n            if (activeContext !== null) {\n                const shouldBeActive = isActive;\n                if (existingItem.hasClass(\"aim-room-active\") !== shouldBeActive) {\n                    console.log(`Updating active class for ${pondId}: ${shouldBeActive}`);\n                    existingItem.toggleClass(\"aim-room-active\", shouldBeActive);\n                }\n            }\n\n            existingPondIds.delete(pondId); // Mark as processed\n        } else {\n            // Create new room item\n            // console.log(`Adding new room item for ${pondId}`);\n            const closeButton = isUserOpened\n                ? `<button class=\"aim-room-close-btn\" data-context=\"${pondId}\">X</button>`\n                : \"\";\n            const $newItem = $(`\n                <li class=\"aim-room-item aim-room-list-item${isActive && activeContext !== null ? \" aim-room-active\" : \"\"}\" data-pond=\"${pondId}\" data-context=\"${pondId}\">\n                    <span class=\"aim-room-list-item-name\">#${pondName}</span>\n                    <span class=\"aim-room-list-item-score\">${pond.connection_count}</span>\n                    ${closeButton}\n                </li>\n            `);\n            roomList.append($newItem); // Append temporarily; will reorder later\n            existingItems.set(pondId, $newItem); // Track for reordering\n        }\n\n        // Ensure messages container exists for active or opened ponds\n        // TODO: we don't have a scope to ensureMessagesContainer here,\n        // do we need to ensureMessagesContainer here? if so, it needs to be scoped to buddylist or chatWindow\n        /*\n        if (isActive || isUserOpened) {\n            ensureMessagesContainer.call(this, pondId, chatWindow, this.bp.apps.client);\n        }\n        */\n    });\n\n    // Remove room items for ponds no longer in hotPonds\n    existingPondIds.forEach((pondId) => {\n        console.log(`Removing room item for ${pondId}`);\n        existingItems.get(pondId)?.remove();\n        existingItems.delete(pondId);\n    });\n\n    // Reorder room items to match sortedPonds\n    // console.log('Reordering room items to match sortedPonds');\n    let previousItem = null;\n    sortedPonds.forEach((pond) => {\n        const $item = existingItems.get(pond.pond_id);\n        if ($item) {\n            if (previousItem) {\n                // Insert after the previous item\n                const $nextSibling = previousItem.next();\n                if (!$nextSibling.length || $nextSibling.data(\"pond\") !== pond.pond_id) {\n                    console.log(`Moving ${pond.pond_id} after ${previousItem.data(\"pond\")}`);\n                    $item.insertAfter(previousItem);\n                }\n            } else {\n                // Move to the top if it's the first item\n                const $firstItem = roomList.children().first();\n                if (!$firstItem.length || $firstItem.data(\"pond\") !== pond.pond_id) {\n                    console.log(`Moving ${pond.pond_id} to top`);\n                    $item.prependTo(roomList);\n                }\n            }\n            previousItem = $item;\n        }\n    });\n\n    // Ensure only the active room has .aim-room-active if activeContext is specified\n    if (activeContext !== null) {\n        console.log(`Ensuring only ${activeContext} has .aim-room-active`);\n        roomList.find(\".aim-room-item\").not(`[data-pond=\"${activeContext}\"]`).removeClass(\"aim-room-active\");\n        if (existingItems.get(activeContext)) {\n            existingItems.get(activeContext).addClass(\"aim-room-active\");\n        }\n    }\n}","import forbiddenNotes from \"./forbiddenNotes.js\";\nimport setupInputEvents from \"./message/setupInputEvents.js\";\nimport setupAutocomplete from \"./message/setupAutocomplete.js\";\nimport setupChatWindowButtons from \"./message/setupChatWindowButtons.js\";\n\n// this is now handled in the pond.js file\nimport populateRoomList from \"./message/populateRoomList.js\";\nimport updateRoomList from \"./message/updateRoomList.js\";\n// Updates the list of connected users for a specific pond chat\n// data.chatId specifies the pond context (e.g., \"pond/general\")\n\n// Updates the list of connected users for a specific pond chat\n// data.chatId specifies the pond context (e.g., \"pond/general\")\nfunction updatePondConnectedUsers(data) {\n    const chatId = data.chatId;\n    if (!chatId) {\n        console.log(\"No chatId provided for updating pond connected users\");\n        return;\n    }\n    // console.log('updatePondConnectedUsers called with data:', data);\n    let context = chatId.replace(\"pond/\", \"\");\n\n    // Select the user list for the specific pond\n    const userList = $(`.aim-user-list[data-context=\"${context}\"][data-type=\"pond\"] .aim-user-list-items`);\n\n    // console.log('found userList:', userList.length, 'for chatId:', chatId, userList);\n    if (!userList.length) {\n        console.log(`No .aim-user-list-items found for chatId: ${chatId}`);\n        return;\n    }\n\n    // console.log(\"Updating pond connected users for chatId:\", chatId, data);\n\n    // Track existing users to identify disconnected ones\n    const existingUserIds = new Set();\n    userList.find(\".aim-user-item\").each((_, item) => {\n        let userId = $(item).data(\"username\");\n        if (userId) {\n            userId = userId.toString();\n            existingUserIds.add(userId);\n        } else {\n            // console.log(\"Found invalid .aim-user-item without data-username, removing:\", item);\n            $(item).remove(); // Remove empty/invalid items\n        }\n    });\n\n    // Update or add user items\n    (data.users || []).forEach((user) => {\n        let { userId, profilePicture } = user;\n        userId = userId ? userId.toString() : null;\n        if (!userId || typeof userId !== \"string\") {\n            console.log(\"Skipping invalid user with missing or non-string userId:\", user);\n            return; // Skip invalid users\n        }\n\n        // Remark: we could also populate the this.data.activeUsers\n        // Might be better to just allow user to click name and then open spellbook, less clutter in dropdown\n        /*\n        if (message.to && !this.data.activeUsers.includes(message.to)) {\n            this.data.activeUsers.push(message.to);\n            this.bp.emit('buddy::activeUserAdded', message.to);\n        }\n        */\n\n        const userItem = $(`.aim-user-item[data-username=\"${userId}\"]`, userList);\n\n        if (userItem.length) {\n            // Update existing user only if data has changed\n            const $textElement = userItem.find(\".aim-user-item-text\");\n            if ($textElement.text() !== userId) {\n                // console.log(`Updating userId text for ${userId}`);\n                $textElement.text(userId);\n            }\n\n            const $profileContainer = userItem.find(\".aim-profile-picture\");\n            const $newProfileElement = createProfilePictureElement.call(this, userId, profilePicture, $profileContainer);\n            if ($newProfileElement) {\n                // console.log(`Updating profile picture for ${userId}`);\n                $profileContainer.empty().append($newProfileElement.html());\n            } else {\n                // console.log(`No profile picture update needed for ${userId}`);\n            }\n\n            existingUserIds.delete(userId); // Mark as processed\n        } else {\n            // Create new user item\n            // console.log(\"Adding user to aim-user-list-items:\", user);\n            const $userItem = $(\"<li>\", {\n                class: \"aim-user-item\",\n                \"data-username\": userId,\n            });\n            const $profilePicture = createProfilePictureElement.call(this, userId, profilePicture);\n            const $userText = $(\"<span>\", {\n                class: \"aim-user-item-text\",\n                text: userId,\n            });\n            //console.log('$profilePicture', $profilePicture.html())\n            //console.log('$userItem', $userItem.html())\n            $userItem.append($profilePicture, $userText);\n            userList.append($userItem);\n        }\n    });\n\n    // Remove disconnected users\n    // console.log('checking existingUserIds for removal:', existingUserIds);\n    existingUserIds.forEach((userId) => {\n        userId = userId.toString();\n        $(`.aim-user-item[data-username=\"${userId}\"]`, userList).remove();\n    });\n}\n\n// Creates a profile picture element for a user\n// Returns null if no update is needed for existing users\nfunction createProfilePictureElement(userId, profilePicture, $existingContainer = null) {\n    const $profilePicture = $(\"<div>\", { class: \"aim-profile-picture\" });\n\n    if (profilePicture) {\n        const $img = $(\"<img>\", {\n            class: \"aim-chat-message-profile-picture-img\",\n            src: profilePicture,\n            alt: `${userId}'s avatar`,\n        });\n        $img.attr('draggable', 'false');\n        $profilePicture.append($img);\n\n        // For existing users, check if update is needed\n        if ($existingContainer) {\n            const $currentImg = $existingContainer.find(\".aim-chat-message-profile-picture-img\");\n            if ($currentImg.length && $currentImg.attr(\"src\") === profilePicture) {\n                return null; // No update needed\n            }\n        }\n    } else {\n        const defaultAvatarSvg = this.defaultAvatarSvg(userId);\n        $profilePicture.html(defaultAvatarSvg);\n\n        // For existing users, check if SVG content is unchanged\n        if ($existingContainer) {\n            const currentHtml = $existingContainer.html().trim();\n            if (currentHtml === defaultAvatarSvg.trim()) {\n                return null; // No update needed\n            }\n        }\n    }\n\n    return $profilePicture;\n}\n\nexport default function openChatWindow(data) {\n    const { windowType, contextName, windowTitle } = determineWindowParameters(data);\n    if (!isValidContextName(contextName)) {\n        return;\n    }\n\n    // TODO: move these to prototype of buddylist...\n    if (!this.populateRoomList) {\n        this.populateRoomList = populateRoomList.bind(this);\n    }\n\n    if (!this.updatePondConnectedUsers) {\n        this.updatePondConnectedUsers = updatePondConnectedUsers.bind(this);\n    }\n\n    if (!this.forbiddenNotes) {\n        this.forbiddenNotes = forbiddenNotes;\n    }\n\n    if (!this.joinPond) {\n        this.joinPond = joinPond.bind(this);\n    }\n\n    const client = this.bp.apps.client;\n    const windowId = generateWindowId(windowType, contextName);\n    const existingWindow = this.bp.apps.ui.windowManager.getWindow(windowId);\n    if (existingWindow) {\n        handleExistingWindow(existingWindow, windowType, contextName, client, this);\n        return existingWindow;\n    }\n\n    return createNewChatWindow.call(this, {\n        windowType,\n        contextName,\n        windowTitle,\n        windowId,\n        client,\n        data,\n    });\n}\n\nfunction determineWindowParameters(data) {\n    let windowType = data.pondname ? \"pond\" : \"buddy\";\n    let contextName = data.pondname || data.name;\n    let windowTitle = windowType === \"pond\" ? \"Pond Chat\" : \"\";\n\n    if (data.context) {\n        contextName = data.context;\n    }\n\n    if (data.type) {\n        windowType = data.type;\n    }\n\n    contextName = contextName.toString();\n\n    return { windowType, contextName, windowTitle };\n}\n\nfunction isValidContextName(contextName) {\n    const pondName = contextName.replace(\"pond/\", \"\");\n    if (forbiddenNotes.containsBadWord(pondName)) {\n        console.error(\"Forbidden context name:\", contextName);\n        alert(\"Pond name not allowed, please choose a different name.\");\n        return false;\n    }\n    return true;\n}\n\nfunction generateWindowId(windowType, contextName) {\n    return windowType === \"pond\"\n        ? 'pond-chat'\n        : `messages/${contextName}`;\n}\n\nfunction handleExistingWindow(chatWindow, windowType, contextName, client, context) {\n    if (windowType === \"pond\") {\n        // Remark: It seems this case never happens?\n        console.log(\"Opening pond window\", windowType, contextName);\n        // Use context.data.hotPonds if available, otherwise skip population\n        //const hotPonds = context.data.hotPonds || [];\n        //populateRoomList.call(context, hotPonds, chatWindow, contextName);\n        // Ensure the messages container exists and is subscribed\n        ensureMessagesContainer.call(this, context, contextName, chatWindow, client);\n        toggleMessagesContainer.call(this, contextName, chatWindow);\n    }\n    chatWindow.focus();\n}\n\nfunction createNewChatWindow({ windowType, contextName, windowTitle, windowId, client, data }) {\n    const windowConfig = buildWindowConfig.call(this, windowType, contextName, windowTitle, windowId, data);\n    const chatWindow = this.bp.apps.ui.windowManager.createWindow({\n        ...windowConfig,\n        onOpen: async (_window) => {\n            await initializeChatWindow.call(this, windowType, contextName, _window, client);\n        },\n        onClose: (_window) => {\n            if (windowType === \"pond\") {\n                const roomList = $(\".aim-room-list-items\", chatWindow.content);\n                roomList.find(\".aim-room-item\").each((_, item) => {\n                    const context = $(item).data(\"context\");\n                    client.removeSubscription(\"pond\", context);\n                });\n                this.data.activePonds = [];\n                // Remark: This is a special case if the entire pond window is closed at once\n                // It's important we close all active pond subscriptions\n                if (_window.id === 'pond-chat') {\n                    // alert('main pond window closed')\n                    // iterate through all current subscriptions and close them all\n                    for (let [key, value] of bp.apps.client.messagesWsClients) {\n                        if (key.startsWith(\"pond/\")) {\n                            value.wsClient.closeConnection();\n                        }\n                    }\n                }\n            } else {\n                client.removeSubscription(windowType, contextName);\n            }\n        },\n    });\n\n    if (windowType === \"pond\") {\n        setupCloseButtonHandler.call(this, chatWindow, client);\n        $(\".no-open-ponds\", chatWindow.content).hide();\n        $('.aim-message-controls', chatWindow.content).flexShow();\n\n    }\n\n    chatWindow.loggedIn = true;\n    return chatWindow;\n}\n\nfunction buildWindowConfig(windowType, contextName, windowTitle, windowId, data) {\n    const isBuddy = windowType === \"buddy\";\n    let iconImagePath = isBuddy ? \"\" : \"desktop/assets/images/icons/icon_pond_64.png\";\n\n    if (isBuddy && this.bp.apps.buddylist.data.profileState?.buddylist?.[contextName]?.profile_picture) {\n        iconImagePath = this.bp.apps.buddylist.data.profileState.buddylist[contextName].profile_picture;\n    }\n\n    // calculate height and width as percent of screen size\n    let height = isBuddy ? 500 : Math.floor(window.innerHeight * 0.8);\n    let width = isBuddy ? 600 : Math.floor(window.innerWidth * 0.75);\n\n    if (this.bp.isMobile()) {\n        height = 'calc(var(--vh) * 90)';\n    }\n\n    return {\n        app: \"buddylist\",\n        id: windowId,\n        title: isBuddy ? contextName : windowTitle,\n        icon: iconImagePath,\n        type: windowType,\n        context: contextName,\n        parent: this.bp.apps.ui.parent,\n        className: \"chatWindow\",\n        //x: 0,\n        //y: 0,\n        x: data.x || 10,\n        y: 50,\n        width: width,\n        height: height,\n    };\n}\n\nasync function initializeChatWindow(windowType, contextName, chatWindow, client) {\n    console.log('initializeChatWindow', windowType, contextName, chatWindow);\n    setupChatWindow.call(this, windowType, contextName, chatWindow, client);\n    client.addSubscription(windowType, contextName);\n\n    if (windowType === \"buddy\") {\n        console.log(`Opening buddy chat window for: ${contextName}`);\n        // remove the .aim-chat-area margin-top ( its the close button for tabbed ponds )\n        $(\".aim-chat-area\", chatWindow.content).css(\"margin-top\", \"0\");\n        // the top to 10\n        $(\".aim-chat-area\", chatWindow.content).css(\"top\", \"10px\");\n        clearBuddyNewMessages.call(this, contextName);\n    }\n\n    if (windowType === \"pond\") {\n        // Populate room list with hot ponds if available\n        // const hotPonds = this.data.hotPonds || [];\n        let hotPonds = this.bp.apps?.pond?.data?.hotPonds || [];\n        populateRoomList.call(this, hotPonds, chatWindow, contextName);\n        // send getConnectedUsers message to the pond\n        toggleMessagesContainer.call(this, contextName, chatWindow);\n    }\n    await renderMessages.call(this, contextName, chatWindow);\n    if (!this.bp.isMobile()) {\n        focusInputField(chatWindow);\n    }\n}\n\nfunction clearBuddyNewMessages(contextName) {\n    if (\n        this.data.profileState?.buddylist?.[contextName]?.newMessages\n    ) {\n        this.data.profileState.buddylist[contextName].newMessages = false;\n        this.client.receivedInstantMessage(contextName, (err, re) => {\n            // console.log(\"receivedInstantMessage\", err, re);\n        });\n    }\n}\n\nasync function renderMessages(contextName, chatWindow) {\n    this.data.processedMessages[contextName] = this.data.processedMessages[contextName] || [];\n    const messagesToRender = [...this.data.processedMessages[contextName]];\n    this.data.processedMessages[contextName] = [];\n\n    for (const message of messagesToRender) {\n        try {\n            await this.renderChatMessage(message, chatWindow, true);\n        } catch (err) {\n            console.error(\"Error rendering message\", message, err, chatWindow);\n        }\n    }\n}\n\nfunction focusInputField(chatWindow) {\n    function attemptFocus() {\n        const aimInput = $(\".aim-input\", chatWindow.content);\n        if (aimInput.length === 0) {\n            setTimeout(attemptFocus, 100);\n            return;\n        }\n        aimInput.focus();\n    }\n    attemptFocus();\n}\n\n\nfunction ensureMessagesContainer(contextName, chatWindow, client) {\n    const chatArea = $(\".aim-chat-area\", chatWindow.content);\n    const userListArea = $(\".aim-user-list-area\", chatWindow.content);\n    if (!chatArea.length || !userListArea.length) {\n        console.log(\"Missing chatArea or userListArea for context:\", contextName);\n        return;\n    }\n\n    // Normalize context for user list (e.g., \"pond/general\" -> \"general\")\n    const userListContext = contextName.replace(\"pond/\", \"\");\n\n    // Create message container if missing\n    let existingContainer = $(`.aim-messages-container[data-context=\"${contextName}\"]`, chatArea);\n    if (!existingContainer.length) {\n        console.log(\"Creating new messages container for context:\", contextName);\n        const newContainer = document.createElement(\"div\");\n        newContainer.className = \"aim-messages-container\";\n        newContainer.setAttribute(\"data-context\", contextName);\n        newContainer.setAttribute(\"data-type\", \"pond\");\n        newContainer.style.display = \"none\";\n        newContainer.innerHTML = `\n            <div class=\"aim-messages-header\">\n                <h2 class=\"aim-chat-title\"><span class=\"aim-chat-username\">#${userListContext}</span></h2>\n                <button class=\"aim-close-chat-btn\" data-context=\"${contextName}\">Close</button>\n            </div>\n            <div class=\"aim-no-messages\">\n                Your conversation has just started. You can send a message using the form below.\n            </div>\n            <div class=\"aim-messages\"></div>\n        `;\n        chatArea.append(newContainer);\n\n        client.addSubscription(\"pond\", contextName);\n        this.data.activePonds = this.data.activePonds || [];\n        if (!this.data.activePonds.includes(contextName)) {\n            this.data.activePonds.push(contextName);\n        }\n        $(\".no-open-ponds\", chatWindow.content).hide();\n        $(\".aim-message-controls\", chatWindow.content).flexShow();\n    } \n\n    // Create user list if missing\n    let existingUserList = $(`.aim-user-list[data-context=\"${userListContext}\"][data-type=\"pond\"]`, userListArea);\n    if (!existingUserList.length) {\n        console.log(\"Creating new user list for context:\", userListContext);\n        const newUserList = document.createElement(\"div\");\n        newUserList.className = \"aim-user-list\";\n        newUserList.setAttribute(\"data-context\", userListContext);\n        newUserList.setAttribute(\"data-type\", \"pond\");\n        newUserList.style.display = \"none\";\n        newUserList.innerHTML = `\n            <div class=\"aim-user-list-header\">\n                <h3>Buddies</h3>\n            </div>\n            <ul class=\"aim-user-list-items\"></ul>\n        `;\n        userListArea.append(newUserList);\n    }\n}\n\nfunction toggleMessagesContainer(contextName, chatWindow) {\n    const chatArea = $(\".aim-chat-area\", chatWindow.content);\n    const userListArea = $(\".aim-user-list-area\", chatWindow.content);\n    if (!chatArea.length || !userListArea.length) {\n        console.log(\"Missing chatArea or userListArea for context:\", contextName);\n        return;\n    }\n\n    // Hide all message containers and user lists\n    $(\".aim-messages-container\", chatArea).hide();\n    $(\".aim-user-list\", userListArea).hide();\n\n    // Normalize context for user list (e.g., \"pond/general\" -> \"general\")\n    const userListContext = contextName.replace(\"pond/\", \"\");\n\n    chatWindow.currentActiveContext = userListContext;\n\n    // Select target elements\n    const targetContainer = $(`.aim-messages-container[data-context=\"${contextName}\"][data-type=\"pond\"]`, chatArea);\n    const targetUserList = $(`.aim-user-list[data-context=\"${userListContext}\"][data-type=\"pond\"]`, userListArea);\n\n    if (!targetContainer.length) {\n        console.log(\"Creating messages container for context:\", contextName);\n        ensureMessagesContainer.call(this, contextName, chatWindow, this.bp.apps.client);\n        // Re-select after creation\n        targetContainer = $(`.aim-messages-container[data-context=\"${contextName}\"][data-type=\"pond\"]`, chatArea);\n    }\n\n    // Show target elements\n    if (targetContainer.length) {\n        // console.log(\"Showing messages container for context:\", contextName);\n        targetContainer.show();\n    }\n    if (targetUserList.length) {\n        // console.log(\"Showing user list for context:\", userListContext);\n        targetUserList.show();\n    }\n\n    // Fallback: Show first available context if target is missing\n    if (!targetContainer.length || !targetUserList.length) {\n        const availableContainers = $(\".aim-messages-container\", chatArea);\n        if (availableContainers.length > 0) {\n            const firstContext = availableContainers.first().data(\"context\");\n            const firstUserListContext = firstContext.replace(\"pond/\", \"\");\n            // console.log(\"Falling back to first context:\", firstContext);\n\n            $(`.aim-messages-container[data-context=\"${firstContext}\"]`, chatArea).show();\n            $(`.aim-user-list[data-context=\"${firstUserListContext}\"][data-type=\"pond\"]`, userListArea).show();\n\n            $(\".aim-room-item\", chatWindow.content).removeClass(\"aim-room-active\");\n            $(`.aim-room-item[data-context=\"${firstContext}\"]`, chatWindow.content).addClass(\"aim-room-active\");\n            $(\".message_form .aim-to\", chatWindow.content).val(firstContext);\n        } else {\n            console.log(\"No available message containers or user lists\");\n        }\n    }\n\n    // find the current .button-bar\n    let buttonBar = $(\".button-bar\", chatWindow.content);\n    // we need to iterate through all the first level children of the buttonBar\n    // and update the data-context attribute to match the current contextName\n    if (buttonBar.length) {\n        buttonBar.children().each((_, child) => {\n            // console.log(`Updating button bar child context for:`, child, contextName);\n            $(child).attr(\"data-context\", contextName);\n        });\n    }\n\n    this.scrollToBottom(chatWindow.content);\n}\n\nfunction setupChatWindow(windowType, contextName, chatWindow, client) {\n    const chatWindowTemplate = this.messageTemplateString;\n    const cloned = document.createElement(\"div\");\n    cloned.innerHTML = chatWindowTemplate;\n\n    const aimMessagesContainer = $(\".aim-messages-container\", cloned)[0];\n    aimMessagesContainer.setAttribute(\"data-context\", contextName);\n    aimMessagesContainer.setAttribute(\"data-type\", windowType);\n\n    if (windowType === \"buddy\") {\n        $(\".aim-user-list-area\", cloned).remove();\n        $(\".aim-room-list\", cloned).remove();\n        $('.aim-messages-header', cloned).remove();\n        chatWindow.container.classList.add(\"has-droparea\");\n        chatWindow.content.appendChild($(\".aim-window\", cloned)[0]);\n\n    } else {\n\n        const aimUserListContainer = $(\".aim-user-list\", cloned)[0];\n        aimUserListContainer.setAttribute(\"data-context\", contextName);\n        aimUserListContainer.setAttribute(\"data-type\", windowType);\n\n        if (this.bp.isMobile()) {\n            $('.aim-close-chat-btn', cloned).text('Close #' + contextName.replace(\"pond/\", \"\"));\n            $('.aim-chat-title', cloned).remove();\n        } else {\n            $('.aim-chat-title', cloned).text(`#${contextName.replace(\"pond/\", \"\")}`);\n\n        }\n\n        $('.joinPondForm', cloned).on('submit', (e) => {\n            e.preventDefault();\n            // get value from #customPondName\n            try {\n                let pondName = $('.customPondName').val();\n                joinPond.call(this, pondName);\n\n            } catch (err) {\n                console.error(\"Error joining pond:\", err);\n            }\n            return false;\n        });\n\n        chatWindow.container.classList.add(\"has-droparea\");\n        chatWindow.content.appendChild($(\".aim-window\", cloned)[0]);\n\n        const aimWindow = $('.aim-window', chatWindow.content)[0];\n        console.log('chatWindow.contentchatWindow.content', chatWindow.content)\n        console.log('aimWindow', aimWindow)\n        let touchStartX = 0;\n        let touchEndX = 0;\n\n        aimWindow.addEventListener('touchstart', (e) => {\n            touchStartX = e.changedTouches[0].screenX;\n        });\n\n        aimWindow.addEventListener('touchend', (e) => {\n            touchEndX = e.changedTouches[0].screenX;\n            handleSwipe();\n        });\n\n        function handleSwipe() {\n            const swipeThreshold = 50; // Minimum swipe distance in pixels\n            const deltaX = touchEndX - touchStartX;\n\n            if (deltaX > swipeThreshold) {\n                // Swipe right: show user list\n                aimWindow.classList.remove('show-room-list');\n                aimWindow.classList.add('show-user-list');\n            } else if (deltaX < -swipeThreshold) {\n                // Swipe left: show room list\n                aimWindow.classList.remove('show-user-list');\n                aimWindow.classList.add('show-room-list');\n            } else {\n                // No swipe or too small: return to chat\n                aimWindow.classList.remove('show-room-list', 'show-user-list');\n            }\n        }\n\n        // create button bar at top\n        const buttonBar = document.createElement('div');\n        buttonBar.className = 'pond-button-bar';\n        buttonBar.setAttribute('data-context', contextName);\n        buttonBar.setAttribute('data-type', windowType);\n\n        // Optional: Add buttons to toggle panels for accessibility\n        const toggleRoomListBtn = document.createElement('button');\n        toggleRoomListBtn.textContent = 'Ponds';\n        toggleRoomListBtn.className = 'toggle-room-list';\n\n        const toggleUserListBtn = document.createElement('button');\n        toggleUserListBtn.textContent = 'Buddies';\n        toggleUserListBtn.className = 'toggle-user-list';\n\n        const closePondChatBtn = document.createElement('button');\n        closePondChatBtn.textContent = 'Close #' + contextName.replace(\"pond/\", \"\");\n        //closePondChatBtn.className = 'aim-room-close-btn';\n        // add another className, aim-close-pond-chat-btn\n        closePondChatBtn.classList.add('aim-close-pond-chat-btn');\n        closePondChatBtn.classList.add('aim-room-close-btn');\n        closePondChatBtn.setAttribute('data-context', contextName);\n        closePondChatBtn.setAttribute('data-type', windowType);\n\n        chatWindow.content.appendChild(buttonBar);\n\n        chatWindow.content.append(toggleRoomListBtn, closePondChatBtn, toggleUserListBtn);\n        // Append the button bar to the chat window content\n\n        setupCloseButtonHandler.call(this, chatWindow, client);\n\n        toggleRoomListBtn.addEventListener('click', () => {\n            aimWindow.classList.toggle('show-room-list');\n            aimWindow.classList.remove('show-user-list');\n        });\n\n        toggleUserListBtn.addEventListener('click', () => {\n            aimWindow.classList.toggle('show-user-list');\n            aimWindow.classList.remove('show-room-list');\n        });\n\n    }\n\n\n    setupAutocomplete.call(this, chatWindow);\n    setupChatWindowButtons.call(this, windowType, contextName, chatWindow);\n    setupMessageForm.call(this, windowType, contextName, chatWindow);\n    setupInputEvents.call(this, windowType, contextName, chatWindow);\n\n    // update the aim-close-chat-btn with contextName\n    const closeButton = $(\".aim-close-chat-btn\", chatWindow.content);\n    if (closeButton.length) {\n        closeButton.attr(\"data-context\", contextName);\n    } else {\n        console.warn(\"No close button found in chat window for context:\", contextName);\n    }\n\n    if (windowType === \"pond\") {\n        $(\".aim-user-list-items\").on(\"click\", (e) => {\n            const username = $(e.target).closest('.aim-user-item').data(\"username\");\n            if (!username) {\n                console.error(\"No username found in clicked element\");\n                return;\n            }\n            this.openChatWindow({ name: username });\n        });\n\n        setupRoomListClickHandler.call(this, chatWindow);\n\n    }\n}\n\nfunction setupMessageForm(windowType, contextName, chatWindow) {\n    $(\".message_form .aim-to\", chatWindow.content).val(contextName);\n\n    $(\".message_form\", chatWindow.content).submit(async (e) => {\n        e.preventDefault();\n        await this.sendMessageHandler(e, chatWindow, windowType, contextName);\n    });\n}\n\nfunction setupRoomListClickHandler(chatWindow) {\n    $(\".aim-room-list-items\", chatWindow.content).on(\"click\", \".aim-room-item\", (e) => {\n        let selectedContext = $(e.target).parent().data(\"context\");\n        if (!selectedContext) {\n            console.warn(\"No context found for clicked room item target\", e.target);\n            return;\n        }\n        selectedContext = selectedContext.replace(\"pond/\", \"\");\n        //console.log(\"Selected context:\", selectedContext);\n        $(\".aim-room-item\", chatWindow.content).removeClass(\"aim-room-active\");\n        $(e.target).addClass(\"aim-room-active\");\n        ensureMessagesContainer.call(this, selectedContext, chatWindow, this.bp.apps.client);\n        $(\".message_form .aim-to\", chatWindow.content).val(selectedContext);\n        toggleMessagesContainer.call(this, selectedContext, chatWindow);\n        // TODO: Implement logic to load messages for selectedContext\n    });\n}\n\nfunction setupCloseButtonHandler(chatWindow, client) {\n    $(chatWindow.content).on(\"click\", \".aim-close-chat-btn, .aim-room-close-btn\", (ev) => {\n        ev.stopPropagation();\n        const context = ev.target.getAttribute(\"data-context\");\n\n        // Remove subscription and container\n        client.removeSubscription(\"pond\", context);\n        $(`.aim-messages-container[data-context=\"${context}\"]`, chatWindow.content).remove();\n        $(`.aim-room-item[data-context=\"${context}\"]`, chatWindow.content).remove();\n        // remove the associated .aim-user-list\n        $(`.aim-user-list[data-context=\"${context.replace(\"pond/\", \"\")}\"][data-type=\"pond\"]`, chatWindow.content).remove();\n        // Update active ponds\n        this.data.activePonds = this.data.activePonds.filter((pond) => pond !== context);\n\n        // clear out this.data.processedMessages[contextName] = [];\n        if (this.data.processedMessages[context]) {\n            this.data.processedMessages[context] = [];\n        }\n\n        // Switch to another pond or hide all containers\n        const remainingContainers = $(\".aim-messages-container\", chatWindow.content);\n        if (remainingContainers.length > 0) {\n            const nextContext = remainingContainers.first().data(\"context\");\n            toggleMessagesContainer.call(this, nextContext, chatWindow);\n            $(\".aim-room-item\", chatWindow.content).removeClass(\"aim-room-active\");\n            $(`.aim-room-item[data-context=\"${nextContext}\"]`, chatWindow.content).addClass(\"aim-room-active\");\n            $(\".message_form .aim-to\", chatWindow.content).val(nextContext);\n        } else {\n            $(\".aim-messages-container\", chatWindow.content).hide();\n            $(\".message_form .aim-to\", chatWindow.content).val(\"\");\n        }\n\n        // find the .aim-room-list-item with data-pond matching context\n        const roomItem = $(`.aim-room-item[data-context=\"pond/${context}\"]`, chatWindow.content);\n        // find the .aim-room-list-item and remove active class\n        $(\".aim-room-list-item-name\", roomItem).removeClass(\"aim-room-active\");\n\n        // get current count of .aim-chat-area, if 2 show .no-open-ponds\n        const chatAreas = $(\".aim-messages-container\", chatWindow.content);\n        if (chatAreas.length === 0) {\n            $(\".no-open-ponds\", chatWindow.content).flexShow();\n            $('.aim-message-controls', chatWindow.content).hide();\n        }\n        else {\n            $(\".no-open-ponds\", chatWindow.content).hide();\n            $('.aim-message-controls', chatWindow.content).flexShow();\n        }\n\n    });\n}\n\n\nfunction joinPond(pondName) {\n\n    if (!pondName) {\n        console.error(\"Pond name is required to join a pond.\");\n        return;\n    }\n\n    let invalidName = forbiddenNotes.containsBadWord(pondName);\n    if (invalidName) {\n        alert('Invalid pond name. Please choose a different name.');\n        return;\n    }\n\n    // currently all ponds exists in the main \"server\" context, pond_messages_main\n    let chatWindow = this.bp.apps.ui.windowManager.getWindow('pond-chat');\n\n    if (!chatWindow) {\n        // we may want to open  bp.open('buddylist', { context: pondName, type: 'pond' }); in this case\n        console.error(\"Pond message main window not found, cannot join pond.\");\n        // TODO: might be easier to just open the window here instread of parent API doing it\n        // see: apps/pond/pond.js for example\n        /*\n        const pondMainWindow = this.bp.apps.ui.windowManager.getWindow('pond_message_main');\n        if (pondMainWindow) {\n            this.bp.apps.buddylist.joinPond(pondName);\n            pondMainWindow.focus();\n        } else {\n            this.bp.apps.buddylist.openChatWindow({ pondname: pondName });\n        }\n        */\n        return;\n    }\n    // this.openChatWindow({ pondname: pondName });\n    let selectedContext = `${pondName}`;\n    ensureMessagesContainer.call(this, selectedContext, chatWindow, this.bp.apps.client);\n    $(\".message_form .aim-to\", chatWindow.content).val(selectedContext);\n    toggleMessagesContainer.call(this, selectedContext, chatWindow);\n\n}","const defaultProfileFiles = {\n    'index.html': `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My BuddyPond Profile</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n</head>\n<body>\n    <h1>My Profile</h1>\n    <div class=\"profile-section\">\n        <p>Welcome to my BuddyPond profile, hosted on the BuddyPond CDN!</p>\n        <p><strong>Customize Your Profile:</strong></p>\n        <ul>\n            <li>This default profile includes <code>index.html</code>, <code>style.css</code>, and <code>profile.js</code>.</li>\n            <li>You may use any files, the only requirement is <code>index.html</code> must be located in root.</li>\n            <li>Edit or upload files in the <strong>Buddy Files</strong> app (root directory).</li>\n            <li>Add any static files (HTML, CSS, JS, images) or projects (e.g., React, Vue).</li>\n            <li>Use relative paths (e.g., <code>./style.css</code>) to link files.</li>\n        </ul>\n        <p><strong>Example:</strong> Click to change text color.</p>\n        <button id=\"toggleButton\">Toggle Text Color</button>\n        <p class=\"color-text\">This text changes color!</p>\n    </div>\n    <script src=\"./profile.js\"></script>\n</body>\n</html>`,\n    'style.css': `\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    background-color: #f4f4f9;\n    color: #333;\n    margin: 0;\n    padding: 20px;\n    line-height: 1.5;\n}\nh1 {\n    color: #007bff;\n    text-align: center;\n}\n.profile-section {\n    max-width: 600px;\n    margin: 0 auto;\n}\nul {\n    padding-left: 20px;\n    font-size: 0.9em;\n}\ncode {\n    background: #f0f0f0;\n    padding: 2px 4px;\n    border-radius: 3px;\n}\nbutton {\n    background-color: #007bff;\n    color: white;\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    display: block;\n    margin: 10px auto;\n}\nbutton:hover {\n    background-color: #0056b3;\n}\n.color-text {\n    font-size: 1.1em;\n    text-align: center;\n    transition: color 0.3s ease;\n}\n.color-text.toggled {\n    color: #dc3545;\n}`,\n    'profile.js': `\nconst text = document.querySelectorAll('.color-text');\nconst button = document.getElementById('toggleButton');\nbutton.addEventListener('click', () => {\n    text.forEach(item => item.classList.toggle('toggled'));\n});\n`\n};\n\nexport default defaultProfileFiles;","\n// the best way to determine if user has a profile seems to be to just\n// check the CDN for index.html, style.css, and profile.js files\n// if any of them 404, we will programmatically create them here\n// generateDefaultProfile() is called on auth::qtoken ( login success )\n// so on each logic we will check if the profile exists\n// if we didn't do this, we'd have to check profile on File Explorer open or Profile open or Pad open,\n// which would result in a fragmented code and a delay in UI while we check for profile existence\n\nimport defaultProfileFiles from './defaultProfileFiles.js';\n\nexport default async function generateDefaultProfile(qtoken) {\n    const basePath = \"https://files.buddypond.com/\" + qtoken.me;\n\n    // TODO: move to portfolio / faucet\n    // await requestDefaultCoinAllocations.call(this, qtoken);\n\n\n    for (const [fileName, fileContent] of Object.entries(defaultProfileFiles)) {\n        try {\n            const response = await fetch(`${basePath}/${fileName}`);\n            if (!response.ok) throw new Error('File not found, needs creation');\n\n            // check if not 200 response\n            // if not, throw error\n            if (response.status !== 200) throw new Error('File not found, needs creation');\n\n            // check if new location is four-ohh-four, if so, throw error\n            if (response.url === 'https://buddypond.com/four-ohh-four') {\n                throw new Error('File not found, needs creation');\n            }\n\n        } catch (error) {\n            console.log(`Creating ${fileName}: ${error.message}`);\n            const blob = new Blob([fileContent], { type: getFileType(fileName) });\n            const file = new File([blob], fileName, {\n                type: blob.type,\n                lastModified: new Date()\n            });\n            file.filePath = `${fileName}`; // maybe\n\n            try {\n                await this.bp.apps.client.api.uploadFile(file);\n                console.log(`${fileName} uploaded successfully.`);\n            } catch (uploadError) {\n                console.error(`Error uploading ${fileName}: ${uploadError.message}`);\n            }\n        }\n    }\n}\n\nfunction getFileType(fileName) {\n    if (fileName.endsWith('.html')) return 'text/html';\n    if (fileName.endsWith('.css')) return 'text/css';\n    if (fileName.endsWith('.js')) return 'application/javascript';\n    return 'text/plain';\n}\n\n\nasync function requestDefaultCoinAllocations(qtoken) {\n    // before generating the default profile files ( for home page)\n    // we need to establish the users initial MEGA ( Megabytes ) asset allocation in their portfolio\n    // since the user's initial state will have no record, we can simply attempt to add\n    // backend will allow initial allocation of 10 MEGA to all users\n\n    //\n    // Request default MEGA allocation\n    //\n    try {\n        await this.bp.load('portfolio');\n\n\n        await this.bp.apps.portfolio.resource.apiRequest('POST', 'portfolio/' + qtoken.me + '/MEGA', {\n            symbol: 'MEGA',\n            owner: qtoken.me,\n            amount: 10,\n            available: 10,\n            price: 0.1,\n            cost: 0\n        });\n\n    } catch (error) {\n        console.log('Error creating MEGA asset for user', error);\n    }\n\n    //\n    // Request default GBP allocation\n    //\n    try {\n        await this.bp.load('portfolio'); // should be cached at this stage\n        await this.bp.apps.portfolio.resource.apiRequest('POST',  'portfolio/' + qtoken.me + '/GBP', {\n            symbol: 'GBP',\n            owner: qtoken.me,\n            amount: 10000,\n            available: 10000,\n            price: 0.001,\n            cost: 0\n        });\n    } catch (error) {\n        console.log('Error creating GBP asset for user', error);\n    }\n}","// import scrollToBottom from \"./scrollToBottom.js\";\n\n// TODO: add logic for \"reply-message\" action\n//       reply-message action should open a small \"replying to\" box above the closest .aim-message-sender element\n//       The \"Replying to {BuddyName}\" box should contain the message text and a small \"cancel\" button at the right / end of the box\n//       We can assume that data-from will be the same as the sender of the message we are replying to\n\nexport default function bindMessageContextMenu() {\n\n\n\n  bindProfilePictureClick.call(this);\n\n  // Single event delegation for context menu, hover menu, and edit hint actions\n  document.addEventListener('click', (event) => {\n    const target = event.target;\n    let action = target.getAttribute('data-action');\n\n    // Handle context menu item click\n    if (target.classList.contains('aim-context-menu-item') && action) {\n      handleContextMenuItemClick.call(this, action, target);\n      return;\n    }\n\n    // Handle hover menu item click\n\n    // TODO: there must be a better way to do this\n    // Remark: The issue is that we wish to cover the click action for the parent item and all its potential children\n    let isHoverMenuAction = $(target).hasClass('aim-hover-menu-item') || $(target).parents().hasClass('aim-hover-menu-item');\n    action = target.getAttribute('data-action') || target.parentNode.getAttribute('data-action');\n\n    if (isHoverMenuAction && action) {\n      handleContextMenuItemClick.call(this, action, target);\n      return;\n    }\n\n    // Handle edit hint action click (escape/enter)\n    if (target.classList.contains('aim-edit-hint-action') && action) {\n      handleEditHintAction.call(this, action, target);\n      return;\n    }\n\n    // Handle reply cancel button click\n    if (target.classList.contains('aim-reply-cancel') && action === 'cancel-reply') {\n      // get the closest reply box\n      const replyBox = target.closest('.aim-reply-box');\n      cancelReply.call(this, replyBox);\n      return;\n    }\n\n    // Close existing context menu and reset hover menu\n    closeMenus.call(this);\n  });\n}\n\n// Handle context menu or hover menu item click\nfunction handleContextMenuItemClick(action, target) {\n  performAction.call(this, action, target);\n  if (action !== 'more-options') {\n    closeMenus.call(this);\n  }\n}\n\n// Handle edit hint action (escape/enter)\nfunction handleEditHintAction(action, target) {\n  const messageContent = target.closest('.aim-editable-container')?.querySelector('.aim-message-content');\n  if (!messageContent) {\n    console.error('No message content found for edit hint action');\n    return;\n  }\n\n  const messageUUID = messageContent.closest('.aim-chat-message')?.getAttribute('data-uuid');\n  const originalMessage = document.querySelector(`.aim-chat-message[data-uuid=\"${messageUUID}\"]`);\n  if (!originalMessage) {\n    console.error('No original message found');\n    return;\n  }\n\n  const messageData = {\n    uuid: messageUUID,\n    chatId: originalMessage.getAttribute('data-chat-id'),\n    text: originalMessage.getAttribute('data-original-text') || messageContent.innerText\n  };\n\n  if (action === 'cancel-edit') {\n    cancelEdit.call(this, messageContent, messageData.text);\n  } else if (action === 'save-edit') {\n    saveEdit.call(this, messageContent, messageData);\n  }\n\n}\n\n// Close active context and hover menus\nfunction closeMenus() {\n  if (this.activeMessageContextMenu) {\n    this.activeMessageContextMenu.remove();\n    this.activeMessageContextMenu = null;\n  }\n  if (this.activeMessageHoverMenu) {\n    this.activeMessageHoverMenu = null; // Rely on CSS for hiding hover menu\n  }\n  if (this.activeReplyBox) {\n    return;\n    this.activeReplyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.replyMode = false;\n  }\n}\n\n// Perform the specified action\nfunction performAction(action, target) {\n  const closestTarget = target.closest('.aim-context-menu') || target.closest('.aim-chat-message');\n  if (!closestTarget) {\n    console.error('No closest target found');\n    return;\n  }\n  // console.log('closestTarget', closestTarget);\n  const messageUUID = closestTarget.getAttribute('data-uuid');\n  const messageChatId = closestTarget.getAttribute('data-chat-id');\n  const messageFrom = closestTarget.getAttribute('data-from');\n  const messageData = {\n    uuid: messageUUID,\n    chatId: messageChatId,\n    from: messageFrom,\n  };\n\n  const originalMessage = document.querySelector(`.aim-chat-message[data-uuid=\"${messageUUID}\"]`);\n  if (!originalMessage) {\n    console.error('No original message found');\n    return;\n  }\n\n  messageData.text = originalMessage.querySelector('.aim-message-content').innerText;\n\n  if (!messageData.uuid || !messageData.chatId) {\n    console.error('No message data found');\n    return;\n  }\n\n  switch (action) {\n    case 'add-reaction':\n      console.log('Add reaction clicked');\n      break;\n    case 'edit-message':\n      editMessage.call(this, messageData);\n      break;\n    case 'reply-message':\n      replyMessage.call(this, messageData, originalMessage);\n      break;\n    case 'more-options':\n      event.preventDefault();\n      const closestMessage = target.closest('.aim-chat-message');\n      console.log('closestMessage', closestMessage);\n      if (closestMessage) {\n        this.createMessageContextMenu(target, closestMessage);\n      }\n\n      break;\n    case 'quote-message':\n      console.log('Quote message clicked');\n      break;\n    case 'say-message':\n      console.log('Say message clicked');\n      console.log('sayMessage', messageData);\n      this.bp.emit('say::message', messageData);\n      break;\n    case 'report-message':\n      console.log('Report message clicked');\n      break;\n    case 'copy-message':\n      console.log('Copy message clicked');\n      break;\n    case 'delete-message':\n      deleteMessage.call(this, messageData);\n      break;\n    case 'cast-spell':\n      this.bp.open('spellbook', { context: messageData.from, output: 'buddy'});\n      break;\n    default:\n      console.error(`Unknown action: ${action}`);\n  }\n}\n\n// Delete a message\nfunction deleteMessage(messageData) {\n  console.log('Deleting message', messageData);\n  buddypond.removeInstantMessage(messageData);\n}\n\n// Edit a message\nfunction editMessage(messageData) {\n  const messageContent = document.querySelector(\n    `.aim-chat-message[data-uuid=\"${messageData.uuid}\"] .aim-message-content`\n  );\n  if (!messageContent) {\n    console.error('No message content found');\n    return;\n  }\n\n  this.bp.ignoreUIControlKeys = true;\n  const originalText = messageData.text;\n\n  // Wrap message content in an editable container\n  const editableContainer = document.createElement('div');\n  editableContainer.className = 'aim-editable-container';\n  messageContent.parentNode.insertBefore(editableContainer, messageContent);\n  editableContainer.appendChild(messageContent);\n\n  // Store original text for restoration\n  messageContent.closest('.aim-chat-message').setAttribute('data-original-text', originalText);\n\n  // Make content editable\n  messageContent.setAttribute('contenteditable', 'true');\n  messageContent.setAttribute('data-editing', 'true');\n  messageContent.focus();\n\n  // Add UX hint message\n  const editHint = document.createElement('div');\n  editHint.className = 'aim-edit-hint';\n  editHint.innerHTML = `\n    <span class=\"aim-edit-hint-action\" data-action=\"cancel-edit\">escape</span> to cancel • \n    <span class=\"aim-edit-hint-action\" data-action=\"save-edit\">enter</span> to save\n  `;\n  editableContainer.appendChild(editHint);\n\n  // find the closest chatWindow\n  const chatWindow = messageContent.closest('.chatWindow');\n\n  this.scrollToBottom(chatWindow);\n\n  // Named event handler for keydown\n  const handleKeydown = (event) => {\n    if (event.key === 'Escape') {\n      cancelEdit.call(this, messageContent, originalText);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (event.key === 'Enter') {\n      saveEdit.call(this, messageContent, messageData);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  // Named event handler for blur\n  const handleBlur = (ev) => {\n    // ensure the target was not \".aim-edit-hint-action\"\n    console.log('handleBlur', ev.relatedTarget, ev.target.classList);\n    if (ev.relatedTarget && !ev.relatedTarget.classList.contains('aim-edit-hint-action')) {\n      cancelEdit.call(this, messageContent, originalText);\n      cleanupListeners();\n    }\n  };\n\n  // Cleanup function for event listeners\n  const cleanupListeners = () => {\n    messageContent.removeEventListener('keydown', handleKeydown);\n    messageContent.removeEventListener('blur', handleBlur);\n    this.bp.ignoreUIControlKeys = false;\n  };\n\n  // Attach event listeners\n  messageContent.addEventListener('keydown', handleKeydown);\n  messageContent.addEventListener('blur', handleBlur);\n\n  console.log('Editing message', messageData);\n}\n\n// Cancel editing and restore original text\nfunction cancelEdit(messageContent, originalText, restoreText = true) {\n  const editableContainer = messageContent.closest('.aim-editable-container');\n  if (editableContainer) {\n    // Move messageContent back to its original parent\n    editableContainer.parentNode.insertBefore(messageContent, editableContainer);\n    editableContainer.remove();\n  }\n\n  messageContent.setAttribute('contenteditable', 'false');\n  messageContent.removeAttribute('data-editing');\n  if (restoreText) {\n    messageContent.innerText = originalText;\n  }\n  messageContent.blur();\n\n  const messageElement = messageContent.closest('.aim-chat-message');\n  if (messageElement) {\n    messageElement.removeAttribute('data-original-text');\n  }\n\n  console.log('Edit cancelled');\n  this.bp.ignoreUIControlKeys = false;\n}\n\n// Save edited message\nasync function saveEdit(messageContent, messageData) {\n  const editableContainer = messageContent.closest('.aim-editable-container');\n  if (editableContainer) {\n    console.log('Editable container found', editableContainer);\n    // Move messageContent back to its original parent\n    // throws error:  Failed to execute 'insertBefore' on 'Node': The node to be removed is no longer a child of this node. Perhaps it was moved in a 'blur' event handler?\n    // is the blur event already removing this?\n    //editableContainer.parentNode.insertBefore(messageContent, editableContainer);\n    //editableContainer.remove();\n  }\n\n  const newMessageText = messageContent.innerText;\n  messageContent.setAttribute('contenteditable', 'false');\n  messageContent.removeAttribute('data-editing');\n  messageContent.blur();\n\n  const messageElement = messageContent.closest('.aim-chat-message');\n  if (messageElement) {\n    messageElement.removeAttribute('data-original-text');\n  }\n\n  console.log('Edit saved', newMessageText);\n\n  await buddypond.editInstantMessage({\n    from: messageData.from,\n    chatId: messageData.chatId,\n    uuid: messageData.uuid,\n    text: newMessageText,\n  });\n\n  // close the edit hint\n  cancelEdit.call(this, messageContent, null, false);\n}\n\n// Reply to a message\nfunction replyMessage(messageData, originalMessage) {\n  // Close any existing reply box\n  if (this.activeReplyBox) {\n    this.activeReplyBox.remove();\n    this.activeReplyBox = null;\n  }\n\n\n  this.bp.ignoreUIControlKeys = true;\n  this.bp.replyData = messageData; // Store reply data for message submission\n\n  // Create reply box\n  const replyBox = document.createElement('div');\n  replyBox.className = 'aim-reply-box';\n  replyBox.innerHTML = `\n    <span class=\"aim-reply-header\">Replying to ${messageData.from}</span>\n    <button class=\"aim-reply-cancel\" data-action=\"cancel-reply\">Cancel</button>\n  `;\n  //   <span class=\"aim-reply-text\">${messageData.text}</span>\n\n\n  // Insert reply box above .aim-message-sender\n  console.log(\"originalMessage\", originalMessage)\n  const messageSender = $(originalMessage).parent().parent().parent().parent().find('.aim-message-sender')[0];\n  console.log('REEE messageSender', messageSender);\n  if (!messageSender) {\n    console.error('No message sender found');\n    return;\n  }\n  messageSender.parentNode.insertBefore(replyBox, messageSender);\n\n  // Store active reply box\n  this.activeReplyBox = replyBox;\n  // this.activeReplyUUID = messageData.uuid;\n  // find the closet input named \"message_replyto\"\n  const replyInput = replyBox.closest('.chatWindow').querySelector('input[name=\"message_replyto\"]');\n  const messageTextInput = replyBox.closest('.chatWindow').querySelector('textarea[name=\"message_text\"]');\n  // set the value of the input to the messageData.uuid\n  // set the focus to the replyInput\n  if (replyInput) {\n    replyInput.value = messageData.uuid;\n  } else {\n    console.error('No reply input found');\n  }\n  if (messageTextInput) {\n    messageTextInput.focus();\n  } else {\n    console.error('No message text input found');\n  }\n\n  // Find the closest chatWindow and scroll to bottom\n  const chatWindow = originalMessage.closest('.chatWindow');\n  if (chatWindow) {\n    this.scrollToBottom(chatWindow);\n  }\n\n  const handleKeydown = (event) => {\n    if (event.key === 'Escape') {\n      //cancelEdit(messageContent, originalText);\n      cancelReply.call(this, replyBox);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (event.key === 'Enter') {\n      // saveEdit.call(this, messageContent, messageData);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  // Cleanup function for event listeners\n  const cleanupListeners = () => {\n    messageTextInput.removeEventListener('keydown', handleKeydown);\n    // messageTextInput.removeEventListener('blur', handleBlur);\n    this.bp.ignoreUIControlKeys = false;\n  };\n\n  messageTextInput.addEventListener('keydown', handleKeydown);\n\n  console.log('Reply mode activated', messageData);\n\n}\n\n// Cancel reply mode\nfunction cancelReply(replyBox) {\n  console.log('Cancel reply', replyBox);\n  console.log('aimReplyBox', replyBox);\n  if (replyBox) {\n\n    // clear out the .aim-replyto input value\n    const replyInput = replyBox.closest('.chatWindow').querySelector('input[name=\"message_replyto\"]');\n    if (replyInput) {\n      replyInput.value = '';\n    } else {\n      console.error('No reply input found');\n    }\n\n    replyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.ignoreUIControlKeys = false;\n    this.bp.replyData = null;\n  }\n\n  console.log('Reply cancelled');\n}\n\nfunction bindProfilePictureClick() {\n\n  document.addEventListener('click', (event) => {\n    let target = event.target;\n    // if target is svg and parent has class aim-profile-picture\n    // console.log(' bindProfilePictureClick target', target, target.tagName);\n    if ($(target).parents().hasClass('aim-profile-picture')) {\n      //if (target.classList.contains('.aim-avatar')) {\n      const chatMessageElement = target.closest('.aim-chat-message')\n      if (!chatMessageElement) {\n        // console.error('No chat message element found');\n        return;\n      }\n      let buddyname = chatMessageElement.getAttribute('data-from');\n      console.log('Profile picture clicked', buddyname);\n\n      if (buddyname === this.bp.me) {\n        // opens profile edit page\n        this.bp.open('profile', { context: 'edit' });\n      } else {\n        // opens profile page\n        // this.bp.emit('profile::view', buddyname);\n        this.bp.open('user-profile', { context: buddyname });\n\n      }\n\n    }\n  });\n\n}","import createWebSocketClient from './createWebSocketClient.js';\n\nexport default class Client {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.config = {\n      host: \"\",\n      api: \"\",\n    };\n\n    this.api = buddypond;\n\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 999999; // Set to a high number for unlimited attempts\n    this.maxBackoffDelay = 10000; // 10 seconds\n    this.isIntentionallyClosed = false; // Flag to track intentional closure\n\n    return this;\n  }\n}\n\nClient.prototype.connect = async function connectBuddyListWs() {\n  console.log(\"Connecting to BuddyList WebSocket...\");\n  this.wsClient = await this.createWebSocketClient();\n  console.log(\"Connected to BuddyList WebSocket!\");\n  // TODO: needs to return / await the connection event\n  // TODO: should emit buddylist::connected event ( not auth::qtokenid event )\n  this.bp.emit('buddylist::connected', this.wsClient);\n}\n\nClient.prototype.disconnect = async function disconnectBuddyListWs() {\n  console.log(\"Attempting disconnecting from BuddyList WebSocket...\");\n  if (this.wsClient) {\n    this.wsClient.closeConnection();\n    this.wsClient = null;\n    console.log(\"Disconnected from BuddyList WebSocket\");\n  } else {\n    console.log(\"No active WebSocket connection to disconnect\");\n  }\n}\n\nClient.prototype.addBuddy = async function addBuddy(buddyname, cb) {\n  console.log(\"NEW Calling addBuddy\", this, buddyname);\n\n  apiRequest('/buddylist/' + this.bp.me + '/add-buddy', 'POST', {\n    buddyname: buddyname\n  }, function (err, data) {\n    cb(err, data);\n  })\n}\n\nClient.prototype.receivedInstantMessage = async function receivedInstantMessage(buddyName, cb) {\n  this.wsClient.send(JSON.stringify({\n    action: \"receivedInstantMessage\",\n    buddyname: buddyName,\n  }));\n  cb(null);\n}\n\nClient.prototype.setStatus = async function setStatus(buddyName, update, cb = function noop () {}) {\n  // use wsClient to send the status update\n  // console.log('calling setStatus', buddyName, update);\n  this.wsClient.send(JSON.stringify({\n    action: \"setStatus\",\n    buddyname: buddyName,\n    status: update.status,\n    profilePicture: update.profilePicture\n  }));\n  cb(null);\n};\n\nClient.prototype.createWebSocketClient = createWebSocketClient;\n\nfunction apiRequest(uri, method, data, cb) {\n  let url;\n\n  url = buddypond.endpoint + uri;\n\n  // console.log(\"making apiRequest\", url, method, data);\n\n  let headers = {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    \"X-Me\": buddypond.me, // ✅ Include X-Me header for user identification\n  };\n\n  if (buddypond.qtokenid) {\n    headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n  }\n\n  let body = method === \"POST\" ? JSON.stringify(data) : undefined;\n\n  // Prepare fetch options\n  const options = {\n    method: method,\n    headers: headers,\n    body: body,\n    // credentials: \"include\",  // ✅ Allow CORS with cookies/auth headers\n  };\n\n  // Handling fetch timeout manually\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 sec timeout\n\n  buddypond.incrementPackets(\"packetsSent\");\n  let perf = { start: new Date() };\n  // console.log(\"apiRequest\", url, options);\n  fetch(url, { ...options, signal: controller.signal })\n    .then(response => {\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        // Parse JSON for non-2xx responses\n        return response.json().then(errorData => {\n          // Create a custom error with status and JSON data\n          const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n          error.status = response.status;\n          error.data = errorData; // Attach JSON payload\n          throw error;\n        });\n      }\n      return response.json();\n    })\n    .then(data => {\n      buddypond.incrementPackets(\"packetsReceived\");\n      perf.end = new Date();\n      buddypond.addPerfTime(perf);\n      cb(null, data);\n    })\n    .catch(error => {\n      let msg = \"Fetch connection error. Retrying shortly.\";\n      if (error.name === \"AbortError\") {\n        msg = \"Fetch request timeout\";\n      } else if (error.message.includes(\"Payload Too Large\")) {\n        msg = \"File upload was too large. Try a smaller file.\";\n      } else if (error.status === 400 && error.data) {\n        // Use the JSON payload from the 400 error\n        msg = error.data.error || error.data.message || \"Invalid input. Please try again.\";\n      } else {\n        msg = error.message;\n      }\n      console.error(\"❌ API Request Failed:\", error);\n      cb(new Error(msg), error.data || null);\n    });\n}","// TODO: decouple Buddylist class from Message Class\n// TODO: formalize Message class\n\nimport processBuddylist from \"./lib/processProfile.js\";\nimport renderOrUpdateBuddyInBuddyList from \"./lib/renderOrUpdateBuddyInBuddyList.js\";\nimport createChatMessageElement from \"./lib/message/createChatMessageElement.js\";\nimport renderChatMessage from \"./lib/message/renderChatMessage.js\";\nimport renderBuddyRequests from \"./lib/renderBuddyRequests.js\";\nimport buddylistUIEvents from \"./lib/buddylistUIEvents.js\";\nimport openChatWindow from \"./lib/openChatWindow.js\";\nimport generateDefaultProfile from \"./lib/generateDefaultProfile.js\";\nimport requestDefaultCoinAllocations from \"./lib/requestDefaultCoinAllocations.js\";\nimport defaultChatWindowButtons from \"./lib/defaultChatWindowButtons.js\";\nimport sortBuddyList from \"./lib/sortBuddyList.js\";\n// buddylist context menu\nimport showContextMenu from \"./lib/showContextMenu.js\";\n// chat message context menu\nimport bindMessageContextMenu from \"./lib/message/bindMessageContextMenu.js\";\nimport createMessageContextMenu from \"./lib/message/createMessageContextMenu.js\";\nimport loadUserApps from \"./lib/loadUserApps.js\";\n\nimport sendMessageHandler from \"./lib/message/sendMessageHandler.js\";\nimport showCard from \"./lib/message/showCard.js\";\nimport scrollToBottom from \"./lib/message/scrollToBottom.js\";\n\nimport defaultAvatarSvg from \"./lib/buddy/defaultAvatarSvg.js\";\n\n\n\n// new ws api\nimport Client from './lib/ws/Client.js';\n\n// TODO: why does client care about making UUID at all?\n// this is the responsibility of the server\n// TODO: remove uuid(), is most likely used for local render of message before server confirms ( which is removed atm )\nfunction uuid() {\n    return new Date().getTime();\n}\n\nexport default class BuddyList {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.data = {\n            processedMessages: {},\n            profileState: {\n                me: null,\n                status: null, // are these used?\n                profilePicture: null, // are these used?\n                updates: {}\n            },\n            avatarCache: new Map()\n        };\n\n        this.defaultPond = 'Buddy';\n        this.subscribedBuddies = [];\n        this.subscribedPonds = [];\n        this.options = options;\n\n\n        // ensures autocomplete options are always used regardless of entry\n        if (bp.apps.buddyscript && bp.apps.buddyscript.commands) {\n            this.options.autocomplete = bp.apps.buddyscript.commands;\n        }\n\n        this.showedHelp = false;\n\n        // alias global logout to the buddylist logout\n        // buddylist logout will handle both buddylist and message logout\n        this.bp.logout = this.logout.bind(this);\n\n        // pull in the default button\n        this.options.chatWindowButtons = this.options.chatWindowButtons || defaultChatWindowButtons(this.bp);\n\n        // add any active buttons that have been added in this session\n        // add the this.bp.apps.desktop.enabledChatWindowButtons array to this.options.chatWindowButtons\n\n        let enabledChatWindowButtons = this.bp.apps.desktop.enabledChatWindowButtons;\n        // iterate through each button and fetch the appList data.chatButton data ( hydrate the button )\n        if (enabledChatWindowButtons && Array.isArray(enabledChatWindowButtons)) {\n            enabledChatWindowButtons.forEach(buttonMeta => {\n                let app = this.bp.apps.desktop.appList[buttonMeta.name];\n                if (app && app.chatButton) {\n                    this.options.chatWindowButtons.push(app.chatButton);\n                }\n            });\n        }\n\n        this.opened = false;\n        this.showingIsTyping = this.showingIsTyping || {};\n\n        this.activeMessageContextMenu = null;\n\n        this.faucetAttempts = 0;\n\n    }\n\n    async init() {\n        // Add event when user closes browser window or navigates away\n        window.addEventListener('beforeunload', (event) => {\n            // Show warning message\n            //event.preventDefault();\n            //event.returnValue = \"Are you sure you want to leave? Your status will be set to offline.\";\n            // Attempt to set status to offline (you may need a sync alternative)\n            // if page has quickly refreshed, client might be defined yet or connected\n            if (this.client) {\n                this.client.setStatus(this.bp.me, {\n                    status: 'offline'\n                }, function (err, re) {\n                    console.log('buddypond.setStatus', err, re);\n                });\n\n            }\n            //return event.returnValue;\n        });\n        // this.bp.load('ramblor');\n\n        await this.bp.appendScript('/v5/apps/based/buddylist/vendor/marked.min.js');\n\n        // TODO: we can load this lazier\n        this.bp.vendor.dicebear = await this.bp.importModule('/v5/apps/based/buddylist/vendor/dicebear.core.js', {}, false);\n        this.bp.vendor.dicebearAvatars = await this.bp.importModule('/v5/apps/based/buddylist/vendor/dicebear.identicon.js', {}, false);\n        await bp.load('emoji-picker');\n\n        //console.log('LOADED dicebear', this.dicebear);\n        //console.log('LOADED dicebearAvatars', this.dicebearAvatars);\n\n        this.bindMessageContextMenu();\n\n        // TODO: probably should remove this event and just use handleAuthSuccess handler?\n        /*\n        this.bp.on('auth::qtoken', 'connect-to-websocket-server', (qtoken) => {\n            //this.qtokenid = qtoken.qtokenid;\n            //this.api.qtokenid = this.qtokenid;\n            //this.api.me = qtoken.me;\n            //this.me = qtoken.me;\n            //this.bp.me = this.me;\n            //this.bp.qtokenid = this.qtokenid;\n            //this.client = new this.Client(bp);\n            //this.client.connect();\n        });\n        */\n\n    }\n\n    async open(config = { type: 'buddylist-profile' }) {\n        // buddylist supports (2) window types for bp.open('buddylist, { type: 'buddylist-profile' })\n        // 'buddylist-profile' - the default buddylist window\n        // 'buddylist-chat' - a chat window\n        // console.log('BuddyList open config', config)\n\n        if (typeof config.type !== 'string') {\n            config.type = 'buddylist-profile';\n        }\n\n        if (config.type === 'buddylist-profile') {\n\n            // TODO: have the ability to close and re-open the buddylist gracefully\n\n            if (this.opened) {\n                // console.log('BuddyList already opened, focusing existing window');\n                this.buddyListWindow.open();\n                this.bp.apps.ui.windowManager.focusWindow(this.buddyListWindow);\n                this.buddyListWindow.restore();\n                $('.loginForm input[name=\"username\"]').focus();\n                return 'buddylist already open';\n            }\n\n            this.opened = true;\n\n            const htmlStr = await this.bp.fetchHTMLFragment('/v5/apps/based/buddylist/buddylist.html');\n            this.messageTemplateString = await this.bp.fetchHTMLFragment('/v5/apps/based/buddylist/message.html');\n            this.bp.appendCSS('/v5/apps/based/buddylist/buddylist.css');\n            this.bp.appendCSS('/v5/apps/based/buddylist/messages.css');\n\n            // this.bp.apps.themes.applyTheme(this.bp.settings.active_theme);\n\n            // await this.bp.importModule('https://cdn.jsdelivr.net/npm/uuid@11.0.3/+esm', {}, false)\n\n            // loads affirmations messages via the affirmations app\n            let affirmations = await this.bp.importModule('affirmations');\n\n            const buddyListWindow = this.createBuddyListWindow();\n            buddyListWindow.content.appendChild(this.createHTMLContent(htmlStr));\n            this.buddyListWindow = buddyListWindow;\n\n            if (this.eventsBound !== true) {\n              // TODO: it would be better if we unregister events on close\n              // and left this close to re-bind on open\n              this.registerEventHandlers();\n            }\n\n            this.buddylistUIEvents();\n            this.handleAuthentication();\n\n            this.eventsBound = true;\n\n            return 'hello buddyList';\n        }\n\n        // Remark: is this code still used? can we remove? handled by openChatWindow\n        // called from elsewhere?\n        if (config.type === 'pond') {\n            console.log('BuddyList open config.type is pond', config);\n            // the type of window is a chat window\n            // we *don't* need to re-render the buddylist-profile \n            this.openChatWindow(config);\n        }\n\n        if (config.type === 'chat') {\n            // the type of window is a chat window\n            // we *don't* need to re-render the buddylist-profile \n            this.openChatWindow(config);\n        }\n\n    }\n\n    createBuddyListWindow() {\n\n        // calculate right side of screen\n        let x = window.innerWidth - 250;\n\n        let buddyListWindow = this.bp.apps.ui.windowManager.createWindow({\n            app: 'buddylist',\n            type: 'buddylist-profile',\n            title: 'Buddy List',\n            icon: '/desktop/assets/images/icons/icon_profile_64.png',\n            id: 'buddylist',\n            parent: this.bp.apps.ui.parent,\n            width: 250,\n            height: 500,\n            x: x,\n            y: 50,\n            onOpen: () => {\n\n                // Remark: We seeing a race condition where the input field is not focusable\n                // Most likely due to element being hidden / shown\n                // We hooked into window focus events and everything appeared OK in regards to conflicting focus() calls\n                // The issue is most likely due to the element being hidden\n                // This still doesn't work as intended since the element might actually be hidden\n                // TODO: find a better way to handle this\n                function focusOnInput() {\n                    const $loginInput = $('.loginForm input[name=\"username\"]');\n                    console.log('focusOnInput: Found elements:', $loginInput.length, $loginInput);\n\n                    // If the element doesn’t exist, retry after a delay\n                    if ($loginInput.length === 0) {\n                        console.log('Input not found, retrying in 100ms');\n                        setTimeout(focusOnInput, 100);\n                        return;\n                    }\n\n                    // Check if the element is focusable\n                    const input = $loginInput[0]; // Get the raw DOM element\n                    const isFocusable = input.offsetParent !== null && // Visible in the DOM\n                        !input.disabled && // Not disabled\n                        input.tabIndex !== -1 && // Focusable via tab\n                        getComputedStyle(input).visibility !== 'hidden' && // Not hidden\n                        getComputedStyle(input).display !== 'none'; // Not display: none\n\n                    if (!isFocusable) {\n                        console.log('Input is not focusable yet, retrying in 100ms', {\n                            isVisible: input.offsetParent !== null,\n                            isEnabled: !input.disabled,\n                            tabIndex: input.tabIndex,\n                            visibility: getComputedStyle(input).visibility,\n                            display: getComputedStyle(input).display\n                        });\n                        setTimeout(focusOnInput, 100);\n                        return;\n                    }\n\n                    // Attempt to focus and verify\n                    $loginInput.focus();\n                    setTimeout(() => {\n                        if (document.activeElement === input) {\n                            console.log('Focus successful on:', input);\n                        } else {\n                            console.warn('Focus failed, active element is:', document.activeElement);\n                            // Optionally retry\n                            setTimeout(focusOnInput, 100);\n                        }\n                    }, 0); // Check focus in the next tick\n                }\n                // focusOnInput();\n                // if we call this in console after load, it works\n                $('.loginForm input[name=\"username\"]').focus();\n\n            },\n            onClose: () => {\n                this.opened = false;\n                // disconnect from websocket server\n                if (this.client) {\n                    this.client.disconnect();\n                    this.client = null;\n                }\n            }\n        });\n\n        return buddyListWindow;\n\n    }\n\n    registerEventHandlers() {\n        // console.log('BuddyList registerEventHandlers');\n        this.bp.on('auth::qtoken', 'handle-auth-success', qtoken => this.handleAuthSuccess(qtoken));\n\n        // On auth success, load user specific apps ( TODO: should pull from DB )\n        this.bp.on('auth::qtoken', 'load-user-apps', qtoken => this.loadUserApps());\n\n        // Generate default profile files ( TODO: don't run this each time, keep track on profile state if users generated default profile )\n        this.bp.on('auth::qtoken', 'generate-default-profile-files', qtoken => {\n            // give the app a moment to load messages and open windows before generating default profile\n            // TODO: we could do this server-side instead\n            setTimeout(() => {\n                try {\n                    // alert('Generating default profile files');\n                    this.generateDefaultProfile(qtoken)\n\n                } catch (err) {\n                    console.error('generate-default-profile-files', err);\n                }\n            }, 6000);\n\n        });\n\n        this.bp.on('buddylist-websocket::connected', 'update-buddylist-connected', ws => {\n            // sets buddylist status to online\n            $('.onlineStatusSelect').val('online');\n            $('.loggedOut').flexHide();\n            $('.loggedIn').flexShow();\n\n            this.bp.apps.buddylist.client.wsClient.send(JSON.stringify({\n                action: 'getCoinBalance',\n                buddyname: this.bp.me,\n                qtokenid: this.bp.qtokenid,\n            }));\n\n            //$('.loggedIn').addClass('show');\n        });\n\n        // Remark: This has been removed in favor of letting windows manage their own state\n        // If the buddylist emits newMessages: true for a buddy, the window will open automatically calling getMessages\n        //this.bp.on('client::websocketConnected', 'get-latest-messages', ws => this.getLatestMessages());\n\n        this.bp.on('profile::buddylist', 'process-buddylist', ev => this.processBuddylist(ev.data));\n\n        this.bp.on('profile::buddy::in', 'render-or-update-buddy-in-buddylist', data => this.renderOrUpdateBuddyInBuddyList(data));\n        this.bp.on('profile::buddy::out', 'remove-buddy-from-buddylist', data => {\n            console.log('profile::buddy::out', data);\n            const buddyName = data.name;\n            let buddyListItem = $(`li[data-buddy=\"${buddyName}\"]`, '.buddylist');\n            console.log('buddyListItem', buddyListItem);\n            buddyListItem.remove();\n        });\n\n        this.bp.on('profile::fullBuddyList', 'render-or-update-buddy-in-buddylist', data => {\n            let buddylist = data.buddylist || {};\n            console.log('profile::buddy::full_profile', data);\n            for (let b in buddylist) {\n                let buddy = {\n                    name: b,\n                    profile: buddylist[b]\n                }\n                this.data.profileState = this.data.profileState || {};\n                this.data.profileState.buddylist = this.data.profileState.buddylist || {};\n\n                this.data.profileState.buddylist[b] = buddy.profile;\n                // console.log('renderOrUpdateBuddyInBuddyList', buddy);\n                this.renderOrUpdateBuddyInBuddyList(buddy);\n            }\n\n            if (buddylist[this.bp.me]) {\n                // for now...needs to change shape of server response to include root fields?\n                if (buddylist[this.bp.me].profile_picture) {\n                    // console.log('setting profilePicture', buddylist[this.bp.me].profile_picture);\n                    this.data.profileState.profilePicture = buddylist[this.bp.me].profile_picture;\n                }\n                if (buddylist[this.bp.me].status) {\n                    // console.log('setting status', buddylist[this.bp.me].status);\n                    this.data.profileState.status = buddylist[this.bp.me].status;\n                }\n            }\n\n            if (data.email) {\n                this.data.profileState.email = data.email;\n                // update the email input field\n                $('.buddy_email').val(data.email);\n            }\n\n            if (typeof data.emailVerified === 'boolean') {\n                this.data.profileState.emailVerified = data.emailVerified;\n                // update the email verified checkbox\n                // $('.buddy_email_verified').prop('checked', data.emailVerified);\n                if (data.emailVerified) {\n                    $('.buddy_email_verified_text').html('Email Verified');\n                } else {\n                    $('.buddy_email_verified_text').html('Email Not Verified');\n                }\n            }\n\n            // iterate through all buddies and call renderOrUpdateBuddyInBuddylist\n\n        });\n\n\n\n\n        // Remark: removing buddy-in sound because Marak account is friends without everyone is is constantly triggering the sound\n        // We'll have to be smarter about when to play sounds and limit the amount of BUDDY-IN a single buddy can trigger\n        // total amount of buddy-in sounds per time window ( in case of 100s of buddies, etc )\n        // this.bp.on('profile::buddy::in', 'play-buddy-in-sound', data => bp.play('desktop/assets/audio/BUDDY-IN.wav'));\n\n        // Remark: buddy-out sound disabled until new client connection logic with backend is fully tested \n        //         ( was triggering too many sounds too often )\n        //this.bp.on('profile::buddy::out', 'play-buddy-out-sound', data => bp.play('desktop/assets/audio/BUDDY-OUT.wav'));\n        this.bp.on('buddy::message::processed', 'play-im-sound', data => {\n            if (data.noAlert) {\n                // don't play sound if noAlert is set by server\n                return;\n            }\n            // only play sounds for recent messages\n            let messageTime = new Date(data.ctime);\n            let now = new Date().getTime();\n            //console.log(\"messageTime\", messageTime);\n            //console.log(\"now\", new Date());\n            if (now - messageTime.getTime() < 5000) {\n                bp.play('desktop/assets/audio/IM.wav');\n            }\n        });\n\n        this.bp.on('profile::buddy::newmessage', 'open-chat-window', data => {\n            // open the new chat window only if not already open\n            let windowId = `messages/` + data.name;\n            let win = this.bp.apps.ui.windowManager.getWindow(windowId);\n            if (!win) {\n                this.openChatWindow(data)\n            }\n        });\n\n        this.bp.on('profile::buddy::newmessage', 'mark-messages-as-read', data => this.buddyReadNewMessages(data));\n\n        this.bp.on('profile::buddy::calling', 'start-call', data => {\n            // legacy BP API\n            // console.log(\"profile::buddy::calling\", data);\n            desktop.app.videochat.startCall(false, data.name, function (err, re) {\n                console.log('startCall callback', err, re);\n            });\n\n        });\n\n        // buddylist should not respond to auth::logout \n        // this.bp.on('auth::logout', 'logout', () => this.logout());\n\n        this.bp.on('profile::status', 'update-profile-status', status => {\n            if (status === 'signout') {\n                this.logout()\n            }\n            this.client.setStatus(this.bp.me, { status }, function (err, re) {\n                if (err) {\n                    console.error('error setting status', err);\n                }\n                // console.log('setStatus', err, re);\n            });\n            /*\n            buddypond.setStatus(this.bp.me, { status }, function(err, re){\n                // console.log('errrrr', err, re);\n            });\n            */\n\n        });\n\n        this.bp.on('buddy::messages', 'render-chat-message', data => this.handleChatMessages(data));\n        this.bp.on('buddy::sendMessage', 'send-buddy-message-to-server', data => this.sendMessageToServer(data));\n        // this.bp.on('pond::sendMessage', 'send-pond-message-to-server', data => this.sendPondMessageToServer(data));\n\n        //this.bp.on('buddy::sendMessage', 'process-buddymessage-bs', data => this.bp.apps.buddyscript.parseCommand(data.text));\n        //this.bp.on('pond::sendMessage', 'process-pondmessage-bs', data => this.bp.apps.buddyscript.parseCommand(data.text));\n\n        // remote isTyping event from server\n        // TODO: move to separate file\n        this.bp.on(\"buddy::isTyping\", \"show-is-typing-message\", message => {\n            // console.log('show-is-typing-message', message);\n            // TODO: move to separate file\n            // TODO: move this to a separate file / function\n            // Handling typing message display\n            if (message.isTyping === true) {\n                // check to see if message.from is the same as the current user\n                // if so, ignore the message\n                if (message.from === this.bp.me) {\n                    return;\n                }\n\n                // check the ctime of the message\n                // console.log(\"isTyping message\", message);\n                let messageTime = new Date(message.ctime);\n                // console.log(\"messageTime\", messageTime.getTime());\n                let now = new Date().getTime();\n                let windowId;\n                if (message.type === 'buddy') {\n                    if (message.to === this.bp.me) {\n                        windowId = `messages/${message.from}`;\n                    } else {\n                        windowId = `messages/${message.to}`;\n                    }\n                }\n\n                if (message.type === 'pond') {\n                    // windowId = `pond_message_-${message.to}`;\n                    windowId = 'pond-chat';\n                }\n\n                let chatWindow = this.bp.apps.ui.windowManager.getWindow(windowId);\n                // don't process isTyping messages over 3 seconds old\n                if (now - messageTime.getTime() > 3000) {\n                    // console.log(\"isTyping message too old\", message);\n                    // return;\n                }\n\n                // console.log('typing message', message);\n\n                let typingIndicatorId = `typing-${message.from}`;\n                let typingMessage = `${message.from} is typing...`;\n\n                if (message.type === 'pond') {\n                    // we need to determine if the current open pond aim-messages-container matches the message.to\n                    if (chatWindow.currentActiveContext !== message.to) {\n                        console.log('pond chat window is not active for this pond', message.to);\n                        return;\n                    }\n                }\n\n\n                // Check if the typing indicator for this user already exists\n                let typingIndicator = $(`.aim-typing span[data-user=\"${message.from}\"]`, chatWindow.content);\n                // console.log('typingIndicator', typingIndicator);\n                // console.log('typingMessage', typingMessage);\n                if (typingIndicator.length === 0) {\n                    // If it does not exist, create a new span and append it to the .aim-typing area\n                    typingIndicator = $('<span></span>')\n                        .attr('data-user', message.from)\n                        .text(typingMessage)\n                        .appendTo($('.aim-typing', chatWindow.content));\n                } else {\n                    // If it exists, just update the text\n                    typingIndicator.text(typingMessage);\n                }\n\n                // Clear any existing timeout for this user\n                // console.log(\"CLEARING OLD TIMER\")\n                if (this.showingIsTyping[typingIndicatorId]) {\n                    clearTimeout(this.showingIsTyping[typingIndicatorId]);\n                }\n\n                // console.log(\"CREATING NEW TIMER\")\n                // Set a new timeout to remove the typing message after very short pause\n                // since there already is a delay from the server\n                this.showingIsTyping[typingIndicatorId] = setTimeout(() => {\n                    typingIndicator.remove();\n                }, 500);\n                return;\n            }\n        })\n\n        // local typing event TOOD: better name\n        // when buddy is typing send a message to the ws server\n        this.bp.on('buddy::typing', 'send-typing-message-to-server', data => {\n            // we don't want to spam typing messages, so we will only send a message every 2 seconds\n            this.lastTypingMessage = this.lastTypingMessage || 0;\n            if (new Date().getTime() - this.lastTypingMessage < 2000) {\n                // return;\n            }\n            this.lastTypingMessage = new Date().getTime();\n            // console.log('buddy::typing', data);\n\n            let chatId = '';\n\n            if (data.type === 'buddy') {\n                let buddyNames = [data.from, data.to].sort();\n                chatId = 'buddy/' + buddyNames.join('/');\n            }\n\n            if (data.type === 'pond') {\n                chatId = 'pond/' + data.to;\n            }\n\n            bp.apps.client.sendWsMessage(chatId, {\n                action: 'send',\n                chatId: chatId,\n                buddyname: buddypond.me,\n                qtokenid: buddypond.qtokenid,\n                message: {\n                    ...data,\n                    chatId,\n                    isTyping: true\n                }\n            });\n            /*\n            if (data.type === 'pond') {\n                this.sendPondMessageToServer(data, false);\n            } else {\n                this.sendMessageToServer(data, false);\n            }\n            */\n            // this.bp.apps.client.sendMessage({ id: uuid(), method: 'sendMessage', data: data });\n\n\n        });\n\n        // TODO: this handler could instead bind to bp.apps.system.messages\n        // a System allows for sending and receiving messages to a sequence of handlers\n        /*\n        */\n        // the buddylist registers with the \"messages\" system\n        // in order to receive messages from other systems\n        /*\n        // this will get or create a system called \"messages\"\n        // the send and recieve handlers should get ordered in the order they are registered\n        // unless the order is specified, which should put the system in the correct order by number values and then undefined last\n        bp.apps.system.registerSystem('messages', {\n            registrant: 'buddylist',\n            send: {\n                // since send is missing name and handler, it will be ignored\n            },\n            receive: {\n                name: 'buddylist-processes-messages',\n                order: 2, // we can stack multiple systems in order\n                handler: (message) => {\n                    console.log('buddylist-processes-messages', message);\n                }\n            }\n        });\n        // this event can be anywhere, doesn't have to be in the buddylist\n        // prob should be though :-D\n        // by sending the events to the messages system, they will \n        // go through the processing chain ( if any exists for that system )\n        // and then we recieved via the receive handler\n        this.bp.on(\n            'buddy::messages',\n            'send-messages-to-messages-system',\n            data => this.bp.apps.systems.messages.send({\n                name: 'buddylist-processes-messages',\n                data: data\n        }));\n       // example of another app which filters messages\n\n        bp.apps.system.registerSystem('messages', {\n            registrant: 'shorten-text',\n            send: {\n                // since send is missing name and handler, it will be ignored\n            },\n            receive: {\n                name: 'shorten-text',\n                order: 1, // we can stack multiple systems in order\n                handler: (message) => {\n                    console.log('shorten text', message);\n                    return message.text.substr(0, 1);\n                }\n            }\n        });\n        */\n        this.bp.on('buddylist-websocket::reward', 'update-local-coin-balance', data => {\n            // TODO: move this into rewards app\n            //$('#menu-bar-coin-balance').text(data.message.newBalance);\n            if (!data.success) {\n                console.log(data.message);\n                return;\n            }\n            rollToNumber($('#menu-bar-coin-balance'), data.message.newBalance)\n\n            // TODO: better condition to check if portfolio app is loaded and ready\n            if (this.bp.apps.portfolio && this.bp.apps.portfolio.portfolioWindow && this.bp.apps.portfolio.portfolioWindow.content && this.bp.apps.portfolio.portfolioData) {\n\n                this.bp.apps.portfolio.updateCoinRow(data.message.symbol, {\n                    symbol: data.message.symbol,\n                    amount: data.message.newBalance,\n                    available: data.message.newBalance,\n                    price: 0.001,\n                    cost: 0.001 * data.message.newBalance\n                });\n\n                let coinSendSelector = $('#coin-send-name');\n                let coinSendBalance = $('#current-balance');\n\n                // if coinSendSelector value is \"GBP\"\n                if (coinSendSelector.val() === 'GBP') {\n                    // set the coin balance to the new balance\n                    // window.rollToNumber(coinSendBalance, data.message.newBalance)\n                    const formattedValue = data.message.newBalance.toLocaleString('en-US');\n\n                    coinSendBalance.text(formattedValue);\n                }\n            }\n        });\n\n        this.bp.on('buddylist-websocket::coinBalance', 'update-local-coin-balance', async (data) => {\n            console.log('buddylist-websocket::coinBalance', data);\n            if (typeof data.message.balance === 'number') {\n                rollToNumber($('#menu-bar-coin-balance'), data.message.balance)\n            } else {\n                this.faucetAttempts++;\n                // should work on 1, adds safe guard in case service is down\n                // we don't want to spam the faucet service or getCoinBalance\n                if (this.faucetAttempts < 3) {\n                    // request initial coin balance, null indicates no portfolio entry for GBP\n                    // if no portfolio entry, request the default coin allocations\n                    await this.requestDefaultCoinAllocations();\n                    // make another request to get the coin balance\n                    this.bp.apps.buddylist.client.wsClient.send(JSON.stringify({\n                        action: 'getCoinBalance',\n                        buddyname: this.bp.me,\n                        qtokenid: this.bp.qtokenid,\n                    }));\n                } else {\n                    console.warn('BuddyList: Too many faucet attempts, not requesting balance again this session');\n                }\n\n            }\n\n        })\n    }\n\n    createHTMLContent(htmlStr) {\n        const html = document.createElement('div');\n        html.innerHTML = htmlStr;\n        $('.loginForm input[name=\"username\"]').focus();\n        return html;\n    }\n\n    getLatestMessages() {\n        // This can also be called when closing a chat window to let the server\n        // know we are no longer interested in messages from that buddy or pond\n        const data = {\n            buddyname: this.subscribedBuddies.join(','),\n            pondname: this.subscribedPonds.join(','),\n            me: this.bp.me\n        };\n        this.bp.apps.client.sendMessage({ id: uuid(), method: 'getMessages', data: data });\n    }\n\n    buddyReadNewMessages(data) {\n        this.bp.log(\"BuddyReadNewMessages\", data);\n        const buddyName = data.name;\n    }\n\n    async handleChatMessages(data) {\n        // console.log('handleChatMessages', data);\n        let windowsToUpdate = new Set();\n        for (const message of data.result.messages) {\n            try {\n                // check to see if we have newMessages in local profile for message.from\n                // if so, send buddypond.receiveInstantMessage(message.from)\n                if (message.from && this.data.profileState && this.data.profileState.buddylist && this.data.profileState.buddylist[message.from] && this.data.profileState.buddylist[message.from].newMessages) {\n                    // console.log(\"SENDING READ NEWMESSAGES ALERT\");\n                    this.data.profileState.buddylist[message.from].newMessages = false;\n                    this.client.receivedInstantMessage(message.from, function (err, re) {\n                        console.log('receivedInstantMessage', err, re);\n                    });\n                }\n                // console.log('handleChatMessages message', message);\n                // return the chatWindow which the message was rendered in\n                let chatWindow = await this.renderChatMessage(message);\n                windowsToUpdate.add(chatWindow);\n\n            } catch (err) {\n                console.log('error rendering chat message', message, err)\n            }\n        }\n        for (const chatWindow of windowsToUpdate) {\n            if (chatWindow && chatWindow.content) {\n                this.scrollToBottom(chatWindow.content);\n            }\n        }\n\n        // show help card if local storage does not have the card shown\n        if (this.bp.settings['viewed-help-card'] !== true && !this.bp.isMobile()) {\n            let chatWindow = windowsToUpdate.values().next().value;\n            this.showCard({\n                chatWindow,\n                cardName: 'help'\n            });\n            // console.log('showing help card', chatWindow);\n            this.showedHelp = true;\n        }\n\n    }\n\n    sendMessageToServer(data, emitLocal = false) {\n        this.bp.log('buddy::sendMessage', data);\n        data.uuid = uuid();\n\n        if (data.text === '') {\n            console.log('will not sendMessageToServer: no text');\n            return;\n        }\n\n        // so confusing client.sendMessage....maybe should be sendWorkerMessage...dunno\n        if (data.type === 'pond') {\n            console.log('sendMessageToServer', data);\n            buddypond.pondSendMessage(data.to, data.text, data, function (err, result) {\n                console.log('pondSendMessage', err, result)\n                console.log(err, result)\n            })\n\n        }\n        if (data.type === 'buddy') {\n            console.log('sendMessageToServer', data);\n            buddypond.sendMessage(data.to, data.text, data, function (err, result) {\n                console.log('pondSendMessage', err, result)\n                console.log(err, result)\n            });\n        }\n        /*\n        this.bp.apps.client.sendMessage({ id: data.uuid, method: 'sendMessage', data: data });\n        data.name = data.to;\n        if (emitLocal) {\n            data.ctime = new Date().getTime();\n            if (this.data.profileState) {\n                data.location = this.data.profileState.location || 'outer space';\n            }\n            this.renderChatMessage(data);\n        }\n        */\n    }\n\n    /*\n    sendPondMessageToServer(data, emitLocal = false) {\n        data.type = 'pond';\n        this.bp.log('pond::sendMessage', data);\n        data.uuid = uuid();\n        data.pondname = data.to;\n        // console.log('sendPondMessageToServer', data);\n        this.bp.apps.client.sendMessage({ id: data.uuid, method: 'sendMessage', data: data });\n        if (emitLocal) {\n            data.ctime = new Date().getTime();\n            if (this.data.profileState) {\n                data.location = this.data.profileState.location || 'outer space';\n            }\n            this.renderChatMessage(data);\n        }\n    }\n    */\n\n    // called on open to verify token ( if exists )\n    // signup / login logic is in buddylistUIEvents.js\n    handleAuthentication() {\n        const api = this.bp.apps.client.api;\n        const localToken = localStorage.getItem('qtokenid');\n        const me = localStorage.getItem('me');\n        if (!localToken) return;\n        // console.log('localToken', localToken, me);\n        api.verifyToken(me, localToken, (err, data) => {\n            if (err) {\n                console.error('Failed to verify token:', err);\n                $('.password').show();\n                $('.loginForm .error').text('Failed to authenticate buddy');\n                return;\n            }\n            console.log('verified token', data);\n            if (data.success) {\n                // A pre-existing token was found and verified, emit the auth event\n                this.bp.emit('auth::qtoken', { qtokenid: localToken, me: me, hasPassword: data.user.hasPassword });\n                $('.loggedIn').flexShow();\n                $('.loggedOut').flexHide();\n                if (!data.user.hasPassword) {\n                    this.bp.open('pincode');\n                }\n\n            } else {\n                $('.loginForm .error').text('Failed to authenticate buddy');\n                $('.password').show();\n                console.error('Failed to authenticate buddy:');\n            }\n        });\n\n    }\n\n    // TODO: this event should only set the qtokenid and local settings?\n    // it could open the chat window?\n    // maybe also could connect to the websocket server for buddylist?\n    // opening the default window initializes the messages client\n    async handleAuthSuccess(qtoken) {\n        // console.log('handleAuthSuccess', qtoken);\n        if (this.client) {\n            console.error('buddylist websocket client already exists and has not been closed. This should not happen');\n            return;\n        }\n\n        this.bp.me = qtoken.me;\n        this.bp.qtokenid = qtoken.qtokenid;\n        this.data.profileState = this.data.profileState || {};\n        this.data.profileState.me = this.bp.me;\n\n        $('#me_title').html('Welcome ' + this.bp.me);\n\n        // TODO: connect-to-websocket-server should happen here\n        // plays welcome message\n        this.bp.play('desktop/assets/audio/WELCOME.mp3', { tryHard: Infinity });\n\n\n        // this will eventually trigger the buddylist::connected event\n        this.client = new this.Client(bp);\n        let connected = await this.client.connect();\n\n        if (!qtoken.hasPassword) {\n            // if the user does not have a password, open the pincode window\n            this.bp.open('pincode');\n        }\n\n        // wait until buddylist is connected and then opens default chat window if defined\n        if (this.defaultPond) {\n            setTimeout(() => {\n                // console.log('Opening default pond chat window', this.defaultPond);\n                let chatWindow = this.openChatWindow({ pondname: this.defaultPond });\n                // loads the hotpond client that populates room lists\n                bp.load('pond');\n            }, 100);\n        }\n\n    }\n}\n\nBuddyList.prototype.renderOrUpdateBuddyInBuddyList = renderOrUpdateBuddyInBuddyList;\nBuddyList.prototype.createChatMessageElement = createChatMessageElement;\nBuddyList.prototype.renderChatMessage = renderChatMessage;\nBuddyList.prototype.renderBuddyRequests = renderBuddyRequests;\nBuddyList.prototype.processBuddylist = processBuddylist;\nBuddyList.prototype.buddylistUIEvents = buddylistUIEvents;\nBuddyList.prototype.openChatWindow = openChatWindow;\nBuddyList.prototype.generateDefaultProfile = generateDefaultProfile;\nBuddyList.prototype.requestDefaultCoinAllocations = requestDefaultCoinAllocations;\nBuddyList.prototype.sortBuddyList = sortBuddyList;\nBuddyList.prototype.showContextMenu = showContextMenu;\n\nBuddyList.prototype.createMessageContextMenu = createMessageContextMenu;\nBuddyList.prototype.bindMessageContextMenu = bindMessageContextMenu;\nBuddyList.prototype.loadUserApps = loadUserApps;\nBuddyList.prototype.sendMessageHandler = sendMessageHandler;\nBuddyList.prototype.showCard = showCard;\nBuddyList.prototype.scrollToBottom = scrollToBottom;\n\nBuddyList.prototype.defaultAvatarSvg = defaultAvatarSvg;\n\n\n// new API\nBuddyList.prototype.Client = Client;\n\n\nBuddyList.prototype.logout = function () {\n    // set status to online\n\n    $('.loginButton').prop('disabled', false);\n    $('.loginButton').removeClass('disabled');\n    $('#menu-bar-coin-balance').text('0');\n\n    this.client.setStatus(this.bp.me, {\n        status: 'offline'\n    }, (err, re) => {\n        console.log('buddypond.setStatus', err, re);\n        // close any open chat windows\n        $('.chatWindow').remove(); // maybe, they could stay open as well\n        // disconnect the client\n        // this.bp.apps.client.logout();\n        $('.password').val('');\n        $('.loggedIn').flexHide();\n        $('.loggedOut').flexShow();\n\n        this.data.profileState = null;\n        this.bp.play('desktop/assets/audio/GOODBYE.wav');\n        // TODO can we now remove bp.apps.client.logout()?\n        this.bp.apps.client.logout();\n        this.client.disconnect();\n        this.client = null;\n        // clear out the local .data scope\n        // TODO: only declare this once ( code is repeated in constructor )\n        this.data = {\n            processedMessages: {},\n            profileState: {\n            },\n            activeUsersInContext: {},\n            activeUsers: [],\n            activePonds: [],\n            avatarCache: new Map()\n        };\n        // empty the buddylist\n        $('.buddylist').empty();\n\n        // hide any .dialog\n        $('.dialog').remove();\n\n    });\n}\n\nfunction rollToNumber($el, value) {\n  // Format number with commas\n  const formattedValue = value.toLocaleString('en-US');\n  const digits = formattedValue.split('');\n\n  // TODO: fix styles on mobile for rolling odometer\n  if (bp.isMobile()) {\n    // For mobile, just set the text directly\n    $el.text(formattedValue);\n    return;\n  }\n\n  // Clear and rebuild digits\n  $el.empty();\n\n  digits.forEach((d, index) => {\n    // Handle comma separately\n    if (d === ',') {\n      $el.append('<span class=\"odometer-comma\">,</span>');\n      return;\n    }\n\n    const digitContainer = $('<div class=\"odometer-digit\"></div>');\n    const inner = $('<div class=\"odometer-digit-inner\"></div>');\n\n    for (let i = 0; i <= 9; i++) {\n      inner.append(`<span>${i}</span>`);\n    }\n\n    digitContainer.append(inner);\n    $el.append(digitContainer);\n\n    // Delay added to force DOM layout flush, staggered for each digit\n    setTimeout(() => {\n      inner.css({\n        'transition': 'transform 0.5s ease-in-out', // Smooth transition\n        'transform': `translateY(-${d * 1}em)`\n      });\n    }, 50 + index * 100); // Base delay + staggered delay per digit\n  });\n}","// Remark: createWebSocketClient is a prototype method of Client, as Client.createWebSocketClient()\nexport default function createWebSocketClient() {\n  // Track reconnect state\n\n  console.log(`Creating WebSocket client for buddylist`);\n  return new Promise((resolve, reject) => {\n    const wsClient = new WebSocket(\n      `${buddypond.buddylistWsEndpoint}?me=${buddypond.me}&qtokenid=${buddypond.qtokenid}`\n    );\n\n    // Handle open event\n    const handleOpen = () => {\n      console.log('WebSocket connection opened to buddylist');\n      this.reconnectAttempts = 0; // Reset reconnect attempts\n\n      this.wsClient = wsClient; // Store the WebSocket instance\n\n      wsClient.send(\n        JSON.stringify({\n          action: 'getProfile',\n          buddyname: buddypond.me,\n          qtokenid: buddypond.qtokenid,\n        })\n      );\n      // Emit connected event\n      bp.emit('buddylist-websocket::connected');\n\n      /*\n      this.updateStatusInterval = setInterval(() => {\n        let status = 'online'; // Default status\n        try {\n          status = bp.apps.buddylist.data.profileState.status;\n        } catch (error) {\n          console.log('Error retrieving profile state status for updateStatusInterval:', error);\n        }\n        // console.log('Sending status update to buddylist:', status);\n        this.bp.emit('profile::status', status);\n      }, 1000 * 60 * 5); // Refresh status every 5 minutes\n      */  \n      /*\n      this.pingInterval = setInterval(() => {\n        if (wsClient.readyState === WebSocket.OPEN) {\n          wsClient.send(JSON.stringify({ action: 'ping' }));\n        }\n      }, 10000);\n      */\n      resolve(wsClient); // Resolve with the WebSocket instance\n    };\n\n    // Handle message event\n    // TODO: move to a separate function\n    const handleMessage = (event) => {\n      try {\n        const parseData = JSON.parse(event.data);\n        // console.log('Got back from server:', parseData);\n        switch (parseData.action) {\n          case 'buddy_added':\n            // console.log('buddy_added WebSocket message received:', parseData);\n            bp.emit('profile::buddy::in', {\n              name: parseData.buddyname,\n              profile: parseData.profile || { ctime: new Date().getTime(), dtime: 0 },\n            });\n            break;\n\n          case 'getRemoteProfiles':\n            // console.log('getRemoteProfiles message received:', parseData);\n            if (parseData.profile && parseData.profile.buddylist) {\n              bp.emit('profile::fullBuddyList', parseData.profile);\n            } else {\n              console.error('getProfile message received but no buddylist:', parseData);\n            }\n\n            break;\n          case 'getProfile':\n            // console.log('getProfile message received:', parseData);\n\n            if (parseData.profile && parseData.profile.buddylist) {\n              bp.emit('profile::fullBuddyList', parseData.profile);\n            } else {\n              console.error('getProfile message received but no buddylist:', parseData);\n            }\n            // TODO: after getting profile, create a new call that wil fetch all buddies DO's to get\n            // most updated state ( a reverse of setStatus() call )\n            // this will ensure we always get the most recent updates for all buddies in case our DO\n            // wasn't updated or missed an update or setStatus() truncation limit for users not recently active\n            // send a message now to getRemoteProfiles\n            console.log('Requesting remote profile backfill for all buddies');\n            // After getting the initial profile ( single DO state, quick load ),\n            // we can request remote profiles for all buddies\n            // This will fetch all buddies DO's and get their most recent state\n            // This is useful for getting the most recent updates for all buddies in case our DO\n            // wasn't updated or missed an update or setStatus() truncation limit for users not recently active\n            wsClient.send(\n              JSON.stringify({\n                action: 'getRemoteProfiles',\n                buddyname: buddypond.me,\n                qtokenid: buddypond.qtokenid,\n              })\n            );\n            break;\n          case 'ping':\n            // console.log('pong message received:', parseData);\n            break;\n          case 'buddy_removed':\n            // alert('buddy_removed WebSocket message received:', parseData);\n            console.log('buddy_removed WebSocket message received:', parseData);\n            this.bp.emit('profile::buddy::out', { name: parseData.buddyname });\n            break;\n          case 'rewards:response':\n            // console.log('rewards:response message received:', parseData);\n            if (parseData.success) {\n              bp.emit('buddylist-websocket::reward', {\n                success: true,\n                message: parseData.message,\n                reward: parseData.reward,\n              });\n\n            } else {\n              bp.emit('buddylist-websocket::reward', {\n                success: false,\n                message: parseData.message,\n              });\n            }\n            break;\n          case 'getCoinBalance':\n            // console.log('getCoinBalance message received:', parseData);\n            if (parseData.success) {\n              bp.emit('buddylist-websocket::coinBalance', parseData);\n            } else {\n              bp.emit('buddylist-websocket::coinBalance', parseData);\n            }\n            break;\n          default:\n            console.log('Last message:', event.data);\n            console.warn('Unknown action received:', parseData);\n            break;\n        }\n      } catch (error) {\n        console.log('Last message:', event.data);\n        console.error('Error parsing WebSocket message:', error);\n        bp.emit('buddylist-websocket::error', { error: 'Message parsing failed' });\n      }\n    };\n\n    // Handle close event\n    const handleClose = (event) => {\n      console.log('WebSocket connection closed to', 'buddylist', 'Code:', event.code, 'Reason:', event.reason);\n\n      // clearInterval(this.pingInterval);\n      clearInterval(this.updateStatusInterval);\n\n      bp.emit('buddylist-websocket::disconnected', { code: event.code, reason: event.reason });\n\n      // Reconnect only if not intentionally closed\n      if (!this.isIntentionallyClosed && this.reconnectAttempts < this.maxReconnectAttempts) {\n        const delay = Math.min(\n          200 * Math.pow(2, this.reconnectAttempts) * (1 + 0.1 * Math.random()), // Exponential backoff with jitter\n          this.maxBackoffDelay\n        );\n        console.log(`Scheduling reconnect attempt ${this.reconnectAttempts + 1} for buddylist in ${delay}ms`);\n        setTimeout(async () => {\n          this.reconnectAttempts++;\n          bp.emit('buddylist-websocket::reconnecting', { attempt: this.reconnectAttempts });\n          try {\n            const newWsClient = await this.createWebSocketClient(); // Attempt to reconnect\n            // Update event listeners to the new WebSocket instance\n            Object.assign(wsClient, newWsClient);\n            this.wsClient = newWsClient;\n          } catch (error) {\n            console.error('Reconnect failed:', error);\n          }\n        }, delay);\n      } else if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n        console.error(`Max reconnect attempts (${this.maxReconnectAttempts}) reached for buddylist. Giving up.`);\n        bp.emit('buddylist-websocket::reconnect_failed');\n      }\n    };\n\n    // Handle error event\n    const handleError = (event) => {\n      console.error('WebSocket error buddylist', event);\n      bp.emit('buddylist-websocket::error', { error: 'WebSocket error' });\n      // Reject the promise if connection hasn't opened yet\n      if (wsClient.readyState !== WebSocket.OPEN) {\n        reject(new Error('WebSocket connection failed'));\n      }\n      // Close to trigger reconnect logic in handleClose\n      wsClient.close(1000, 'Error occurred');\n    };\n\n    // Add event listeners\n    wsClient.addEventListener('open', handleOpen.bind(this));\n    wsClient.addEventListener('message', handleMessage.bind(this));\n    wsClient.addEventListener('close', handleClose.bind(this));\n    wsClient.addEventListener('error', handleError.bind(this));\n\n    // Method to intentionally close the WebSocket\n    wsClient.closeConnection = () => {\n      this.isIntentionallyClosed = true;\n      console.log(`Intentionally closing WebSocket for buddylist`);\n      wsClient.close(1000, 'Normal closure');\n      // Remove event listeners to prevent memory leaks\n      wsClient.removeEventListener('open', handleOpen);\n      wsClient.removeEventListener('message', handleMessage);\n      wsClient.removeEventListener('close', handleClose);\n      wsClient.removeEventListener('error', handleError);\n      bp.emit('buddylist-websocket::closed');\n    };\n  });\n}","export default function defaultChatWindowButtons(bp) {\n\n    return [\n\n        {\n            text: 'Image Search',\n            image: 'desktop/assets/images/icons/icon_image-search_64.png',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // Open the image search window\n                bp.open('image-search', {\n                    output: type || 'buddy',\n                    context: context,\n                    provider: 'giphy-stickers'\n                });\n                return false;\n            }\n        },\n\n        {\n            text: 'BuddySound',\n            image: 'desktop/assets/images/icons/icon_soundrecorder_64.png',\n            onclick: (ev) => {\n                console.log('BuddySound button clicked', ev);\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                bp.open('soundrecorder', { type: type || 'buddy', output: type || 'buddy', context: context });\n\n            }\n        },\n        /* TOOD: add gifstudio back ( with better UX and features )\n        {\n            text: 'BuddyGif',\n            image: 'desktop/assets/images/icons/icon_gifstudio_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                JQDX.openWindow('gifstudio', { type: type || 'buddy', context: context, output: type || 'buddy' });\n            }\n        },\n        */\n        {\n            text: 'BuddyPaint',\n            image: 'desktop/assets/images/icons/icon_paint_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                bp.open('paint', { type: type || 'buddy', output: type || 'buddy', context: context });\n            }\n        },\n        {\n            text: 'BuddySnap',\n            image: 'desktop/assets/images/icons/svg/1f4f7.svg',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('mirror', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('camera', { type: type || 'buddy', output: type || 'buddy', context: context });\n            }\n        },\n        {\n            text: 'BuddyEmoji',\n            image: 'desktop/assets/images/icons/svg/1f600.svg',\n            className: 'emojiPicker',\n            onclick: async (ev) => {\n\n                let $target = $(ev.target);\n\n                // ensure that we don't already have an emoji-picker-popup in document\n                if ($('.emoji-picker-popup').length > 0) {\n                    $('.emoji-picker-popup').remove();\n                }\n\n                $target.emojiPicker({\n                    onSelect: (emoji) => {\n                        console.log(\"Selected:\", emoji);\n                        let messageControls = $target.closest('.aim-message-controls');\n                        $('.aim-input', messageControls).val((i, val) => val + emoji).trigger('input').focus();\n                    }\n                });\n\n                // Immediately show the picker (bypasses internal click)\n                $target.data('emojiPicker_show')?.();\n\n                // focus on .emoji-search input\n                if ($('.emoji-picker-popup').length > 0) {\n                    $('.emoji-search').focus();\n                }\n                return;\n\n                // Replaced: Jun 17, 2025\n                // Legacy EmojiPicker code below, can be removed once we confirm new code above works well\n                // EmojiPicker lazy load is a special case\n                // All other BuddyPond deps / lazy imports with await bp.load() are fine to work as expected\n                // We usually don't need to check existence of the app before loading it\n                // For EmojiPicker we need to recall the original click event with same parameters\n                // This could be resolved by using a new EmojiPicker library or patching the current one\n                if (!bp.apps['emoji-picker']) { // this is not a normal practice for user in await bp.load()\n                    await bp.load('emoji-picker');\n                    // Create a new MouseEvent with the original event's coordinates\n                    const newEvent = new MouseEvent('click', {\n                        bubbles: true,\n                        cancelable: true,\n                        clientX: ev.clientX, // Preserve original x coordinate\n                        clientY: ev.clientY, // Preserve original y coordinate\n                        // Include other relevant properties if needed\n                        button: ev.button,\n                        target: ev.target\n                    });\n                    // Dispatch the new event on the original target\n                    ev.target.dispatchEvent(newEvent);\n                    return;\n                }\n                // now that the emoji-picker is loaded, we can open it as normal\n\n                // focus on the .emojiPicker input\n                $('.emojiPicker').focus();\n\n                // we need to add class activeTextArea to the active textarea\n                // so we can append the emoji to the correct textarea\n                // remove the activeTextArea from all other textareas\n                $('.activeTextArea').removeClass('activeTextArea');\n\n                let messageControls = $(ev.target).closest('.aim-message-controls');\n                // find the closest textarea to the ev.target\n                $('.aim-input', messageControls).addClass('activeTextArea');\n\n            }\n        },\n        {\n            text: 'BuddyCall',\n            type: 'buddy-only',\n            image: 'desktop/assets/images/icons/icon_phone_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('mirror', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('videochat', { type: type || 'buddy', output: type || 'buddy', context: context, isHost: true });\n\n                // should send message to buddy that will open the videocall window on receiving end\n                let message = {\n                    from: bp.me,\n                    to: context,\n                    text: 'Let\\'s have a video call',\n                    type: 'buddy',\n                    card: {\n                        type: 'videochat'\n                    }\n                }\n\n\n                console.log('BuddyCall message', message);\n                // send message to buddy\n                buddypond.sendCardMessage(message, function (err, response) {\n                    if (err) {\n                        console.error('Error sending message', err);\n                    } else {\n                        console.log('Message sent', response);\n                    }\n                });\n\n\n            }\n        },\n        // spellbook\n        {\n            text: 'Spellbook',\n            image: 'desktop/assets/images/icons/icon_spellbook_64.png',\n            onclick: (ev) => {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('spellbook', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('spellbook', { type: type || 'buddy', output: type || 'buddy', context: context });\n            }\n        },\n        // buddycoins\n        {\n            text: 'BuddyCoins',\n            image: 'desktop/assets/images/icons/icon_coin_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('coin', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('portfolio', { type: type || 'buddy', output: context, context: '#portfolio-transfer' });\n            }\n        },\n        /* // TODO: add Dictate with improved UX */\n        {\n            text: 'Dictate',\n            env: 'desktop-only',\n            image: 'desktop/assets/images/icons/icon_dictate_64.png',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                let targetEl = $('.aim-input', $(ev.target).parent().parent());\n                await bp.open('dictate', { type: type || 'buddy', output: type || 'buddy', context: context, targetEl: targetEl });\n            }\n        },\n        {\n            text: 'BuddyHelp',\n            image: 'desktop/assets/images/icons/icon_help_64.png',\n            align: 'right',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // TODO: better way to get the windowId\n                // TODO: instead just use context on the button, like how all the other buttons work\n                let windowIdPrefix = type === 'pond' ? 'pond_message_-' : 'messages/';\n                let windowId = windowIdPrefix + context;\n                if (type === 'pond') {\n                    windowId = 'pond-chat';\n                }\n                // console.log('opening chat window ', windowId)\n                let chatWindow = bp.apps.ui.windowManager.getWindow(windowId);\n                console.log('chatWindow', chatWindow);\n                // bp.apps.buddylist.showCard({ chatWindow, cardName: 'help' });\n\n                let aimInput = chatWindow.content.querySelector('.aim-input');\n                let sendButton = chatWindow.content.querySelector('.aim-send-btn');\n                if (aimInput) {\n                    aimInput.value = '/help';\n                    aimInput.dispatchEvent(new Event('input', { bubbles: true })); // Trigger input event\n                }\n                if (sendButton) {\n                    sendButton.click(); // Simulate button click\n                }\n\n\n\n\n            }\n        }\n    ]\n}","export default function renderGeoFlag(message) {\n    if (message.location === 'outer space' || !message.location) {\n      // Set Antarctica to the default flag when the location is 'outer space'\n      message.location = 'AQ';\n    }\n  \n    if (!message.location || message.location === 'outer space') {\n      return document.createElement('span');  // Return an empty span if no flag should be displayed\n    }\n  \n    // Create an image element for the flag\n    let img = document.createElement('img');\n    img.className = 'geoFlag';\n    img.src = `desktop/assets/geo-flags/flags/4x3/${message.location.toLowerCase()}.svg`;\n    return img;\n  }\n  ","import forbiddenNotes from '../forbiddenNotes.js';\nimport checkForLinksInMessage from './checkForLinksInMessage.js';\n\nexport default async function renderChatMessage(message, _chatWindow) {\n    // console.log('renderChatMessage', message, _chatWindow);\n    // console.log('renderChatMessage', message, _chatWindow);\n    let context = 'default';\n\n    // profanity filter, could also be done in the backend\n    if (message.text && message.text.length > 0) {\n      message.text = forbiddenNotes.filter(message.text);\n    }\n\n    // TODO: needs to check for links inside the message, not just entire links\n    checkForLinksInMessage(message);\n\n    // if there is a #pondname in the message, add a pond card type\n    if (message.text && message.text.length > 0) {\n        let pondNames = findAllHashPondNames(message.text);\n        if (pondNames.length > 0) {\n            message.card = {\n                type: 'pond',\n                pondNames: pondNames\n            }\n        }\n    }\n\n    // Determine the window ID based on the message context\n    let windowId = `messages/${message.to}`;\n\n    // dynamically create the windowId based on the message details\n    if (message.type === 'buddy') {\n        if (message.to === this.bp.me) {\n            /*\n            // we need to check if message.from is not part of the buddy type chatId, could be a bot talking in the buddy chat\n            // this differs from pond chats, as its a third party in a two person chat\n            // the whole approach here is a bit awkward, but is required if we wish for bots to join buddy chat conversations\n            // check if message.from is not part of the chatId\n            let participants = message.chatId.split('/');\n            // remove the first item from the array\n            participants.shift();\n            // check if message.from is not inside the participants array\n            if (!participants.includes(message.from)) {\n              // this means a third party is sending a message in a buddy chat ( a bot most likely )\n              // we need to set the windowId to be the non-me participant\n              let notMe = participants.find(participant => participant !== this.bp.me);\n              // console.log('Setting windowId for non-me participant', notMe);\n              windowId = `messages/${notMe}`;\n              context = notMe;\n            } else {\n              // regular buddy conversation with (2) participants\n              windowId = `messages/${message.from}`;\n              context = message.from;\n            }\n            */\n            windowId = `messages/${message.from}`;\n            context = message.from;\n\n\n        } else {\n            windowId = `messages/${message.to}`;\n            context = message.to;\n        }\n    }\n\n    if (message.type === 'pond') {\n        context = message.to;\n        // windowId = `pond_message_-${message.to}`;\n        windowId = 'pond-chat';\n    }\n    // console.log('windowIdwindowId', windowId)\n    // TODO: scope on processedMessages needs to be keyed by type in addition to context\n    this.data.processedMessages[context] = this.data.processedMessages[context] || [];\n\n    // Stores all active users across all chat windows\n    this.data.activeUsers = this.data.activeUsers || [];\n\n    // Stores all buddies that are currently active in the context of the chat window\n    this.data.activeUsersInContext = this.data.activeUsersInContext || {};\n    this.data.activeUsersInContext[context] = this.data.activeUsersInContext[context] || [];\n\n    this.data.activePonds = this.data.activePonds || [];\n    if (message.type === 'pond') {\n        // If message.to is not in the activePonds, add it\n        if (message.to && !this.data.activePonds.includes(message.to)) {\n            this.data.activePonds.push(message.to);\n            this.bp.emit('pond::activePondAdded', message.to);\n        }\n    }\n\n    if (message.type === 'buddy') {\n        // If message.to is not in the activeUsers, add it\n        if (message.to && !this.data.activeUsers.includes(message.to)) {\n            this.data.activeUsers.push(message.to);\n            this.bp.emit('buddy::activeUserAdded', message.to);\n        }\n        // If message.to is not in the activeUsersInContext, add it\n        if (message.to && !this.data.activeUsersInContext[context].includes(message.to)) {\n            this.data.activeUsersInContext[context].push(message.to);\n        }\n    }\n\n    // If message.from is not in the activeUsers, add it\n    if (message.from && !this.data.activeUsers.includes(message.from)) {\n        this.data.activeUsers.push(message.from);\n        this.bp.emit('buddy::activeUserAdded', message.from);\n    }\n\n\n    // If message.from is not in the activeUsersInContext, add it\n    if (message.from && !this.data.activeUsersInContext[context].includes(message.from)) {\n        this.data.activeUsersInContext[context].push(message.from);\n    }\n\n    // Remark: Removing and editing messages do not currently require a windowId since they currently\n    // do not have a from / to property\n    // We may want to change this in the future to allow for more granular control directly in the chatWindow instance\n    if (message.removed) {\n        console.log(\"ATTEMPTING TO REMOVE MESSAGE\", message);\n        // find the chatMessage by uuid\n        let removedMessageEl = $(`.aim-chat-message[data-uuid=\"${message.removed}\"]`); // could be document as well?\n        if (removedMessageEl.length > 0) {\n            // remove the removed message\n            removedMessageEl.remove();\n        }\n        return;\n    }\n\n    if (message.edited) {\n        console.log(\"ATTEMPTING TO EDIT MESSAGE\", message);\n        // find the chatMessage by uuid\n        let editedMessageEl = $(`.aim-chat-message[data-uuid=\"${message.edited}\"]`); // could be document as well?\n\n        if (!editedMessageEl.length > 0) {\n            console.error('No original message found');\n            return;\n        }\n\n        // get the aim-message-content and set the text to the new message\n        let editedMessageContent = editedMessageEl.find('.aim-message-content');\n        if (editedMessageContent.length > 0) {\n            // remove the edited message\n            editedMessageContent.html(message.text);\n        }\n        return;\n    }\n\n    // console.log('current windows', this.bp.windows);\n    // console.log('renderChatMessage windowId', windowId, message);\n    let chatWindow = this.bp.apps.ui.windowManager.getWindow(windowId);\n\n    if (_chatWindow) {\n        chatWindow = _chatWindow;\n    }\n\n    if (!chatWindow || !chatWindow.content) {\n        console.log('chat window not ready, trying again soon', windowId, message);\n        console.log(message);\n        return;\n    }\n\n    // Check if message already exists in the DOM\n    if (document.querySelector(`.chatMessage[data-uuid=\"${message.uuid}\"]`)) {\n        return; // Message is already rendered\n    }\n\n    // check to see if this command is less than 10 seconds old\n    // TODO: split local and remote commands\n    // TODO: should probably go through card codepath\n    // this means we create the bs-card on the client\n    // we should only run local commands on the client\n    let now = new Date().getTime();\n    let messageTime = new Date(message.ctime).getTime();\n    // needs to determine if this command should be run locally or remotely\n    // for now, only run locally\n    // check to see  if message.from is bp.me\n\n    // remove .aim-no-messages el from chat window if it exists\n    $('.aim-no-messages', chatWindow.content).remove();\n    // console.log('checking this.data.processedMessages[context]', this.data.processedMessages[context]);\n    // Check if message has been processed to avoid duplication\n    for (let i = 0; i < this.data.processedMessages[context].length; i++) {\n        if (this.data.processedMessages[context][i].uuid === message.uuid) {\n            // console.log('Message already processed, skipping rendering', message);\n            // if the message has already been processed by UUID, then it's a duplicate and we should not render it\n            return chatWindow;\n            // we have a special case here we wish to re-render the client message\n            // this indicates the server filtered parts of the message and it should be removed and re-rendered\n            if (this.data.processedMessages[context][i].from === this.bp.me && this.data.processedMessages[context][i].text !== message.text) {\n                // find the chatMessage by uuid\n                let filteredMessageEl = $(`.chatMessage[data-uuid=\"${message.uuid}\"]`, chatWindow.content);\n                if (filteredMessageEl.length > 0) {\n                    // remove the filtered message\n                    filteredMessageEl.remove();\n                    //this.bp.emit('buddy::message::gotfiltered', message);\n                }\n            } else {\n                // else there is no special filtering case from server\n                // and the messaged is a duplicate, return and do not render\n                return;\n            }\n        }\n    }\n\n    // Manage size of processedMessages to prevent memory leaks\n    if (this.data.processedMessages[context].length > 5000) {\n        this.data.processedMessages[context].shift();\n    }\n\n    // Add the processed message UUID to prevent reprocessing\n    this.data.processedMessages[context].push(message);\n\n    // check if this is an Agent message which gets processed first\n    if (message.type === 'agent') {\n\n        // Legacy BP API\n        if (desktop && desktop.app && desktop.app.spellbook && desktop.app.spellbook[message.text]) {\n            desktop.app.spellbook[message.text]();\n            return;\n        } else {\n            console.log('unknown agent message', message);\n        }\n    }\n\n    // TODO: allow buddylist to register message processors\n    // Is most likely best handled using SystemsManager from ECS code\n    // this way all app can register an update method\n    // we can give each app an onMessage method and have the ECS S delegate the message to the app\n    // bp.apps.buddylist.addMessageProcessor('buddyscript', function (message) {});\n    // bp.apps.buddylist.addMessageProcessor('card', function (message) {});\n    // etc\n    // this way we don't have to pollute the buddylist with all the message processing logic\n    // TODO: Migrate TTS app to v5 API\n\n    if (this.bp.apps.say && message.text && message.text.startsWith('/say')) {\n        // this is a /say message\n        this.bp.apps.say.processMessages(message);\n    }\n\n    // check if mobile, is so shorten the time\n    // legacy API\n    if (this.bp.isMobile()) {\n        messageTime = DateFormat.format.date(messageTime, 'hh:mm:ss a');\n\n    } else {\n        messageTime = DateFormat.format.date(messageTime, 'E MMMM dd, hh:mm:ss a');\n    }\n\n    // Format message time\n    messageTime = messageTime.toString();\n\n    // Check to see if message is type card\n\n    let container;\n    if (message.card && this.bp && this.bp.apps && this.bp.apps.card) {\n        //console.log('message is', message);\n        //console.log('message is card', message.card);\n\n        let cardData = message.card;\n        // console.log(\"USING CARD\", cardData, message);\n        // make sure card has props\n        if (Object.keys(cardData).length > 0) {\n            cardData.message = message; // TODO probably should clone for CardManager, etc\n            // default JSON rendering will now fail by default due to nested messages cards with arbitrary props ( no .data scope either ), .context might be good...\n            let cardManager = this.bp.apps.card.cardManager;\n            // console.log('cardManager.loadCard', cardData);\n            const _card = await cardManager.loadCard(cardData.type, cardData, chatWindow);\n            container = document.createElement('div');\n            container.classList.add('cardContainer');\n            let d = await _card.render(container);\n        }\n\n    }\n\n    let bp = this.bp;\n\n    this.createChatMessageElement(message, messageTime, chatWindow, container);\n\n    // console.log('parseChatMessage result', result);\n\n\n    // emit the freshly processed message for any post processing events ( such as playing a sound )\n    if (message.type === 'pond') {\n        this.bp.emit('pond::message::processed', message);\n    } else {\n        this.bp.emit('buddy::message::processed', message);\n    }\n\n    return chatWindow;\n\n}\n\n// TODO: add via addMessageProcessor() on `marked` and `pond` apps\n\nfunction findAllHashPondNames(text) {\n    // Decode HTML entities more comprehensively\n    const decodedText = decodeEntities(text);\n    // Regex: # followed by at least one letter/digit, then optional letters/digits/underscores/hyphens\n    // Requires space or start of string before #, supports Unicode\n    const hashPondNameRegex = /(^|\\s)#([a-zA-Z0-9\\p{L}][a-zA-Z0-9\\p{L}_-]*)/gu;\n    return Array.from(decodedText.matchAll(hashPondNameRegex), m => m[2]);\n}\n\nfunction decodeEntities(text) {\n    const entities = {\n        '&amp;': '&',\n        '&quot;': '\"',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&apos;': \"'\",\n        '&nbsp;': ' ',\n        // Add more as needed\n    };\n    return text.replace(/&[a-zA-Z0-9#]+;/g, match => entities[match] || match);\n}","export default function renderBuddyRequests (buddyrequests) {\n    //console.log(\"renderBuddyRequests\", buddyrequests);\n\n    $('.you_have_no_buddies').hide();\n    let api = this.bp.apps.client.api;\n\n    if (buddyrequests) {\n  \n      $('.pendingIncomingBuddyRequests').html('');\n      $('.pendingOutgoingBuddyRequests').html('');\n      $('.loading').remove();\n  \n      for (let buddy in buddyrequests) {\n        let buddyrequest = buddyrequests[buddy];\n        buddyrequest = JSON.parse(buddyrequest);\n        if (buddyrequest.to === this.bp.me) {\n          $('.pendingIncomingBuddyRequests').append('<li>' + buddyrequest.from + ' - <a href=\"#\" class=\"approveBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.from +'\">Approve</a> / <a href=\"#\" class=\"denyBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.from +'\">Remove</a> </li>');\n        } else {\n          $('.pendingOutgoingBuddyRequests').append('<li>' + buddyrequest.to + ' - <a href=\"#\" class=\"denyBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.to +'\">Remove</a></li>');\n        }\n      }\n  \n      $('.apiResult').val(JSON.stringify(buddyrequests, true, 2));\n  \n      // desktop.app.buddylist.pendingIncomingBuddyRequests = desktop.app.buddylist.pendingIncomingBuddyRequests || 0;\n      this.data.pendingIncomingBuddyRequests = this.data.pendingIncomingBuddyRequests || 0;\n\n      let totalIncomingBuddyRequests = $('.pendingIncomingBuddyRequests li').length;\n  \n      if (totalIncomingBuddyRequests > this.data.pendingIncomingBuddyRequests) {\n        this.data.pendingIncomingBuddyRequests = totalIncomingBuddyRequests;\n  \n        // Remark: short delay is used here to provide nice login experience if Buddy has requests\n        //         allows WELCOME sound to play\n        //         A better solution here is to here priority option for playing sound with queue\n        setTimeout(function () {\n          // this.bp.apps.play('YOUVEGOTMAIL.wav'); // TODO add 'play' app\n        }, 2222);\n      }\n  \n      if (totalIncomingBuddyRequests === 0) {\n        $('.pendingIncomingBuddyRequestsHolder').hide();\n      } else {\n        $('.pendingIncomingBuddyRequestsHolder').show();\n      }\n  \n      if ($('.pendingOutgoingBuddyRequests li').length == 0) {\n        $('.pendingOutgoingBuddyRequestsHolder').hide();\n      } else {\n        $('.pendingOutgoingBuddyRequestsHolder').show();\n      }\n  \n      // TODO: remove links in real-time from client for approve / deny ( no lags or double clicks )\n      //  '.pendingIncomingBuddyRequests'\n      $('.denyBuddyRequest').on('click', function () {\n        $(this).parent().hide();\n        api.denyBuddy($(this).attr('data-buddyname'), function (err, data) {\n          $('.apiResult').val(JSON.stringify(data, true, 2));\n        });\n        return false;\n      });\n  \n      $('.approveBuddyRequest', '.pendingIncomingBuddyRequests').on('click', function () {\n        $(this).parent().hide();\n        let buddyName = $(this).attr('data-buddyname');\n        api.approveBuddy(buddyName, function (err, data) {\n          $('.apiResult').val(JSON.stringify(data, true, 2));\n        });\n        return false;\n      });\n    }\n  \n  }","\n\nexport default async function processProfile(profileState) {\n  // console.log('processBuddylist', profileState);\n\n  // if the client hasn't seen the buddylist yet, we start from empty state\n  if (!this.data.buddylist) {\n    this.data.buddylist = {};\n  }\n  if (!this.data.buddyrequests) {\n    this.data.buddyrequests = {};\n  }\n\n  //console.log('processProfile', profileState);\n  //console.log('this.data.profileState', this.data.profileState);\n  if (this.data.profileState &&\n    (\n      Number(profileState.powerlevel) > Number(this.data.profileState.powerlevel)\n    )\n  ) {\n\n    // Assuming there's a container with ID 'powerLevelContainer' in your HTML\n    const powerLevel = bp.apps.powerlevel.popup;\n\n    // Example of increasing to level 4\n    powerLevel.show(profileState.powerlevel, {\n      duration: 7777\n    });\n  }\n\n  // merge the profile state, don't overwrite\n  this.data.profileState = { ...profileState };\n  // profileState is a JSON document representing entire user profile\n  // console.log('profileState', profileState);\n  if (profileState.system) {\n    $('.totalConnectedCount').html(profileState.system.totalIsConnected);\n    $('.totalOnlineCount').html(profileState.system.totalIsOnline);\n  }\n\n  // metadata about ponds users is joined or ponds of interest ( such as viewing popular ponds list )\n  if (profileState.ponds && profileState.ponds.ponds) {\n    profileState.ponds.ponds.forEach(function (pond) {\n      // check to see if we have an open window with data-app=\"buddylist\" data-type=\"pond\" and data-context=\"${pondName}\"\n      let win = $('#pond_message_-' + pond.name);\n      // update the window-title-text with the number of connected users\n      if (win) {\n        $('.window-title-text', win).html(pond.name + ' Pond (' + pond.connected + ')');\n      }\n    });\n  }\n\n  // we will process the profileState as if it was a differential state update\n  let buddylist = profileState.buddylist;\n  let profileNeedsUpdate = _processBuddylistData(this, buddylist);\n\n  let buddyrequests = profileState.buddyrequests;\n  _processBuddyRequestsData(this, buddyrequests);\n\n  // once we have completed processing all the buddylist profile data\n  // we will want to send back the updated document to awk that we have processed the profile\n  // and set newMessages flags to false\n  let api = this.bp.apps.client.api;\n  // console.log('getBuddyProfile', api, profileState);\n  profileState.updates = profileState.updates || {};\n\n}\n\nfunction _processBuddyRequestsData(buddylist, buddyrequests) {\n  if (buddyrequests) {\n    buddylist.renderBuddyRequests(buddyrequests);\n  }\n}\n\nfunction _processBuddylistData(buddylist, buddylistData) {\n\n  let profileNeedsUpdate = false;\n  if (buddylist) {\n    for (let b in buddylistData) {\n      let buddy = buddylistData[b];\n      let buddyName = b.replace('buddies/', '');\n      // check to see if the buddy is already in the local buddylist\n      // if not, render the buddy in the buddylist\n      /*\n      if (!buddylist.data.buddylist[b]) {\n        if (buddy.isConnected) {\n          buddylist.bp.emit('profile::buddy::in', {\n            name: buddyName,\n            buddydata: buddy\n          });\n        }\n        buddylist.data.buddylist[b] = buddy;\n      } else {\n        // check to see if buddy was connected and is no longer\n        if (!buddy.isConnected && buddylist.data.buddylist[b].isConnected) {\n          buddylist.bp.emit('profile::buddy::out', {\n            name: buddyName,\n            buddydata: buddy,\n            wasOnline: false\n          });\n        }\n      }*/\n\n\n      buddylist.renderOrUpdateBuddyInBuddyList({\n        name: buddyName,\n        buddydata: buddy,\n        wasOnline: false\n      });\n\n      // check if this buddy has sent newMessages\n      // if so, open a new window\n      // the process of opening a new chat window will connect websocket ( if not already connected )\n      // then messages will flow through the websocket\n      if (buddy.newMessages) {\n        buddylist.bp.emit('profile::buddy::newmessage', {\n          name: buddyName\n        });\n        // console.log('updaitng local profile state', buddylist.data.profileState, buddyName)\n        buddylist.data.profileState.buddylist['buddies/' + buddyName] = {\n          newMessages: false\n        };\n        profileNeedsUpdate = true;\n      }\n\n\n      if (buddy.isCalling) {\n        buddylist.bp.emit('profile::buddy::calling', {\n          name: buddyName\n        });\n      }\n\n    }\n  }\n  return profileNeedsUpdate;\n}","export default function buddylistUIEvents() {\n  let api = this.bp.apps.client.api;\n  let affirmations = this.bp.apps.affirmations.affirmations;\n\n  // bind events\n  $('.loginForm').submit((e) => {\n    e.preventDefault();\n\n    // disable the login button\n    $('.loginButton').prop('disabled', true);\n    $('.loginButton').addClass('disabled');\n\n    let username = $('.loginForm input[name=\"username\"]').val();\n    let password = $('.loginForm input[name=\"password\"]').val();\n    if (!password) {\n      password = username;\n    }\n\n    api.authBuddy(username, password, function (err, result) {\n      console.log('authBuddy', err, result);\n      if (err) {\n        if (result && result.error) {\n          $('.loginStatus').html(result.error);\n          if (result.error === 'Incorrect password.') {\n            $('.resetPasswordLink').show();\n          }\n        } else {\n          if (err.message === 'Failed to fetch') {\n            $('.loginStatus').text('Failed to connect to Buddy Pond');\n          } else {\n            $('.loginStatus').html(err.message || 'Failed to authenticate buddy');\n          }\n        }\n        $('.loginButton').prop('disabled', false);\n        $('.loginButton').removeClass('disabled');\n\n        $('.password').show();\n        console.error('Failed to authenticate buddy:', err);\n\n        return;\n      }\n      if (result.success) {\n        // attempt to connect for events after getting auth token\n        //console.log('connecting with valid qtokenid', api.qtokenid);\n        result.me = username;\n        // The user has logged in password or signed up successfully, emit the auth event\n        bp.emit('auth::qtoken', result);\n        // $('.loggedIn').flexShow();\n        $('.loginForm .error').text('');\n\n      } else {\n        // re-enable the login button\n        $('.loginButton').prop('disabled', false);\n        $('.loginButton').removeClass('disabled');\n        if (username === password) {\n          $('.password').show();\n          $('.password').focus();\n          return;\n        }\n        $('.loginForm .error').text('Failed to authenticate buddy');\n        $('.password').show();\n        console.error('Failed to authenticate buddy:');\n      }\n    });\n    return false;\n  });\n\n  $('.onlineStatusSelect').change((e) => {\n    let status = $(e.target).val();\n    // console.log('status', status);\n    bp.emit('profile::status', status);\n  });\n\n  $('.forgot-password').on('click', (ev) => {\n    $('.loginForm').flexHide();\n    $('.forgot-password-modal').flexShow();\n    $('.tos-checkbox').flexHide();\n    $('.loginStatus').html('');\n    $('.resetPasswordLink').flexHide();\n  });\n\n  $('.closeForgotPassword').on('click', (ev) => {\n    $('.forgot-password-modal').flexHide();\n    $('.loginForm').flexShow();\n    $('.tos-checkbox').flexShow();\n    $('.resetPasswordLink').flexShow();\n  });\n\n  $('.resetPasswordButton').on('click', (ev) => {\n    ev.preventDefault();\n    let email = $('.resetPasswordEmail').val();\n    if (!email) {\n      $('.resetPasswordEmail').addClass('error');\n      return;\n    }\n    $('.resetPasswordEmail').removeClass('error');\n    $('.loginStatus').html('Sending password reset email...');\n    $('.resetPasswordForm').flexHide();\n    $('.resetPasswordMessage').flexHide();\n    api.sendPasswordResetEmail(email, (err, data) => {\n      // console.log('sendPasswordResetEmail', err, data);\n      if (err || !data.success) {\n        $('.loginStatus').html('Failed to send password reset email.');\n        console.error(err || data);\n        return;\n      }\n      $('.loginStatus').removeClass('error').addClass('success').html(data.message);\n    });\n  });\n\n  $('.buddylist').click((e) => {\n    // check if element has a data-buddy attribute\n    if (!$(e.target).closest('.buddy-message-sender').data('buddy')) {\n      return\n    }\n    let buddyname = $(e.target).closest('.buddy-message-sender').data('buddy');\n    // console.log('message-buddy', buddyname);\n    this.openChatWindow({ name: buddyname });\n  });\n\n  // Send a buddy request form\n  $('.sendBuddyRequest').on('click', (ev) => {\n    ev.preventDefault();\n    let buddyName = $('.buddy_request_name').val();\n    if (!buddyName) {\n      $('.buddy_request_name').addClass('error');\n      return;\n    }\n\n    $('.you_have_no_buddies').html('Buddy Request Sent!');\n    $('.buddy_request_name').removeClass('error');\n    $('.buddy_request_name').val('');\n    // $('.pendingOutgoingBuddyRequests').append('<li>' + buddyName + '</li>');\n    this.bp.log('buddypond.addBuddy ->', buddyName);\n\n    this.client.addBuddy(buddyName, (err, data) => {\n      console.log('buddypond.addBuddy <-', err, data);\n      if (data.error) {\n        $('.you_have_no_buddies').html(data.error);\n        console.error(data);\n        return;\n      }\n      if (!data.success) {\n        $('.you_have_no_buddies').html(data.message)\n        console.error(data);\n        return;\n      }\n      this.bp.log('buddypond.addBuddy <-', data);\n    });\n\n  });\n\n  // Initially disable the login button\n  $('.loginButton').prop('disabled', true);\n  $('.loginButton').addClass('disabled');\n\n  // Toggle the login button based on the checkbox status\n  $('#tosAgree').change(function () {\n    if ($(this).is(':checked')) {\n      $('.loginButton').prop('disabled', false);\n      $('.loginButton').removeClass('disabled');\n    } else {\n      $('.loginButton').prop('disabled', true);\n      $('.loginButton').addClass('disabled');\n    }\n  });\n\n  /*\n  // TODO: create context meny for buddy-message-sender\n  $(document).on('click', (e) => {\n    // delegate based on if e.target is a .buddy-message-sender\n    // if so, open profile for that buddy\n    //alert(e.target.classList)\n    if ($(e.target).hasClass('buddy-message-sender')) {\n      alert('buddy-message-sender');\n      let buddyName = $(e.target).text();\n      if (this.bp.admin) {\n        // roles are handled server-side, this is a simple UI route for the implied role access\n        // loading admin-profile from another user won't return admin data\n        this.bp.open('admin-profile', { context: buddyName });\n      } else {\n        // this.bp.open('user-profile', { context: buddyName });\n      }\n    }\n  });\n  */\n\n  // Append a custom context menu to the body (hidden initially)\n  // $('body').append('<div id=\"customContextMenu\" class=\"removeMessage\" style=\"display: none; position: absolute; z-index: 1000; background: white; border: 1px solid #ccc; padding: 10px;\">Remove Message</div>');\n\n  // Right-click event on elements with class .buddy-message-sender\n  /*\n  $(document).on('contextmenu', function (e) {\n\n    if (!$(e.target).hasClass('buddy-message-sender')) {\n      return true;\n    }\n\n    e.preventDefault(); // Prevent default context menu\n    let chatMessage = $(e.target).closest('.chatMessage'); // Get the chat message element\n    console.log('using chatMessage', chatMessage.html());\n    if (api.me !== 'Marak') { // could also allow users to remove their own messages\n       // set the removeMessage to disabled class\n      $('#customContextMenu').addClass('disabled');\n    }\n\n    let from = chatMessage.attr('data-from');\n    let to = chatMessage.attr('data-to');\n    let uuid = chatMessage.attr('data-uuid');\n    let type = chatMessage.attr('data-type');\n\n    console.log('type', type, 'from', from, 'uuid', uuid);\n\n    // Position the custom context menu at the mouse coordinates\n    $('#customContextMenu').css({\n      top: e.pageY + 'px',\n      left: e.pageX + 'px',\n      display: 'block'\n    });\n\n    $('#customContextMenu').off('click').on('click', async () => {\n      // Replace 'openProfile' with your actual function to open the profile\n      //openProfile(buddyName);\n\n      let context = to;\n\n      await api.removeMessage({type, from, to, uuid});\n      // $(this).hide(); // Hide the context menu after click\n    });\n  });\n  */\n\n  // Hide context menu when clicking anywhere else on the document\n  /*\n  $(document).on('click', function (e) {\n    if (!$(e.target).hasClass('buddy-message-sender')) {\n      $('#customContextMenu').hide();\n    }\n  });\n  */\n\n  // Invite a buddy link ( opens twitter with a random message )\n  $('.inviteBuddy').on('click', () => {\n    let randomInviteMessages = [\n      `Find me as \"${this.bp.me}\" on https://buddypond.com and let's start a conversation that could last a lifetime.`,\n      `I've taken my conversations to the cloud! Reach me at \"${this.bp.me}\" on https://buddypond.com where the future of messaging unfolds.`,\n      `Wave goodbye to the old and hello to the old! I'm waiting at \"${this.bp.me}\" on https://buddypond.com. Let's catch up!`,\n      `Missing chat sessions? They're back and better than ever at \"${this.bp.me}\" on https://buddypond.com. Join me and let's reconnect!`,\n      `Taking conversations to the next level. Find me at \"${this.bp.me}\" on https://buddypond.com and let's dive into new topics together!`,\n      `Remember the ease of old-school messaging? Experience it again with a twist! I'm \"${this.bp.me}\" at https://buddypond.com. Chat soon?`,\n      `I'm charting new territories in the world of digital communication. Join me as \"${this.bp.me}\" on https://buddypond.com and let's explore together!`,\n      `Just like the good old days but better! Find me on \"${this.bp.me}\" at https://buddypond.com and let's keep the conversations flowing.`,\n    ];\n    let inviteMessage = randomInviteMessages[Math.floor(Math.random() * randomInviteMessages.length)];\n    window.open(`https://twitter.com/intent/tweet?url=${inviteMessage}`);\n    return false;\n  });\n\n  function updatePositiveAffirmation() {\n    let key = affirmations[Math.floor(Math.random() * affirmations.length)];\n    $('.positiveAffirmation').html(key);\n  }\n\n  // update the positive affirmation on an interval\n  if (this.positiveAffirmationInterval) {\n    clearInterval(this.positiveAffirmationInterval);\n  }\n  \n  this.positiveAffirmationInterval = setInterval(function () {\n    $('.positiveAffirmation').fadeOut({\n      duration: 4444,\n      complete: function () {\n        updatePositiveAffirmation();\n        $('.positiveAffirmation').fadeIn({\n          duration: 4444,\n          complete: function () { }\n        });\n      }\n    });\n  }, 199800); // 3 minutes, 33 seconds\n\n  updatePositiveAffirmation();\n\n  $('.positiveAffirmation').on('click', function () {\n    updatePositiveAffirmation();\n  });\n\n\n}","\n// Remark: Server will only allocate if there is no pre-existing portion of coins\n// Remark: Server maintains a mutex lock to ensure only one request per user at a time ( spamming prevention )\nexport default async function requestDefaultCoinAllocations() {\n\n  let qtokenid = buddypond.qtokenid;\n  let me = this.bp.me;\n\n  // TODO: set a five second alarm here so messages aren't immediately sent on login\n  console.log(`requestDefaultCoinAllocations ${me} ${qtokenid}`);\n\n  let res;\n  try {\n    let faucetUrl = `${buddypond.randolphEndpoint}/randolph/faucet`;\n    console.log('faucetUrl', faucetUrl);\n    res = await fetch(faucetUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${qtokenid}`,\n        'x-me': me\n      }\n    });\n    console.log('requestDefaultCoinAllocations', res.status, res.statusText);\n    let json = await res.json();\n    console.log('requestDefaultCoinAllocations', json);\n  } catch (err) {\n    throw err;\n  }\n\n}","export default function sortBuddyList() {\n\n  let buddyList = document.querySelector('.buddylist');\n  if (!buddyList) {\n    console.log('Buddy list not found, unable to sort');\n    return;\n  }\n\n  let buddyItems = Array.from(document.querySelectorAll('.buddylist li')); // TODO: more specific selector?\n\n  buddyItems.sort((a, b) => {\n    // Sort by status (online 🟢 first)\n    let aStatus = a.querySelector('.buddy-status').textContent.includes('🟢') ? 0 : 1;\n    let bStatus = b.querySelector('.buddy-status').textContent.includes('🟢') ? 0 : 1;\n\n    if (aStatus !== bStatus) {\n      return aStatus - bStatus; // Online first\n    }\n\n    // If both are online, sort alphabetically by name\n    if (aStatus === 0 && bStatus === 0) {\n      return a.dataset.buddy.localeCompare(b.dataset.buddy);\n    }\n\n    // If both are offline, sort by utime (most recent first), then by name\n    let aUtime = parseInt(a.dataset.utime || 0);\n    let bUtime = parseInt(b.dataset.utime || 0);\n    if (aUtime !== bUtime) {\n      return bUtime - aUtime; // Higher utime (more recent) first\n    }\n\n    return a.dataset.buddy.localeCompare(b.dataset.buddy);\n  });\n\n\n  buddyList.innerHTML = '';\n  buddyItems.forEach(item => buddyList.appendChild(item));\n}","\nexport default function showContextMenu(x, y, buddyName) {\n    const $menu = $('<div>', {\n      id: 'customContextMenu',\n      css: {\n        position: 'absolute',\n        top: y,\n        left: x,\n        zIndex: 99999,\n        display: 'block',\n        background: 'white',\n        border: '1px solid #ccc',\n        padding: '10px',\n        cursor: 'pointer'\n      }\n    }).append($('<ul>').append(\n      $('<li>').text('View Profile').on('click', () => openProfile(buddyName))\n    ));\n  \n    function openProfile(buddyName) {\n      console.log('Opening profile for ' + buddyName);\n      if (bp.admin) {\n        bp.open('admin-profile', { context: buddyName });\n      } else {\n        bp.open('user-profile', { context: buddyName });\n      }\n    }\n  \n    $('#customContextMenu').remove();\n    $('body').append($menu);\n  \n    $(document).one('click', function () {\n      $('#customContextMenu').remove();\n    });\n  }\n  ","// Context menu creation\nexport default function createMessageContextMenu(target, closestMessage) {\n\n  // Remove existing context menu if any\n  if (this.activeMessageContextMenu) {\n    this.activeMessageContextMenu.remove();\n    this.activeMessageContextMenu = null;\n  }\n\n  if (this.activeMessageHoverMenu) {\n    // set display: none on the hover menu\n    // TODO: needs to swap classes instead of setting styles\n    // this.activeMessageHoverMenu.style.display = 'none';\n    this.activeMessageHoverMenu = null;\n  }\n\n  // TODO: the closest .aim-hover-menu to target should have it's hover CSS logic removed\n  // aim-hover-menu:hover sets display: flex, without its display: none\n  // we need this bypassed while the context menu is open\n  const hoverMenu = target.closest('.aim-hover-menu');\n  /*\n  console.log('hoverMenu', hoverMenu);\n  if (hoverMenu) {\n    // hoverMenu.style.display = 'flex';\n  }\n  */\n\n  const contextMenu = document.createElement('div');\n  contextMenu.className = 'aim-context-menu';\n\n  const messageFrom = closestMessage.getAttribute('data-from');\n\n\n  const menuItems = [\n    { text: 'Reply', action: 'reply-message' },\n    // { text: 'Quote', action: 'quote-message' },\n    { text: 'Say Message', action: 'say-message' },\n    // { text: 'Report Message', action: 'report-message' },\n    // { text: 'Copy Message', action: 'copy-message' },\n  ];\n\n  if (messageFrom === this.bp.me || this.bp.me === 'Marak') { // TODO: admin rbac\n    menuItems.push(\n      { text: 'Edit Message', action: 'edit-message' },\n      { text: 'Delete Message', action: 'delete-message' }\n    );\n  }\n\n  menuItems.push({\n    text: 'Cast Spell',\n    action: 'cast-spell',\n  });\n\n  menuItems.forEach(item => {\n    const menuItem = document.createElement('div');\n    menuItem.className = 'aim-context-menu-item';\n    menuItem.textContent = item.text;\n    menuItem.setAttribute('data-action', item.action);\n    contextMenu.appendChild(menuItem);\n  });\n\n  // Position the context menu\n  document.body.appendChild(contextMenu);\n  const rect = target.getBoundingClientRect();\n  contextMenu.style.left = `${rect.left - 150}px`;\n  contextMenu.style.top = `${rect.bottom + window.scrollY - 20}px`;\n\n  // set data-attr to the closest message data-chat-id and data-uuid\n  const chatId = closestMessage.getAttribute('data-chat-id');\n  const uuid = closestMessage.getAttribute('data-uuid');\n  contextMenu.setAttribute('data-chat-id', chatId);\n  contextMenu.setAttribute('data-uuid', uuid);\n  contextMenu.setAttribute('data-from', messageFrom);\n\n  this.activeMessageContextMenu = contextMenu;\n  this.activeMessageHoverMenu = hoverMenu;\n  return contextMenu;\n}\n","export default function loadUserApps() {\n    // TODO: load from saved profile\n    if (this.bp.me === 'Marak') { // TODO: admin rbac checks\n        // install Admin if not already installed\n        let installedApps = this.bp.settings.apps_installed || {};\n        console.log('installedApps', installedApps);\n        if (!installedApps['admin']) {\n            this.bp.apps.desktop.addApp('admin');\n        }\n        window.arrangeDesktop();\n    }\n}","export default async function sendMessageHandler(e, chatWindow, windowType, contextName) {\n  console.log('sendMessageHandler called', e, chatWindow, windowType, contextName);\n  const message = $('.aim-input', chatWindow.content).val();\n\n  const _data = {\n    to: $('.aim-to', chatWindow.content).val(),\n    replyto: $('.aim-replyto', chatWindow.content).val(),\n    type: windowType,\n    from: this.bp.me,\n    message,\n    ctime: Date.now(),\n    text: message,\n    files: [],\n  };\n\n  console.log('sendMessageHandler _data', _data);\n\n  // TODO: move file upload code to separate function\n  // Get file previews\n  const filePreviews = $('.file-preview', chatWindow.content);\n  const files = [];\n\n  if ((!message || message.length === 0) && filePreviews.length === 0) {\n    console.log('No message to send');\n    return;\n  }\n\n  // Collect all files first\n  filePreviews.each((_, filePreview) => {\n    $('.file-content', filePreview).each((_, fileContent) => {\n      const file = this.bp.apps['file-viewer'].getFile(fileContent);\n      if (file) {\n        files.push({\n          file,\n          element: fileContent\n        });\n      }\n    });\n  });\n\n  // Create status indicators for each file\n  files.forEach(({ file, element }) => {\n    const statusDiv = $('<div>', {\n      class: 'upload-status',\n      css: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0, 0, 0, 0.7)',\n        color: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      }\n    }).text('Waiting...');\n\n    $(element).css('position', 'relative').append(statusDiv);\n  });\n\n  // Process files sequentially\n  try {\n    for (const { file, element } of files) {\n      const statusDiv = $(element).find('.upload-status');\n      statusDiv.text('Uploading...');\n\n      try {\n        console.log('is there a filepath?', file.filePath);\n        console.log('this is the file', file);\n        file.filePath = file.filePath || file.name;\n\n        // we are going to perform some basic file organization and routing here\n        // when the user uploads files via the chat window, we are going to store them\n        // in the user's directory on the CDN\n        // to help out the user, will perform mime type / file ext detection here in order to upload\n        // the file to the appropriate directory such as images, audio, videos, etc\n        let supportedImageTypesExt = ['jpeg', 'png', 'gif', 'webp', 'svg']; // same as server ( for now )\n        let supportedAudioTypesExt = ['mp3', 'wav', 'ogg', 'flac', 'aac', 'm4a'];\n        let supportedVideoTypesExt = ['mp4', 'webm', 'ogg', 'avi', 'mov', 'mkv'];\n\n        // check to see if the file.name has an extension included in the supportedImageTypesExt array\n        let fileExt = file.name.split('.').pop().toLowerCase();\n        if (supportedImageTypesExt.includes(fileExt)) {\n          file.filePath = 'images/' + file.filePath;\n        }\n        if (supportedAudioTypesExt.includes(fileExt)) {\n          file.filePath = 'audio/' + file.filePath;\n        }\n        if (supportedVideoTypesExt.includes(fileExt)) {\n          file.filePath = 'videos/' + file.filePath;\n        }\n\n        // make file.filePath url encoded\n        file.filePath = encodeURIComponent(file.filePath);\n\n        console.log('assigning file path', file.filePath);\n        let fileUrl = await this.bp.apps.client.api.uploadFile(file, (progress) => {\n          statusDiv.text('Uploading: ' + progress + '%');\n        });\n\n        // now that we have the url, just send a regular message with the url\n        // the card type should automatically be detected by the server\n        // the the body of the message will be the url with extension of image, video, etc\n        let message = {\n          to: _data.to,\n          from: _data.from,\n          type: _data.type,\n          replyto: _data.replyto,\n          text: fileUrl\n        };\n        // TODO: replyto\n        console.log(\"sending multimedia message\", message);\n        this.bp.emit('buddy::sendMessage', message);\n\n        // Fade out and remove the uploaded file preview\n        await $(element).fadeOut(300);\n        $(element).remove();\n\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        statusDiv.text('Failed: ' + error.message)\n          .css('background', 'rgba(255, 0, 0, 0.7)');\n\n        // Keep failed uploads visible for 2 seconds then fade out\n        await new Promise(resolve => setTimeout(resolve, 8000));\n        await $(element).fadeOut(300);\n        $(element).remove();\n      }\n    }\n  } catch (error) {\n    console.error('Error in file upload process:', error);\n  }\n\n  // Remove empty file preview containers\n  filePreviews.each((_, container) => {\n    if ($(container).children().length === 0) {\n      $(container).remove();\n    }\n  });\n\n  $('.file-preview', chatWindow.content).remove();\n\n  // Send the regular message\n  if (windowType === 'pond') {\n    _data.type = 'pond';\n  } else {\n    _data.type = 'buddy';\n  }\n\n  // TODO: move these commands to defaultCommands in buddyscript\n  if (_data.text.startsWith('/gif')) {\n    // split text to parts on space\n    let params = _data.text.split(' ').slice(1);\n    await bp.load('image-search');\n\n    if (params.length === 0) {\n      await bp.open('image-search', {\n        query: params[0],\n        provider: 'giphy-stickers',\n        context: _data.to,\n        output: windowType\n      });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return;\n    }\n\n    let result = await bp.apps['image-search'].fetchImages(params[0], 6, 'giphy-stickers');\n    // pick a random image from the result\n    if (result.error) {\n      console.error('Image search error:', result.error);\n      // show an error message in the chat window\n      await this.showCard({ chatWindow, cardName: 'error', context: { message: result.error } });\n\n      // $('.aim-input', chatWindow.content).val('Error fetching images: ' + result.error);\n      console.error('Error fetching images:', result.error);\n      return;\n    }\n    if (result.length === 0) {\n      console.error('No images found for query:', params[0]);\n      return;\n    }\n    let randomImage = result[Math.floor(Math.random() * result.length)];\n    console.log('Random image selected:', randomImage);\n    // _data.text = randomImage; // set the text to the image URL\n    _data.card = {\n      type: 'image',\n      url: randomImage\n    };\n  }\n\n  // TODO: merge back params to query string, just pop the first one off\n  if (_data.text.startsWith('/image')) {\n    // split text to parts on space\n    let params = _data.text.split(' ').slice(1);\n    console.log('/image params', params);\n    if (params.length === 0) {\n      // if only one parameter is provided, open the image search app\n      await bp.open('image-search', { query: params[0], provider: 'pexels' });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return;\n    }\n\n    await bp.load('image-search');\n    console.log('pppp', params)\n    let result = await bp.apps['image-search'].fetchImages(params[0], 6, 'pexels');\n    // pick a random image from the result\n    if (result.error) {\n      console.error('Image search error:', result.error);\n      // show an error message in the chat window\n      await this.showCard({ chatWindow, cardName: 'error', context: { message: result.error } });\n\n      // $('.aim-input', chatWindow.content).val('Error fetching images: ' + result.error);\n      console.error('Error fetching images:', result.error);\n      return;\n    }\n    if (result.length === 0) {\n      console.error('No images found for query:', params[0]);\n      return;\n    }\n    let randomImage = result[Math.floor(Math.random() * result.length)];\n    console.log('Random image selected:', randomImage);\n    // _data.text = randomImage; // set the text to the image URL\n    _data.card = {\n      type: 'image',\n      url: randomImage\n    };\n  }\n\n  // if this is a buddyscript command, but not a /say command\n  // say has a special meaning in the context of the chat window\n  // as it should be sent as regular text message ( should be a card later, click to repeat )\n  // TODO: needs to rebuild bs system to support local transform commands\n  if (_data.text.startsWith('/')\n    && !_data.text.startsWith('/say')\n    && !_data.text.startsWith('/roll')\n    && !_data.text.startsWith('/gif')\n    && !_data.text.startsWith('/image')\n    && !_data.text.startsWith('/deepseek')\n  ) {\n    // TODO: process the card locall here\n    /*\n    _data.card = {\n     type: 'bs'\n   };\n   */\n    // runs local BS script command\n    // alert('bs card')\n\n    let bs = this.bp.apps.buddyscript.parseCommand(_data.text);\n    console.log('got back buddyscript command', bs);\n    if (bs.pipe) {\n      //if (now - messageTime < 10000) {\n      // pipeable / immediate run commands should only persist for 10 seconds\n      bs.pipe({\n      chatWindow,\n      contextName: _data.to,\n      windowType\n    });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return false;\n\n      // }\n    }\n\n    console.log(' ', bs);\n    if (bs.type === 'show-card') {\n      // show the bs card\n      // console.log('showing bs card', message, bs);\n      let cardData = bs.data;\n      this.showCard({\n        chatWindow,\n        cardName: 'bs',\n        context: {\n          ...bs,\n          context: message.to,\n          type: windowType\n        }\n      });\n    }\n    $('.aim-input', chatWindow.content).val('');\n\n    return false;\n  }\n\n  console.log(`Sending message to ${_data.to} from ${_data.from} of type ${_data.type}:`, _data.text);\n  console.log(_data.text.startsWith('\\\\'));\n  if (_data.text.startsWith('\\\\')) {\n   \n    // let bs = this.bp.apps.buddyscript.parseCommand(_data.text);\n    // console.log('backwards command', bs);\n    _data.card = {\n      type: 'bs',\n      command: _data.text.replace('\\\\', '/').trim(),\n      //commandData: bs\n    };\n\n  }\n\n\n  // TODO: check if this is a valid BS command\n  // if so, we need to construct a card to show the command\n\n  // TODO: add support for sending /bs commands with \\ instead of /\n  /*\n  if (_data.text.startsWith('\\\\')) {\n    // the command is a /foo style command\n    // extract the command from the text\n    let command = _data.text.split(' ')[0].replace('\\\\', '');\n    alert(command)\n    _data.text = 'Sent app using `\\\\' + command + '` command'; // TODO: better UX message\n    _data.card = {\n      type: 'app', // coould also be a \"bs\" card, might need distinction between app and bs commands\n      context: command\n    };\n  }\n  */\n\n  console.log('emitting message', _data);\n  this.bp.emit('buddy::sendMessage', _data);\n\n  // Clear input\n  $('.aim-input', chatWindow.content).val('');\n\n  // Hide the aim-reply-box\n  $('.aim-reply-box', chatWindow.content).remove();\n\n  // clear the replyTo input value\n  $('.aim-replyto', chatWindow.content).val('');\n  /*\n  const replyBox = target.closest('.aim-reply-box');\n  if (replyBox) {\n    replyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.replyMode = false;\n    this.bp.replyData = null;\n  }\n  */\n\n  let $sendButton = $('.aim-send-btn', chatWindow.content);\n  $sendButton.css('opacity', 0.5);\n\n\n}","export default async function showCard({chatWindow, cardName, context = {}}) {\n\n  // render the help card and do not send the message\n    let cardManager = this.bp.apps.card.cardManager;\n    // console.log('cardManager.loadCard', cardData);\n    const _card = await cardManager.loadCard(cardName, context, chatWindow);\n    let container = document.createElement('div');\n    container.classList.add('cardContainer');\n    let d = await _card.render(container, chatWindow);\n    if (!chatWindow || !chatWindow.content) {\n      console.error('chatWindow not found. user most likely not in the chat window');\n      throw new Error('chatWindow.content not found. user most likely not in the chat window');\n      return;\n    }\n\n    let aimMessagesContainer = chatWindow.content.querySelector(`.aim-messages-container`);\n\n    // find the correct aim-messages-container ( if pond / or buddy i guess )\n    // find the .aim-messages-container inside the chatWindow.content with data-context attribute\n    if (context.type === 'pond') {\n      // console.log('Inserting message into pond chat window', message);\n      aimMessagesContainer = chatWindow.content.querySelector(`.aim-messages-container[data-context=\"${context.context}\"]`);\n    }\n\n    const aimMessages = aimMessagesContainer.querySelector('.aim-messages');\n    if (!aimMessages) {\n      console.error('aim-messages not found. user most likely not in the chat window');\n      return;\n    }\n\n    // append container to the aim-messages at the end\n    aimMessages.appendChild(container);\n\n    // empty the aim-input\n    $('.aim-input', chatWindow.content).val('');\n\n    // scroll to the bottom of the chat window\n    // aimMessages.scrollTop = aimMessages.scrollHeight;\n    if (!this.bp.isMobile()) {\n      container.scrollIntoView({\n        behavior: 'instant'\n      });\n\n    }\n\n    return d;\n  }\n","export default function scrollToBottom(parent, retryDelay = 0, retryCount = 0) {\n  if (!parent) return;\n  if (retryCount > 5) return;\n\n  const chatArea = $('.aim-chat-area', parent)[0];\n  if (!chatArea) return;\n\n  if (retryCount === 0 && chatArea._scrollRetryTimer) {\n    clearTimeout(chatArea._scrollRetryTimer);\n    chatArea._scrollRetryTimer = null;\n  }\n\n  $(chatArea).scrollTop(chatArea.scrollHeight);\n  \n\n  requestAnimationFrame(() => {\n    const buffer = 10; // tolerate small gap\n    const isAtBottom = (chatArea.scrollHeight - chatArea.scrollTop - chatArea.clientHeight) < buffer;\n\n    if (!isAtBottom) {\n      retryDelay += 200;\n      retryCount++;\n\n      chatArea._scrollRetryTimer = setTimeout(() => {\n        scrollToBottom(parent, retryDelay, retryCount);\n      }, retryDelay);\n    } else {\n      chatArea._scrollRetryTimer = null;\n    }\n\n    // Final fallback if Safari still misbehaves\n    if (retryCount >= 5 && !isAtBottom) {\n      chatArea.lastElementChild?.scrollIntoView({ block: 'end' });\n    }\n  });\n}\n","export default function defaultAvatarSvg(username) {\n  // Check if avatar is already cached\n  if (this.data.avatarCache.has(username)) {\n    return this.data.avatarCache.get(username);\n  }\n\n  // Create an identicon avatar using DiceBear\n  const avatar = this.bp.vendor.dicebear.createAvatar(this.bp.vendor.dicebearAvatars, {\n    seed: username, // Username as seed for consistent avatar\n    size: 40, // Avatar size in pixels\n    backgroundColor: [\"#f0f0f0\"], // Optional: Customize background\n  });\n\n  // Convert avatar to SVG string\n  const svg = avatar.toString();\n\n  // Store in cache\n  this.data.avatarCache.set(username, svg);\n\n  return svg;\n}"],"names":["attachContextMenu","buddyElement","$","on","e","preventDefault","buddyName","target","closest","dataset","buddy","this","showContextMenu","pageX","pageY","parseMarkdownWithoutPTags","markdown","text","graphemes","splitEmojiGraphemes","emojiList","Set","Object","keys","EMOJIS","emojis","filter","g","has","replace","length","join","trim","isEmojiOnly","map","supportedColors","supportedStyles","linkExtension","name","level","renderer","token","href","parser","parseInline","tokens","styleExtension","tokenizer","src","match","exec","raw","modifiers","split","every","mod","includes","type","lexer","inlineTokens","content","reverse","forEach","char","i","walkTokens","console","log","html","marked","use","extensions","parse","error","GraphemeSplitter","splitGraphemes","createHoverMenu","message","hoverMenu","document","createElement","className","menuItems","from","bp","me","push","action","icon","item","button","setAttribute","appendChild","createTextNode","forbiddenNotes","base64","checkForLinksInMessage","messageText","url","URL","protocol","isValidUrl","contentUrl","card","ext","pop","buddypond","supportedImageTypesExt","toLowerCase","supportedAudioTypesExt","supportedVideoTypesExt","isValidYoutubeLink","videoId","searchParams","get","thumbnail","context","slice","isValidGithubLink","githubRegex","owner","repo","filename","setupInputEvents","windowType","contextName","chatWindow","$input","$form","$sendButton","that","event","handleEmojiInput","cursorPos","selectionStart","inputValue","val","getInputContext","autocomplete","which","shiftKey","cursorPosition","newValue","setSelectionRange","css","is","startsWith","submit","replaceShortcodes","activeContext","currentActiveContext","emit","to","isTyping","ctime","Date","now","setupAutocomplete","options","bind","emojiMap","usedShortcodes","reduce","emoji","isValidShortcode","alias","shortcode","add","textBeforeCursor","lastColonIndex","lastIndexOf","endIndex","nextColonIndex","indexOf","potentialShortcode","test","startIndex","firstChar","charAt","emojiSuggestions","suggestions","label","value","commands","command","focus","ui","source","request","response","query","suggestion","select","textarea","before","after","newCursorPos","trigger","minLength","position","my","at","collision","open","$textarea","originalText","newText","call","randowFunWord","words","Math","floor","random","containsBadWord","str","lowerStr","decoded","some","fnote","RegExp","JSON","atob","ChatWindowButtonBar","constructor","inputButtons","buttons","storedOrder","settings","Array","isArray","sortButtonsByOrder","container","render","enableDragAndDrop","buttonBar","classList","element","createButtonElement","baseDataset","image","alt","title","draggable","innerText","entries","key","onclick","addButton","b","warn","newButtonElement","refreshSortable","removeButton","buttonText","index","findIndex","splice","children","el","contains","removeChild","saveButtonOrder","sortable","items","tolerance","stop","syncButtonOrder","orderedTexts","find","Boolean","set","openWindows","apps","windowManager","findWindows","app","window","reRenderButtons","innerHTML","order","buttonMap","fromEntries","setupChatWindowButtons","chatWindowButtons","isMobile","navigator","userAgent","env","prepend","populateRoomList","hotPonds","roomList","sortedPonds","sort","a","connection_count","userOpenedPonds","data","activePonds","existingItems","Map","existingPondIds","each","_","pondId","pond","pond_id","pondName","isUserOpened","isActive","existingItem","$scoreElement","String","$closeButton","append","remove","shouldBeActive","hasClass","toggleClass","delete","closeButton","$newItem","previousItem","$item","$nextSibling","next","insertAfter","$firstItem","first","prependTo","not","removeClass","addClass","updatePondConnectedUsers","chatId","userList","existingUserIds","userId","toString","users","user","profilePicture","userItem","$textElement","$profileContainer","$newProfileElement","createProfilePictureElement","empty","$userItem","class","$profilePicture","$userText","$existingContainer","$img","attr","$currentImg","defaultAvatarSvg","createNewChatWindow","windowTitle","windowId","client","windowConfig","buildWindowConfig","createWindow","onOpen","async","_window","initializeChatWindow","onClose","removeSubscription","id","messagesWsClients","wsClient","closeConnection","setupCloseButtonHandler","hide","flexShow","loggedIn","isBuddy","iconImagePath","buddylist","profileState","profile_picture","height","innerHeight","width","innerWidth","parent","x","y","setupChatWindow","addSubscription","clearBuddyNewMessages","toggleMessagesContainer","renderMessages","attemptFocus","aimInput","setTimeout","focusInputField","newMessages","receivedInstantMessage","err","re","processedMessages","messagesToRender","renderChatMessage","ensureMessagesContainer","chatArea","userListArea","userListContext","newContainer","style","display","newUserList","targetContainer","targetUserList","show","availableContainers","firstContext","firstUserListContext","child","scrollToBottom","chatWindowTemplate","messageTemplateString","cloned","aimMessagesContainer","aimUserListContainer","joinPond","aimWindow","touchStartX","touchEndX","handleSwipe","deltaX","addEventListener","changedTouches","screenX","toggleRoomListBtn","textContent","toggleUserListBtn","closePondChatBtn","toggle","setupMessageForm","username","openChatWindow","setupRoomListClickHandler","sendMessageHandler","selectedContext","ev","stopPropagation","getAttribute","remainingContainers","nextContext","roomItem","alert","getWindow","defaultProfileFiles","getFileType","fileName","endsWith","handleContextMenuItemClick","performAction","closeMenus","handleEditHintAction","messageContent","querySelector","messageUUID","originalMessage","messageData","uuid","cancelEdit","saveEdit","activeMessageContextMenu","activeMessageHoverMenu","activeReplyBox","closestTarget","editMessage","replyMessage","closestMessage","createMessageContextMenu","deleteMessage","output","removeInstantMessage","ignoreUIControlKeys","editableContainer","parentNode","insertBefore","editHint","handleKeydown","cleanupListeners","handleBlur","relatedTarget","removeEventListener","restoreText","removeAttribute","blur","messageElement","newMessageText","editInstantMessage","replyData","replyBox","messageSender","replyInput","messageTextInput","cancelReply","bindProfilePictureClick","parents","chatMessageElement","buddyname","Client","config","host","api","reconnectAttempts","maxReconnectAttempts","maxBackoffDelay","isIntentionallyClosed","getTime","prototype","connect","createWebSocketClient","disconnect","addBuddy","cb","uri","method","endpoint","headers","Accept","qtokenid","body","stringify","controller","AbortController","timeoutId","abort","incrementPackets","perf","start","fetch","signal","then","clearTimeout","ok","json","errorData","Error","status","statusText","end","addPerfTime","catch","msg","apiRequest","send","setStatus","update","Promise","resolve","reject","WebSocket","buddylistWsEndpoint","handleOpen","handleMessage","parseData","profile","dtime","success","reward","handleClose","code","reason","clearInterval","updateStatusInterval","delay","min","pow","attempt","newWsClient","assign","handleError","readyState","OPEN","close","BuddyList","updates","avatarCache","defaultPond","subscribedBuddies","subscribedPonds","buddyscript","showedHelp","logout","provider","$target","emojiPicker","onSelect","messageControls","isHost","sendCardMessage","targetEl","align","sendButton","dispatchEvent","Event","bubbles","click","defaultChatWindowButtons","enabledChatWindowButtons","desktop","buttonMeta","appList","chatButton","opened","showingIsTyping","faucetAttempts","init","appendScript","vendor","dicebear","importModule","dicebearAvatars","load","bindMessageContextMenu","buddyListWindow","focusWindow","restore","htmlStr","fetchHTMLFragment","appendCSS","createBuddyListWindow","createHTMLContent","eventsBound","registerEventHandlers","buddylistUIEvents","handleAuthentication","qtoken","handleAuthSuccess","loadUserApps","generateDefaultProfile","ws","flexHide","processBuddylist","renderOrUpdateBuddyInBuddyList","buddyListItem","email","emailVerified","noAlert","messageTime","play","buddyReadNewMessages","videochat","startCall","handleChatMessages","sendMessageToServer","typingIndicatorId","typingMessage","typingIndicator","appendTo","lastTypingMessage","sendWsMessage","rollToNumber","newBalance","portfolio","portfolioWindow","portfolioData","updateCoinRow","symbol","amount","available","price","cost","coinSendSelector","coinSendBalance","formattedValue","toLocaleString","balance","requestDefaultCoinAllocations","getLatestMessages","pondname","sendMessage","windowsToUpdate","result","messages","values","showCard","cardName","emitLocal","pondSendMessage","localToken","localStorage","getItem","verifyToken","hasPassword","tryHard","Infinity","$el","digits","d","digitContainer","inner","transition","transform","buddydata","buddyTimeouts","buddyListItems","querySelectorAll","existingBuddy","wasConnected","hasOwnProperty","isConnected","diff","utime","buddyListItemEl","connectedStatusIcon","isCalling","lastSeen","lastSeenDate","lastSeenString","year","month","day","hour","minute","second","hour12","firstChild","formattedDate","DateFormat","format","date","sortBuddyList","createChatMessageElement","chatMessage","img","defaultAvatar","contentWrapper","messageHeader","sender","tripcode","timestamp","messageMeta","geoFlag","location","renderGeoFlag","badgesContainer","replyIndicator","replyto","repliedMessage","repliedSender","repliedText","scrollIntoView","behavior","block","processedText","aimMessages","allMessages","inserted","existingMessage","existingId","parseInt","insertChatMessage","_chatWindow","pondNames","decodedText","entities","decodeEntities","hashPondNameRegex","matchAll","m","findAllHashPondNames","activeUsers","activeUsersInContext","removed","removedMessageEl","edited","editedMessageEl","editedMessageContent","shift","spellbook","say","processMessages","cardData","cardManager","_card","loadCard","renderBuddyRequests","buddyrequests","buddyrequest","pendingIncomingBuddyRequests","totalIncomingBuddyRequests","denyBuddy","approveBuddy","Number","powerlevel","popup","duration","system","totalIsConnected","totalIsOnline","ponds","win","connected","buddylistData","profileNeedsUpdate","wasOnline","_processBuddylistData","_processBuddyRequestsData","affirmations","updatePositiveAffirmation","prop","password","authBuddy","change","sendPasswordResetEmail","randomInviteMessages","inviteMessage","positiveAffirmationInterval","setInterval","fadeOut","complete","fadeIn","determineWindowParameters","isValidContextName","generateWindowId","existingWindow","handleExistingWindow","basePath","fileContent","blob","Blob","file","File","lastModified","filePath","uploadFile","uploadError","res","faucetUrl","randolphEndpoint","Authorization","buddyList","buddyItems","aStatus","bStatus","localeCompare","aUtime","bUtime","$menu","top","left","zIndex","background","border","padding","cursor","admin","openProfile","one","contextMenu","messageFrom","menuItem","rect","getBoundingClientRect","bottom","scrollY","isHoverMenuAction","installedApps","apps_installed","addApp","arrangeDesktop","_data","files","filePreviews","filePreview","getFile","statusDiv","right","color","alignItems","justifyContent","fileExt","encodeURIComponent","fileUrl","progress","params","fetchImages","randomImage","bs","parseCommand","pipe","retryDelay","retryCount","_scrollRetryTimer","scrollTop","scrollHeight","requestAnimationFrame","isAtBottom","clientHeight","lastElementChild","svg","createAvatar","seed","size","backgroundColor"],"mappings":"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"}