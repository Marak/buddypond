{"version":3,"file":"buddylist.js","sources":["../../../apps/based/buddylist/lib/renderOrUpdateBuddyInBuddyList.js","../../../apps/based/buddylist/lib/message/createChatMessageElement.js","../../../apps/based/buddylist/lib/message/checkForLinksInMessage.js","../../../apps/based/buddylist/lib/message/isValidUrl.js","../../../apps/based/buddylist/lib/message/isValidYoutubeLink.js","../../../apps/based/buddylist/lib/message/isValidGithubLink.js","../../../apps/based/buddylist/lib/ChatWindowButtonBar.js","../../../apps/based/buddylist/lib/forbiddenNotes.js","../../../apps/based/buddylist/lib/openChatWindow.js","../../../apps/based/buddylist/lib/defaultProfileFiles.js","../../../apps/based/buddylist/lib/generateDefaultProfile.js","../../../apps/based/buddylist/lib/message/scrollToBottom.js","../../../apps/based/buddylist/lib/message/bindMessageContextMenu.js","../../../apps/based/buddylist/lib/ws/Client.js","../../../apps/based/buddylist/buddylist.js","../../../apps/based/buddylist/lib/ws/createWebSocketClient.js","../../../apps/based/buddylist/lib/defaultChatWindowButtons.js","../../../apps/based/buddylist/lib/message/renderGeoFlag.js","../../../apps/based/buddylist/lib/message/parseMarkdownWithoutPTags.js","../../../apps/based/buddylist/lib/message/renderChatMessage.js","../../../apps/based/buddylist/lib/renderBuddyRequests.js","../../../apps/based/buddylist/lib/processProfile.js","../../../apps/based/buddylist/lib/buddylistUIEvents.js","../../../apps/based/buddylist/lib/requestDefaultCoinAllocations.js","../../../apps/based/buddylist/lib/sortBuddyList.js","../../../apps/based/buddylist/lib/showContextMenu.js","../../../apps/based/buddylist/lib/message/createMessageContextMenu.js","../../../apps/based/buddylist/lib/loadUserApps.js","../../../apps/based/buddylist/lib/message/sendMessageHandler.js","../../../apps/based/buddylist/lib/message/showCard.js"],"sourcesContent":["// Timeout is for legacy API before websocket connections\n// We should now have a reliable way to track buddy status via websocket disconnect events\n// 15 minute hard-code timeout ( if setStatus() was missed )\nlet buddyTimeoutsInterval = 1000 * 60 * 60 * 5; // 5 hours, shoudn't be needed unless unknown error on server\n\nexport default function renderOrUpdateBuddyInBuddyList(data) {\n  let bp = this.bp;\n  let buddyname = data.name;\n  let buddydata = data.profile;\n\n  this.bp.buddyTimeouts = this.bp.buddyTimeouts || {};\n\n  // console.log('renderOrUpdateBuddyInBuddyList', buddyname, buddydata);\n\n  // Track previous connection status to detect changes\n  let buddyListItems = document.querySelectorAll('.buddylist li');\n  let existingBuddy = Array.from(buddyListItems).find(el => el.dataset.buddy === buddyname);\n  let wasConnected = existingBuddy ? existingBuddy.querySelector('.buddy-status').textContent.includes('🟢') : false;\n\n  // Handle status update only if status field is present\n  if (buddydata.hasOwnProperty('status')) {\n    if (buddydata.status === 'online') {\n      buddydata.isConnected = true;\n    } else {\n      buddydata.isConnected = false;\n    }\n\n    // console.log('isConnected', buddydata.isConnected, buddyname, buddydata.status);\n\n    // Clear the timeout if it exists\n    if (this.bp.buddyTimeouts[buddyname]) {\n      clearTimeout(this.bp.buddyTimeouts[buddyname]);\n      delete this.bp.buddyTimeouts[buddyname];\n    }\n\n    // Remark: Added 5/18/2025: Adds check if user hasn't been online for a while ( this is needed for legacy API )\n    // This may still stay in as CF worker could miss disconnect events\n    // TODO: consider re-implementing a keepAlive ping each 30 minutes\n    let now = new Date().getTime();\n    //console.log('BuddyList: buddydata.utime', buddyname, buddydata.utime, 'now', now);\n    let diff = now - buddydata.utime;\n    //console.log('BuddyList: diff', buddyname, buddydata.utime, diff, buddyTimeoutsInterval);  \n    // console.log('buddydata.utime', buddydata.utime, 'now', now, 'diff', diff);\n    // console.log('BuddyList: diff', buddyname, buddydata.utime, diff, buddyTimeoutsInterval);\n    // If buddy hasn't been online for a while, set them to offline\n    if (buddydata.isConnected && diff > buddyTimeoutsInterval) {\n      // console.log('Setting offline due to timeout', buddyname, buddydata.utime, diff);\n      // TODO: add this back in?\n      buddydata.isConnected = false;\n    }\n\n    /*\n    Remark: Removed 5/17/2025, no longer depending on utime / keepAlives\n    let now = new Date().getTime();\n    let diff = now - buddydata.utime;\n    if (now - buddydata.utime > buddyTimeoutsInterval) {\n      // console.log('Setting offline due to timeout', buddyname, buddydata.utime, diff);\n      buddydata.isConnected = false;\n    }\n    */\n    // Remark: Removed 5/17/2025, no longer depending on utime / keepAlives\n    // We may need to add this back in the future for cases when CF worker abruptly disconnects\n    // This would rely on a ping mechanism to keep the connection alive and update the utime\n    // Set a timeout to mark buddy as offline if they are currently connected\n    /*\n    if (buddydata.isConnected) {\n      this.bp.buddyTimeouts[buddyname] = setTimeout(() => {\n        let _data = {\n          name: buddyname,\n          profile: {\n            buddyname: buddyname,\n            isConnected: false,\n            status: 'offline',\n            utime: new Date().getTime(),\n            dtime: new Date().getTime(),\n            newMessages: false\n          }\n        };\n        renderOrUpdateBuddyInBuddyList.call(this, _data, false);\n      }, buddyTimeoutsInterval * 1.5);\n    }\n    */\n\n    // Play sound based on status change\n    // Don't play sound if buddy is me\n    if (buddyname !== this.bp.me) {\n      if (buddydata.isConnected && !wasConnected) {\n        // compare now time with buddydata.utime\n        // if less than 5 seconds, don't play sound\n        let now = new Date().getTime();\n        let diff = now - buddydata.utime;\n        if (diff > 300) {\n          bp.play('desktop/assets/audio/BUDDY-IN.mp3'); // Buddy comes online\n        }\n      } else if (!buddydata.isConnected && wasConnected) {\n        // Remark: Removed the signout sound as it was too loud / jarring\n        // bp.play('desktop/assets/audio/BUDDY-OUT.wav'); // Buddy goes offline\n      }\n    }\n  }\n\n  // Use existing isConnected if available, otherwise derive from DOM state\n  let isConnected = buddydata.hasOwnProperty('isConnected') ? buddydata.isConnected : wasConnected;\n  // console.log(buddydata);\n  if (buddydata.newMessages && buddydata.newMessages) {\n    isConnected = true;\n    this.bp.apps.buddylist.openChatWindow({ context: buddyname, type: 'buddy' });\n  }\n\n  let connectedStatusIcon = isConnected ? '🟢' : '🟠';\n  let isCalling = buddydata.isCalling ? '<span>📞</span>' : '';\n  let newMessages = buddydata.newMessages ? '<span>💬</span>' : '';\n\n  let lastSeen = buddydata.utime ? buddydata.utime : 0;\n  let lastSeenDate = new Date(lastSeen);\n  let lastSeenString = '';\n\n  try {\n    lastSeenString = 'Last seen: ' + lastSeenDate.toLocaleString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: true\n    });\n  } catch (err) {\n    console.log('Error formatting last seen date', err);\n  }\n\n  // Update or create buddy list item\n  let buddyListItemEl;\n  if (existingBuddy) {\n    // Update existing element to prevent flicker\n    buddyListItemEl = existingBuddy;\n    buddyListItemEl.dataset.utime = buddydata.utime;\n    buddyListItemEl.title = lastSeenString;\n    buddyListItemEl.querySelector('.buddy-status').innerHTML = `${newMessages}${connectedStatusIcon}${isCalling}`;\n    buddyListItemEl.querySelector('.message-buddy').textContent = buddyname;\n    buddyListItemEl.style.display = buddydata.status === 'hidden' ? 'none' : '';\n  } else {\n    // Create new element if buddy doesn't exist\n    let buddyListItem = `<li data-buddy=\"${buddyname}\" data-utime=\"${buddydata.utime}\" class=\"buddy-message-sender\" title=\"${lastSeenString}\">\n                          <span class=\"buddy-status\">${newMessages}${connectedStatusIcon}${isCalling}</span> \n                          <a data-buddy=\"${buddyname}\" class=\"message-buddy\" href=\"#\" draggable=\"false\">${buddyname}</a>\n                        </li>`;\n    buddyListItemEl = document.createElement('div');\n    buddyListItemEl.innerHTML = buddyListItem;\n    buddyListItemEl = buddyListItemEl.firstChild;\n\n    if (buddydata.status === 'hidden') {\n      buddyListItemEl.style.display = 'none';\n    }\n  }\n\n  if (buddydata.utime) {\n    let formattedDate = DateFormat.format.date(buddydata.utime, 'E MMMM dd, hh:mm:ss a');\n    $(buddyListItemEl).find('.buddy-status').attr('title', formattedDate);\n  }\n\n  // Append new buddy or ensure existing one is in the list\n  if (!existingBuddy) {\n    $('.buddylist').append(buddyListItemEl);\n  }\n\n  // Re-sort the entire buddy list\n  this.sortBuddyList();\n\n  // Add context menu functionality\n  attachContextMenu.call(this, buddyListItemEl);\n}\n\nfunction attachContextMenu(buddyElement) {\n  $(buddyElement).on('contextmenu', (e) => {\n    e.preventDefault();\n    let buddyName = e.target.closest('li').dataset.buddy;\n    this.showContextMenu(e.pageX, e.pageY, buddyName);\n  });\n}","import renderGeoFlag from './renderGeoFlag.js';\nimport parseMarkdownWithoutPTags from './parseMarkdownWithoutPTags.js';\n\n// Configuration\nconst config = {\n  useMarkdown: true,\n  allowHTML: true,\n};\n\n// New function to create hover menu\n// TODO: remove buttons, just use icons\n// TODO: update bindMessageContextMenu() method to bind to the icons instead of buttons\nfunction createHoverMenu(message) {\n  const hoverMenu = document.createElement('div');\n  hoverMenu.className = \n  'aim-hover-menu';\n\n  const menuItems = [];\n\n  if (message.from === this.bp.me || this.bp.me === 'Marak') { // TODO: admin rbac\n    menuItems.push({ text: 'Edit Message', action: 'edit-message',  icon: 'fa-duotone fa-regular fa-pencil' });\n  }\n\n  menuItems.push({ text: 'Reply Message', action: 'reply-message', icon: 'fa-duotone fa-regular fa-reply' });\n  menuItems.push({ text: '...', action: 'more-options', icon: 'fa-solid fa-regular fa-ellipsis' });\n\n\n  menuItems.forEach(item => {\n    const button = document.createElement('button');\n    button.setAttribute('data-action', item.action);\n    button.className = 'aim-hover-menu-item';\n\n    if (item.icon) {\n      const icon = document.createElement('i');\n      icon.className = item.icon;\n      button.appendChild(icon);\n      button.appendChild(document.createTextNode(' ')); // Add space between icon and text\n    } else {\n      button.appendChild(document.createTextNode(item.text));\n    }\n    // set title hint with item.text  \n    button.setAttribute('title', item.text);\n    hoverMenu.appendChild(button);\n  });\n\n  return hoverMenu;\n}\n\nexport default function createChatMessageElement(message, messageTime, chatWindow, container) {\n  // Create main message container\n  const chatMessage = document.createElement('div');\n  chatMessage.className = 'aim-chat-message';\n  chatMessage.setAttribute('data-id', message.id);\n  chatMessage.setAttribute('data-from', message.from);\n  chatMessage.setAttribute('data-to', message.to);\n  chatMessage.setAttribute('data-type', message.type);\n  chatMessage.setAttribute('data-uuid', message.uuid);\n  chatMessage.setAttribute('data-chat-id', message.chatId);\n\n  // Profile picture (SVG)\n  const profilePicture = document.createElement('div');\n  profilePicture.className = 'aim-profile-picture';\n\n  if (!message.profilePicture) {\n    // check if we happen to have a profilePicture in local cache\n    // this may happen if Randolph or other admin is sending messages on behalf of a user\n    // TODO: better way to do this...\n    if (\n      this.bp.apps.buddylist.data.profileState &&\n      this.bp.apps.buddylist.data.profileState.buddylist &&\n      this.bp.apps.buddylist.data.profileState.buddylist[message.from] && \n      this.bp.apps.buddylist.data.profileState.buddylist[message.from].profile_picture) {\n      message.profilePicture = this.bp.apps.buddylist.data.profileState.buddylist[message.from].profile_picture;\n    }\n\n  }\n\n  if (message.profilePicture) {\n    // use url as profile picture src\n    const img = document.createElement('img');\n    img.src = message.profilePicture;\n    img.alt = `${message.from}'s avatar`;\n    img.className = 'aim-chat-message-profile-picture-img';\n    profilePicture.appendChild(img);\n  } else {\n    const defaultAvatar = defaultAvatarSvg.call(this, message.from);\n    profilePicture.innerHTML = defaultAvatar;\n  }\n\n  // console.log('profilePicture', profilePicture);\n  profilePicture.alt = `${message.from}'s avatar`;\n\n  // Message content wrapper\n  const contentWrapper = document.createElement('div');\n  contentWrapper.className = 'aim-content-wrapper';\n\n  // Message header (sender + timestamp)\n  const messageHeader = document.createElement('div');\n  messageHeader.className = 'aim-message-header';\n\n  const sender = document.createElement('span');\n  sender.className = 'aim-sender';\n  sender.textContent = message.from === 'anonymous'\n    ? `Anonymous (${message.tripcode || 'tr1pc0d3'})`\n    : message.from;\n\n  const timestamp = document.createElement('span');\n  timestamp.className = 'aim-timestamp';\n  timestamp.textContent = messageTime;\n\n  // Message meta (geoflag + badges placeholder)\n  const messageMeta = document.createElement('div');\n  messageMeta.className = 'aim-message-meta';\n\n  const geoFlag = renderGeoFlag(message);\n  const badgesContainer = document.createElement('span');\n  badgesContainer.className = 'aim-badges';\n\n  messageMeta.appendChild(geoFlag);\n  messageMeta.appendChild(badgesContainer);\n\n  messageHeader.appendChild(sender);\n  messageHeader.appendChild(messageMeta);\n  messageHeader.appendChild(timestamp);\n\n  // Reply indicator (if message is a reply)\n  let replyIndicator = null;\n  if (message.replyto) {\n    const repliedMessage = chatWindow.content.querySelector(\n      `.aim-chat-message[data-uuid=\"${message.replyto}\"]`\n    );\n    if (repliedMessage) {\n      const repliedSender = repliedMessage.querySelector('.aim-sender')?.textContent || 'Unknown';\n      const repliedText = repliedMessage.querySelector('.aim-message-content')?.innerText || '';\n\n      replyIndicator = document.createElement('div');\n      replyIndicator.className = 'aim-reply-indicator';\n      replyIndicator.innerHTML = `\n        <span class=\"aim-reply-sender\">${repliedSender}</span>\n        <span class=\"aim-reply-content\">${repliedText}</span>\n      `;\n\n      // Add click handler to scroll to the replied message\n      const replySender = replyIndicator.querySelector('.aim-reply-sender');\n      replySender.addEventListener('click', () => {\n        repliedMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        repliedMessage.classList.add('aim-highlight');\n        setTimeout(() => repliedMessage.classList.remove('aim-highlight'), 2000);\n      });\n    }\n  }\n\n  // Message content\n  const messageContent = document.createElement('div');\n  messageContent.className = 'aim-message-content';\n\n  const processedText = config.useMarkdown\n    ? parseMarkdownWithoutPTags(message.text)\n    : message.text;\n\n  if (config.allowHTML) {\n    messageContent.innerHTML = processedText;\n  } else {\n    messageContent.textContent = processedText;\n  }\n\n  // Hover menu\n  const hoverMenu = createHoverMenu.call(this, message)\n\n  // Assemble message\n  contentWrapper.appendChild(messageHeader);\n  if (replyIndicator) {\n    contentWrapper.appendChild(replyIndicator);\n  }\n  contentWrapper.appendChild(messageContent);\n  contentWrapper.appendChild(hoverMenu);\n\n  chatMessage.appendChild(profilePicture);\n  chatMessage.appendChild(contentWrapper);\n\n  if (container) { // card container?\n    contentWrapper.appendChild(container);\n  }\n\n  // Image load handler\n  chatMessage.querySelectorAll('img').forEach(img => {\n    img.addEventListener('load', () => {\n      // Implement scrollToBottom when ready\n    });\n  });\n\n  insertChatMessage(chatWindow, message, chatMessage);\n  return chatMessage;\n}\n\nfunction insertChatMessage(chatWindow, message, chatMessage) {\n  const aimMessages = chatWindow.content.querySelector('.aim-messages');\n  if (!aimMessages) {\n    console.error('aim-messages not found. user most likely not in the chat window');\n    return;\n  }\n  const allMessages = Array.from(aimMessages.querySelectorAll('.aim-chat-message'));\n  let inserted = false;\n\n  for (const existingMessage of allMessages) {\n    const existingId = parseInt(existingMessage.getAttribute('data-id'), 10);\n    if (message.id < existingId) {\n      aimMessages.insertBefore(chatMessage, existingMessage);\n      inserted = true;\n      break;\n    }\n  }\n\n  if (!inserted) {\n    aimMessages.appendChild(chatMessage);\n  }\n\n  return chatMessage;\n}\n\n// Create a simple in-memory cache\n// TODO: move to a separate file\nconst avatarCache = new Map();\n\nfunction defaultAvatarSvg(username) {\n  // Check if avatar is already cached\n  if (avatarCache.has(username)) {\n    return avatarCache.get(username);\n  }\n\n  // Create an identicon avatar using DiceBear\n  const avatar = this.bp.vendor.dicebear.createAvatar(this.bp.vendor.dicebearAvatars, {\n    seed: username, // Username as seed for consistent avatar\n    size: 40, // Avatar size in pixels\n    backgroundColor: [\"#f0f0f0\"], // Optional: Customize background\n  });\n\n  // Convert avatar to SVG string\n  const svg = avatar.toString();\n\n  // Store in cache\n  avatarCache.set(username, svg);\n\n  return svg;\n}","// TODO: move all this app specific code *outside* of the buddylist / renderMessage\n// use the system.addMessageProcessor() API instead\n\nimport isValidUrl from './isValidUrl.js';\nimport isValidYoutubeLink from './isValidYoutubeLink.js';\nimport isValidGithubLink from './isValidGithubLink.js';\n\nexport default function checkForLinksInMessage(message) {\n  const text = message.text || '';\n\n  // Basic URL regex — matches http(s) links\n  const urlRegex = /https?:\\/\\/(?:[^\\s()<>\\[\\]{}\"']+|\\([^\\s()]*?\\))+/gi;\n  let match = text.match(urlRegex);\n  // match = [message.text];\n\n  if (match && isValidUrl(match[0])) {\n    let contentUrl = match[0];\n    // console.log('Found URL in message:', contentUrl);\n    message.card = {\n      url: contentUrl,\n      type: 'website',\n    };\n\n    // Determine file type from extension\n    let ext = contentUrl.split('.').pop().split(/\\#|\\?/)[0]; // Strip off hash/query\n    if (ext && typeof ext === 'string') {\n      if (buddypond.supportedImageTypesExt.includes(ext.toLowerCase())) {\n        message.card.type = 'image';\n      }\n      if (buddypond.supportedAudioTypesExt.includes(ext.toLowerCase())) {\n        message.card.type = 'audio';\n      }\n      if (buddypond.supportedVideoTypesExt.includes(ext.toLowerCase())) {\n        message.card.type = 'video';\n      }\n    }\n\n    // YouTube link handling\n    if (isValidYoutubeLink(contentUrl)) {\n      const videoId = new URL(contentUrl).searchParams.get('v');\n      if (videoId) {\n        message.card.type = 'youtube';\n        message.card.thumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\n        message.card.context = videoId;\n      }\n    }\n\n    // GitHub link handling\n    if (isValidGithubLink(contentUrl)) {\n      message.card.type = 'github';\n      const githubRegex = /^https?:\\/\\/github\\.com\\/([^\\/]+)\\/([^\\/]+)\\/blob\\/([^\\/]+)\\/(.+)$/;\n      const match = contentUrl.match(githubRegex);\n      if (match) {\n        message.card.owner = match[1];\n        message.card.repo = match[2];\n        message.card.filename = match[4];\n      } else {\n        console.error(\"Invalid GitHub URL format.\");\n      }\n    }\n  }\n}\n","export default function isValidUrl(messageText) {\n    if (!messageText) return false;\n  \n    messageText = messageText.trim(); // Trim whitespace from both ends\n  \n    try {\n      const url = new URL(messageText);\n  \n      // Ensure the URL has http or https protocol\n      if (url.protocol === \"http:\" || url.protocol === \"https:\") {\n        // console.log('This is a valid URL:', url.href);\n        return true;\n      }\n  \n      return false; // Invalid if protocol is not http or https\n    } catch (error) {\n      return false; // If an error is thrown, it's not a valid URL\n    }\n  }","export default function checkIsValidYoutubeLink(url) {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : null; // Return video ID or null\n}\n","export default function isValidGithubLink(url) {\n    const regex = /^https?:\\/\\/github\\.com\\/([^\\/]+)\\/([^\\/]+)\\/blob\\/([^\\/]+)\\/(.+)$/;\n    const match = url.match(regex);\n    return match ? match.slice(1) : null; \n    // Returns [owner, repo, branch, filePath] or null\n}\n","export default class ChatWindowButtonBar {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n        this.buttons = options.buttons || [\n            /*\n                {\n                text: 'BuddySound',\n                onclick: () => console.log('Send button clicked')\n                }\n            */\n        ];\n        this.container = this.render();\n        return this;\n    }\n\n    render() {\n        // console.log('ChatWindowButtonBar.render', this.buttons);\n        let buttonBar = document.createElement('div');\n        buttonBar.classList.add('button-bar');\n\n        this.buttons.forEach(button => {\n\n       \n            if (button.image) {\n                let imgElement = document.createElement('img');\n                imgElement.src = button.image;\n                imgElement.title = button.text;\n                imgElement.dataset.context = this.options.context || button.text;\n                imgElement.dataset.type = this.options.type || 'buddy';\n                imgElement.alt = button.text;\n                imgElement.classList.add('button-bar-button');\n                imgElement.draggable = false;\n                if (button.className) {\n                    imgElement.classList.add(button.className);\n                }\n                imgElement.onclick = button.onclick;\n\n                if (button.align && button.align === 'right') {\n                    // TODO: add option to right align buttons\n                }\n\n                buttonBar.appendChild(imgElement);\n\n            } else {\n                let buttonElement = document.createElement('button');\n                buttonElement.innerText = button.text;\n                buttonElement.dataset.context = this.options.context || button.text;\n                buttonElement.dataset.type = this.options.type || 'buddy';\n                buttonElement.classList.add('button-bar-button');\n                if (button.className) {\n                    buttonElement.classList.add(button.className);\n                }\n                buttonElement.onclick = button.onclick;\n                buttonBar.appendChild(buttonElement);\n            }\n\n        });\n\n        return buttonBar;\n    }\n\n}","// contains list of bad words we dont't want the Desktop to render\n// these are stored as Base64 so we don't have to see them introduced into the codebase\n// if you wish to view the list simply run: \"console.log(atob(forbiddenNotes.base64))\" in console\n\nlet forbiddenNotes = {\n  \"base64\": \"WyI0cjVlIiwiNWgxdCIsIjVoaXQiLCJhNTUiLCJhbmFsIiwiYW51cyIsImFyNWUiLCJhcnJzZSIsImFyc2UiLCJhc3MiLCJhc3MtZnVja2VyIiwiYXNzZXMiLCJhc3NmdWNrZXIiLCJhc3NmdWtrYSIsImFzc2hvbGUiLCJhc3Nob2xlcyIsImFzc3dob2xlIiwiYV9zX3MiLCJiIXRjaCIsImIwMGJzIiwiYjE3Y2giLCJiMXRjaCIsImJhbGxiYWciLCJiYWxscyIsImJhbGxzYWNrIiwiYmFzdGFyZCIsImJlYXN0aWFsIiwiYmVhc3RpYWxpdHkiLCJiZWxsZW5kIiwiYmVzdGlhbCIsImJlc3RpYWxpdHkiLCJiaStjaCIsImJpYXRjaCIsImJpdGNoIiwiYml0Y2hlciIsImJpdGNoZXJzIiwiYml0Y2hlcyIsImJpdGNoaW4iLCJiaXRjaGluZyIsImJsb29keSIsImJsb3cgam9iIiwiYmxvd2pvYiIsImJsb3dqb2JzIiwiYm9pb2xhcyIsImJvbGxvY2siLCJib2xsb2siLCJib25lciIsImJvb2IiLCJib29icyIsImJvb29icyIsImJvb29vYnMiLCJib29vb29icyIsImJvb29vb29vYnMiLCJicmVhc3RzIiwiYnVjZXRhIiwiYnVnZ2VyIiwiYnVtIiwiYnVubnkgZnVja2VyIiwiYnV0dCIsImJ1dHRob2xlIiwiYnV0dG11bmNoIiwiYnV0dHBsdWciLCJjMGNrIiwiYzBja3N1Y2tlciIsImNhcnBldCBtdW5jaGVyIiwiY2F3ayIsImNoaW5rIiwiY2lwYSIsImNsMXQiLCJjbGl0IiwiY2xpdG9yaXMiLCJjbGl0cyIsImNudXQiLCJjb2NrIiwiY29jay1zdWNrZXIiLCJjb2NrZmFjZSIsImNvY2toZWFkIiwiY29ja211bmNoIiwiY29ja211bmNoZXIiLCJjb2NrcyIsImNvY2tzdWNrICIsImNvY2tzdWNrZWQgIiwiY29ja3N1Y2tlciIsImNvY2tzdWNraW5nIiwiY29ja3N1Y2tzICIsImNvY2tzdWthIiwiY29ja3N1a2thIiwiY29rIiwiY29rbXVuY2hlciIsImNva3N1Y2thIiwiY29vbiIsImNveCIsImNyYXAiLCJjdW0iLCJjdW1tZXIiLCJjdW1taW5nIiwiY3VtcyIsImN1bXNob3QiLCJjdW5pbGluZ3VzIiwiY3VuaWxsaW5ndXMiLCJjdW5uaWxpbmd1cyIsImN1bnQiLCJjdW50bGljayAiLCJjdW50bGlja2VyICIsImN1bnRsaWNraW5nICIsImN1bnRzIiwiY3lhbGlzIiwiY3liZXJmdWMiLCJjeWJlcmZ1Y2sgIiwiY3liZXJmdWNrZWQgIiwiY3liZXJmdWNrZXIiLCJjeWJlcmZ1Y2tlcnMiLCJjeWJlcmZ1Y2tpbmcgIiwiZDFjayIsImRhbW4iLCJkaWNrIiwiZGlja2hlYWQiLCJkaWxkbyIsImRpbGRvcyIsImRpbmsiLCJkaW5rcyIsImRpcnNhIiwiZGxjayIsImRvZy1mdWNrZXIiLCJkb2dnaW4iLCJkb2dnaW5nIiwiZG9ua2V5cmliYmVyIiwiZG9vc2giLCJkdWNoZSIsImR5a2UiLCJlamFjdWxhdGUiLCJlamFjdWxhdGVkIiwiZWphY3VsYXRlcyAiLCJlamFjdWxhdGluZyAiLCJlamFjdWxhdGluZ3MiLCJlamFjdWxhdGlvbiIsImVqYWt1bGF0ZSIsImYgdSBjIGsiLCJmIHUgYyBrIGUgciIsImY0bm55IiwiZmFnIiwiZmFnZ2luZyIsImZhZ2dpdHQiLCJmYWdnb3QiLCJmYWdncyIsImZhZ290IiwiZmFnb3RzIiwiZmFncyIsImZhbm55IiwiZmFubnlmbGFwcyIsImZhbm55ZnVja2VyIiwiZmFueXkiLCJmYXRhc3MiLCJmY3VrIiwiZmN1a2VyIiwiZmN1a2luZyIsImZlY2siLCJmZWNrZXIiLCJmZWxjaGluZyIsImZlbGxhdGUiLCJmZWxsYXRpbyIsImZpbmdlcmZ1Y2sgIiwiZmluZ2VyZnVja2VkICIsImZpbmdlcmZ1Y2tlciAiLCJmaW5nZXJmdWNrZXJzIiwiZmluZ2VyZnVja2luZyAiLCJmaW5nZXJmdWNrcyAiLCJmaXN0ZnVjayIsImZpc3RmdWNrZWQgIiwiZmlzdGZ1Y2tlciAiLCJmaXN0ZnVja2VycyAiLCJmaXN0ZnVja2luZyAiLCJmaXN0ZnVja2luZ3MgIiwiZmlzdGZ1Y2tzICIsImZsYW5nZSIsImZvb2siLCJmb29rZXIiLCJmdWNrIiwiZnVja2EiLCJmdWNrZWQiLCJmdWNrZXIiLCJmdWNrZXJzIiwiZnVja2hlYWQiLCJmdWNraGVhZHMiLCJmdWNraW4iLCJmdWNraW5nIiwiZnVja2luZ3MiLCJmdWNraW5nc2hpdG1vdGhlcmZ1Y2tlciIsImZ1Y2ttZSAiLCJmdWNrcyIsImZ1Y2t3aGl0IiwiZnVja3dpdCIsImZ1ZGdlIHBhY2tlciIsImZ1ZGdlcGFja2VyIiwiZnVrIiwiZnVrZXIiLCJmdWtrZXIiLCJmdWtraW4iLCJmdWtzIiwiZnVrd2hpdCIsImZ1a3dpdCIsImZ1eCIsImZ1eDByIiwiZl91X2NfayIsImdhbmdiYW5nIiwiZ2FuZ2JhbmdlZCAiLCJnYW5nYmFuZ3MgIiwiZ2F5bG9yZCIsImdheXNleCIsImdvYXRzZSIsImdvZC1kYW0iLCJnb2QtZGFtbmVkIiwiZ29kZGFtbiIsImdvZGRhbW5lZCIsImhhcmRjb3Jlc2V4ICIsImhlbGwiLCJoZXNoZSIsImhvYXIiLCJob2FyZSIsImhvZXIiLCJob21vIiwiaG9yZSIsImhvcm5pZXN0IiwiaG9ybnkiLCJob3RzZXgiLCJqYWNrLW9mZiAiLCJqYWNrb2ZmIiwiamFwIiwiamVyay1vZmYgIiwiamlzbSIsImppeiAiLCJqaXptICIsImppenoiLCJrYXdrIiwia25vYiIsImtub2JlYWQiLCJrbm9iZWQiLCJrbm9iZW5kIiwia25vYmhlYWQiLCJrbm9iam9ja3kiLCJrbm9iam9rZXkiLCJrb2NrIiwia29uZHVtIiwia29uZHVtcyIsImt1bSIsImt1bW1lciIsImt1bW1pbmciLCJrdW1zIiwia3VuaWxpbmd1cyIsImtpdW50IiwibDNpK2NoIiwibDNpdGNoIiwibGFiaWEiLCJsbWZhbyIsImx1c3QiLCJsdXN0aW5nIiwibTBmMCIsIm0wZm8iLCJtNDV0ZXJiYXRlIiwibWE1dGVyYjgiLCJtYTV0ZXJiYXRlIiwibWFzb2NoaXN0IiwibWFzdGVyLWJhdGUiLCJtYXN0ZXJiOCIsIm1hc3RlcmJhdCoiLCJtYXN0ZXJiYXQzIiwibWFzdGVyYmF0ZSIsIm1hc3RlcmJhdGlvbiIsIm1hc3RlcmJhdGlvbnMiLCJtYXN0dXJiYXRlIiwibW8tZm8iLCJtb2YwIiwibW9mbyIsIm1vdGhhZnVjayIsIm1vdGhhZnVja2EiLCJtb3RoYWZ1Y2thcyIsIm1vdGhhZnVja2F6IiwibW90aGFmdWNrZWQgIiwibW90aGFmdWNrZXIiLCJtb3RoYWZ1Y2tlcnMiLCJtb3RoYWZ1Y2tpbiIsIm1vdGhhZnVja2luZyAiLCJtb3RoYWZ1Y2tpbmdzIiwibW90aGFmdWNrcyIsIm1vdGhlciBmdWNrZXIiLCJtb3RoZXJmdWNrIiwibW90aGVyZnVja2VkIiwibW90aGVyZnVja2VyIiwibW90aGVyZnVja2VycyIsIm1vdGhlcmZ1Y2tpbiIsIm1vdGhlcmZ1Y2tpbmciLCJtb3RoZXJmdWNraW5ncyIsIm1vdGhlcmZ1Y2trYSIsIm1vdGhlcmZ1Y2tzIiwibXVmZiIsIm11dGhhIiwibXV0aGFmZWNrZXIiLCJtdXRoYWZ1Y2trZXIiLCJtdXRoZXIiLCJtdXRoZXJmdWNrZXIiLCJuMWdnYSIsIm4xZ2dlciIsIm5hemkiLCJuaWdnM3IiLCJuaWdnNGgiLCJuaWdnYSIsIm5pZ2dhaCIsIm5pZ2dhcyIsIm5pZ2dheiIsIm5pZ2dlciIsIm5pZ2dlcnMiLCJub2IiLCJub2Igam9rZXkiLCJub2JoZWFkIiwibm9iam9ja3kiLCJub2Jqb2tleSIsIm51bWJudXRzIiwibnV0c2FjayIsIm9yZ2FzaW0gIiwib3JnYXNpbXMgIiwib3JnYXNtIiwib3JnYXNtcyAiLCJwMHJuIiwicGF3biIsInBlY2tlciIsInBlbmlzIiwicGVuaXNmdWNrZXIiLCJwaG9uZXNleCIsInBodWNrIiwicGh1ayIsInBodWtlZCIsInBodWtpbmciLCJwaHVra2VkIiwicGh1a2tpbmciLCJwaHVrcyIsInBodXEiLCJwaWdmdWNrZXIiLCJwaW1waXMiLCJwaXNzIiwicGlzc2VkIiwicGlzc2VyIiwicGlzc2VycyIsInBpc3NlcyAiLCJwaXNzZmxhcHMiLCJwaXNzaW4gIiwicGlzc2luZyIsInBpc3NvZmYgIiwicG9vcCIsInBvcm4iLCJwb3JubyIsInBvcm5vZ3JhcGh5IiwicG9ybm9zIiwicHJpY2siLCJwcmlja3MgIiwicHJvbiIsInB1YmUiLCJwdXNzZSIsInB1c3NpIiwicHVzc2llcyIsInB1c3N5IiwicHVzc3lzICIsInJlY3R1bSIsInJldGFyZCIsInJpbWphdyIsInJpbW1pbmciLCJzIGhpdCIsInMuby5iLiIsInNhZGlzdCIsInNjaGxvbmciLCJzY3Jld2luZyIsInNjcm9hdCIsInNjcm90ZSIsInNjcm90dW0iLCJzZW1lbiIsInNleCIsInNoISsiLCJzaCF0Iiwic2gxdCIsInNoYWciLCJzaGFnZ2VyIiwic2hhZ2dpbiIsInNoYWdnaW5nIiwic2hlbWFsZSIsInNoaSsiLCJzaGl0Iiwic2hpdGRpY2siLCJzaGl0ZSIsInNoaXRlZCIsInNoaXRleSIsInNoaXRmdWNrIiwic2hpdGZ1bGwiLCJzaGl0aGVhZCIsInNoaXRpbmciLCJzaGl0aW5ncyIsInNoaXRzIiwic2hpdHRlZCIsInNoaXR0ZXIiLCJzaGl0dGVycyAiLCJzaGl0dGluZyIsInNoaXR0aW5ncyIsInNoaXR0eSAiLCJza2FuayIsInNsdXQiLCJzbHV0cyIsInNtZWdtYSIsInNtdXQiLCJzbmF0Y2giLCJzb24tb2YtYS1iaXRjaCIsInNwYWMiLCJzcHVuayIsInNfaF9pX3QiLCJ0MXR0MWU1IiwidDF0dGllcyIsInRlZXRzIiwidGVleiIsInRlc3RpY2FsIiwidGVzdGljbGUiLCJ0aXQiLCJ0aXRmdWNrIiwidGl0cyIsInRpdHQiLCJ0aXR0aWU1IiwidGl0dGllZnVja2VyIiwidGl0dGllcyIsInRpdHR5ZnVjayIsInRpdHR5d2FuayIsInRpdHdhbmsiLCJ0b3NzZXIiLCJ0dXJkIiwidHc0dCIsInR3YXQiLCJ0d2F0aGVhZCIsInR3YXR0eSIsInR3dW50IiwidHd1bnRlciIsInYxNGdyYSIsInYxZ3JhIiwidmFnaW5hIiwidmlhZ3JhIiwidnVsdmEiLCJ3MDBzZSIsIndhbmciLCJ3YW5rIiwid2Fua2VyIiwid2Fua3kiLCJ3aG9hciIsIndob3JlIiwid2lsbGllcyIsIndpbGx5IiwieHJhdGVkIiwieHh4Il0=\"\n};\n\nforbiddenNotes.randowFunWord = function randowFunWord() {\n  let words = [\"daffodil\", \"chrysanthemum\", \"waffles\", \"puppies\", \"senpai\", \"kohai\", \"rainbow\", \"fluffy\", \"marklar\"];\n  // TODO: use bp.random() in order to get seedable randomness\n  // this will provide consistent results across all client instances\n  var item = words[Math.floor(Math.random() * words.length)];\n  return item;\n}\n\nforbiddenNotes.containsBadWord = function (str) {\n  // Convert input to lowercase for case-insensitive matching\n  const lowerStr = str.toLowerCase();\n  // Check each forbidden word using word boundaries\n  return forbiddenNotes.decoded.some(function (fnote) {\n    // Create a regex with word boundaries for whole-word matching\n    const regex = new RegExp(`\\\\b${fnote}\\\\b`, 'i');\n    const found = regex.test(lowerStr);\n    return found;\n  });\n};\n\nforbiddenNotes.filter = function (str) {\n  forbiddenNotes.decoded.forEach(function (fnote) {\n    str = str.replace(new RegExp(\"\\\\b\" + fnote + \"\\\\b\"), forbiddenNotes.randowFunWord())\n    str = str.replace(new RegExp(\"\\\\b\" + fnote + \"\\\\b\", \"gi\"), forbiddenNotes.randowFunWord())\n  });\n  return str;\n}\n\nforbiddenNotes.decoded = JSON.parse(atob(forbiddenNotes.base64))\n\nexport default forbiddenNotes;\n","// import AutoComplete from '../../ui/AutoComplete/AutoComplete.js'; // using jquery autocomplete ( for now )\nimport ChatWindowButtonBar from \"./ChatWindowButtonBar.js\";\nimport forbiddenNotes from './forbiddenNotes.js';\n\nexport default function openChatWindow(data) {\n    // this.bp.emit('client::requestWebsocketConnection', 'buddylist');\n\n    // attempt to subscribe / open websocket connection to messages ws server\n\n    let windowType = data.pondname ? 'pond' : 'buddy';\n    let contextName = data.pondname || data.name;\n    let windowTitle = windowType === 'pond' ? 'Pond' : '';\n\n    if (data.context) {\n        contextName = data.context;\n    }\n\n    if (data.type) {\n        windowType = data.type;\n    }\n\n    contextName = contextName.toString();\n\n    let pondName = contextName.replace('pond/', '');\n\n\n    // ensure that context does not contain forbidden characters or bad words\n    // TODO: add client-side check for invalid characters in pondName\n    if (forbiddenNotes.containsBadWord(pondName)) {\n        console.error('Forbidden context name:', contextName);\n        alert('Pond name not allowed, please choose a different name.');\n        return;\n    }\n\n    let windowIdPrefix = windowType === 'pond' ? 'pond_message_-' : 'buddy_message_-';\n    let client = this.bp.apps.client;\n\n    let windowId = windowIdPrefix + contextName;\n    // console.log('opening chat window ', windowId)\n    let chatWindow = this.bp.apps.ui.windowManager.findWindow(windowId);\n    if (chatWindow) {\n        chatWindow.focus();\n        return chatWindow;\n    }\n\n    let iconImagePath = windowType === 'buddy' ? '' : 'desktop/assets/images/icons/icon_pond_64.png';\n\n    if (windowType === 'buddy') {\n\n        if (\n            this.bp.apps.buddylist.data.profileState &&\n            this.bp.apps.buddylist.data.profileState.buddylist &&\n            this.bp.apps.buddylist.data.profileState.buddylist[contextName] &&\n            this.bp.apps.buddylist.data.profileState.buddylist[contextName].profile_picture) {\n            iconImagePath = this.bp.apps.buddylist.data.profileState.buddylist[contextName].profile_picture;\n        }\n\n\n    }\n\n    chatWindow = this.bp.apps.ui.windowManager.createWindow({\n        app: 'buddylist',\n        id: windowIdPrefix + contextName,\n        title: contextName + ' ' + windowTitle,\n        // title: '<img src=\"' + iconImagePath + '\" class=\"window-icon\" /> ' + contextName + ' ' + windowTitle,\n        icon: iconImagePath,\n        type: windowType,\n        context: contextName,\n        parent: this.bp.apps.ui.parent,\n        className: 'chatWindow',\n        x: data.x || 175,\n        y: 75,\n        width: 600,\n        height: 500,\n        onOpen: async (_window) => {\n\n            // console.log('calling onOpen for new chat window', _window);\n            setupChatWindow.call(this, windowType, contextName, _window);\n\n            client.addSubscription(windowType, contextName);\n\n            // If when the buddy chat window is opened, the buddy has new messages, we need to set the newMessages flag to false\n            if (windowType === 'buddy') {\n                // check to see if we have newMessages state for this buddy, if so set newMessages to false\n                if (this.data.profileState && this.data.profileState.buddylist && this.data.profileState.buddylist[contextName] && this.data.profileState.buddylist[contextName].newMessages) {\n                    this.data.profileState.buddylist[contextName].newMessages = false;\n                    this.client.receivedInstantMessage(contextName, function (err, re) {\n                        // console.log('receivedInstantMessage', err, re);\n                    });\n                }\n            }\n\n\n            const _data = { me: this.bp.me };\n            if (windowType === 'pond') {\n                _data.pondname = contextName;\n            } else {\n                _data.buddyname = contextName;\n            }\n\n            this.data.processedMessages[contextName] = this.data.processedMessages[contextName] || [];\n            // await this.bp.load('emoji-picker');\n\n            let rerenderMessages = [...this.data.processedMessages[contextName]];\n            this.data.processedMessages[contextName] = [];\n\n            for (const message of rerenderMessages) {\n                try {\n                    await this.renderChatMessage(message, _window, true);\n                } catch (err) {\n                    console.error('Error rendering message', message, err, _window);\n                }\n            }\n\n            // now focus on the .aim-input field\n            // console.log('focus on input', $('.aim-input', _window.content).length);\n            // console.log('_window.content', _window.content);\n\n            function focusOnInput() {\n                let aimInput = $('.aim-input', _window.content);\n                if (aimInput.length === 0) {\n                    setTimeout(() => {\n                        console.log('focus on input', $('.aim-input', _window.content).length);\n                        console.log('_window.content', _window.content);\n                        focusOnInput();\n                    }\n                        , 100);\n                }\n                $('.aim-input', _window.content).focus();\n            }\n\n            focusOnInput();\n\n\n        },\n        onClose: () => {\n            client.removeSubscription(windowType, contextName);\n        }\n    });\n\n    chatWindow.loggedIn = true;\n\n    // this.bp.apps.themes.applyTheme(this.bp.settings.active_theme);\n\n\n    return chatWindow;\n}\n\n// TODO: move to separate file, rename bindChatWindowEvents\nfunction setupChatWindow(windowType, contextName, chatWindow) {\n\n    const chatWindowTemplate = this.messageTemplateString;\n\n    const cloned = document.createElement('div');\n    cloned.innerHTML = chatWindowTemplate;\n\n    // console.log('setupChatWindow', chatWindow, this.options);\n    chatWindow.container.classList.add('has-droparea');\n    chatWindow.content.appendChild($('.aim-window', cloned)[0]);\n\n    if (this.options.autocomplete) {\n        let keys = Object.keys(this.options.autocomplete);\n\n        // add a \"/\" to each command for consistency\n        let sourceCommands = keys.map((command) => {\n            return '/' + command;\n        });\n\n        // new AutoComplete('.aim-input', chatWindow.content, this.options.autocomplete);\n        // alert(JSON.stringify(this.options.autocomplete));\n        $('.aim-input', chatWindow.content).autocomplete({\n            source: sourceCommands,\n            search: function (event, ui) {\n                // only trigger autocomplete searches if user has started message with oper code ( / or \\ )\n                let opers = ['/', '\\\\'];\n                let firstChar = event.target.value.substr(0, 1);\n                if (opers.indexOf(firstChar) === -1) {\n                    return false;\n                }\n                return true;\n            }\n        });\n    }\n\n    if (this.options.chatWindowButtons) {\n        // copy the options\n        let chatWindowButtons = this.options.chatWindowButtons.slice();\n        if (windowType === 'pond') {\n            // filter out any this.options.chatWindowButtons that are buddy specific\n            chatWindowButtons = chatWindowButtons.filter((button) => {\n                return button.type !== 'buddy-only';\n            });\n        }\n\n        // check if env is iOS, if so, remove any 'desktop-only' buttons\n\n        function isIOS() {\n            return (\n                /iPad|iPhone|iPod/.test(navigator.userAgent) && ('ontouchend' in document)\n            );\n        }\n        if (isIOS()) {\n            chatWindowButtons = chatWindowButtons.filter((button) => {\n                return button.env !== 'desktop-only';\n            });\n        }\n\n        const chatWindowButtonBar = new ChatWindowButtonBar(this.bp, {\n            context: contextName,\n            type: windowType,\n            buttons: chatWindowButtons\n        });\n        $('.aim-message-controls', chatWindow.content).prepend(chatWindowButtonBar.container);\n\n    }\n\n    $('.message_form .aim-to', chatWindow.content).val(contextName);\n\n    // TODO: move this to sendMessage.js()\n    $('.message_form', chatWindow.content).submit(async (e) => {\n        e.preventDefault();\n        await this.sendMessageHandler(e, chatWindow, windowType, contextName);\n    });\n\n    // Hitting enter key will send the message\n    $('.aim-input', chatWindow.content).keydown((e) => {\n\n        // allow shift + enter to add a new line\n        if (e.which === 13 && e.shiftKey) {\n            // insert new line to the textarea\n            let $input = $(e.target);\n            let inputValue = $input.val();\n            let cursorPosition = $input[0].selectionStart;\n            let newValue = inputValue.slice(0, cursorPosition) + '\\n' + inputValue.slice(cursorPosition);\n            $input.val(newValue);\n            $input[0].setSelectionRange(cursorPosition + 1, cursorPosition + 1);\n\n            // check if the message is empty\n            return false;\n        }\n\n        if (e.which === 13) {\n            // this.bp.ignoreUIControlKeys = true;\n            if (this.bp.ignoreUIControlKeys) {\n                // return false;\n            }\n            // replace /n with <br>\n            let message = $(e.target).val();\n            message = message.replace(/\\n/g, '<br>');\n            $(e.target).val(message);\n            $('.message_form', chatWindow.content).submit();\n            e.preventDefault();\n            return false;\n        }\n    });\n\n    // Active / inactive send button for empty input field\n    $('.aim-input', chatWindow.content).on('keyup', (e) => {\n        // check value of the input field, if not empty, set opacity to 1\n        let inputValue = $(e.target).val();\n        let $sendButton = $('.aim-send-btn', chatWindow.content);\n        if (inputValue.length > 0) {\n            $sendButton.css('opacity', 1);\n        } else {\n            $sendButton.css('opacity', 0.5);\n        }\n    });\n\n    // Buddy \"is typing\" event on message_text input\n    $('.aim-input', chatWindow.content).on('keydown', (e) => {\n\n        let buddyName = this.bp.me;\n        let context = contextName;\n        // console.log('typing', buddyName, context);\n        this.bp.emit('buddy::typing', {\n            from: buddyName,\n            to: context,\n            type: windowType,\n            isTyping: true,\n            ctime: Date.now()\n        });\n    });\n\n\n\n\n}","const defaultProfileFiles = {\n    'index.html': `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My BuddyPond Profile</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n</head>\n<body>\n    <h1>My Profile</h1>\n    <div class=\"profile-section\">\n        <p>Welcome to my BuddyPond profile, hosted on the BuddyPond CDN!</p>\n        <p><strong>Customize Your Profile:</strong></p>\n        <ul>\n            <li>This default profile includes <code>index.html</code>, <code>style.css</code>, and <code>profile.js</code>.</li>\n            <li>You may use any files, the only requirement is <code>index.html</code> must be located in root.</li>\n            <li>Edit or upload files in the <strong>Buddy Files</strong> app (root directory).</li>\n            <li>Add any static files (HTML, CSS, JS, images) or projects (e.g., React, Vue).</li>\n            <li>Use relative paths (e.g., <code>./style.css</code>) to link files.</li>\n        </ul>\n        <p><strong>Example:</strong> Click to change text color.</p>\n        <button id=\"toggleButton\">Toggle Text Color</button>\n        <p class=\"color-text\">This text changes color!</p>\n    </div>\n    <script src=\"./profile.js\"></script>\n</body>\n</html>`,\n    'style.css': `\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    background-color: #f4f4f9;\n    color: #333;\n    margin: 0;\n    padding: 20px;\n    line-height: 1.5;\n}\nh1 {\n    color: #007bff;\n    text-align: center;\n}\n.profile-section {\n    max-width: 600px;\n    margin: 0 auto;\n}\nul {\n    padding-left: 20px;\n    font-size: 0.9em;\n}\ncode {\n    background: #f0f0f0;\n    padding: 2px 4px;\n    border-radius: 3px;\n}\nbutton {\n    background-color: #007bff;\n    color: white;\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    display: block;\n    margin: 10px auto;\n}\nbutton:hover {\n    background-color: #0056b3;\n}\n.color-text {\n    font-size: 1.1em;\n    text-align: center;\n    transition: color 0.3s ease;\n}\n.color-text.toggled {\n    color: #dc3545;\n}`,\n    'profile.js': `\nconst text = document.querySelectorAll('.color-text');\nconst button = document.getElementById('toggleButton');\nbutton.addEventListener('click', () => {\n    text.forEach(item => item.classList.toggle('toggled'));\n});\n`\n};\n\nexport default defaultProfileFiles;","\n// the best way to determine if user has a profile seems to be to just\n// check the CDN for index.html, style.css, and profile.js files\n// if any of them 404, we will programmatically create them here\n// generateDefaultProfile() is called on auth::qtoken ( login success )\n// so on each logic we will check if the profile exists\n// if we didn't do this, we'd have to check profile on File Explorer open or Profile open or Pad open,\n// which would result in a fragmented code and a delay in UI while we check for profile existence\n\nimport defaultProfileFiles from './defaultProfileFiles.js';\n\nexport default async function generateDefaultProfile(qtoken) {\n    const basePath = \"https://files.buddypond.com/\" + qtoken.me;\n\n    // TODO: move to portfolio / faucet\n    // await requestDefaultCoinAllocations.call(this, qtoken);\n\n\n    for (const [fileName, fileContent] of Object.entries(defaultProfileFiles)) {\n        try {\n            const response = await fetch(`${basePath}/${fileName}`);\n            if (!response.ok) throw new Error('File not found, needs creation');\n\n            // check if not 200 response\n            // if not, throw error\n            if (response.status !== 200) throw new Error('File not found, needs creation');\n\n            // check if new location is four-ohh-four, if so, throw error\n            if (response.url === 'https://buddypond.com/four-ohh-four') {\n                throw new Error('File not found, needs creation');\n            }\n\n        } catch (error) {\n            console.log(`Creating ${fileName}: ${error.message}`);\n            const blob = new Blob([fileContent], { type: getFileType(fileName) });\n            const file = new File([blob], fileName, {\n                type: blob.type,\n                lastModified: new Date()\n            });\n            file.filePath = `${fileName}`; // maybe\n\n            try {\n                await this.bp.apps.client.api.uploadFile(file);\n                console.log(`${fileName} uploaded successfully.`);\n            } catch (uploadError) {\n                console.error(`Error uploading ${fileName}: ${uploadError.message}`);\n            }\n        }\n    }\n}\n\nfunction getFileType(fileName) {\n    if (fileName.endsWith('.html')) return 'text/html';\n    if (fileName.endsWith('.css')) return 'text/css';\n    if (fileName.endsWith('.js')) return 'application/javascript';\n    return 'text/plain';\n}\n\n\nasync function requestDefaultCoinAllocations(qtoken) {\n    // before generating the default profile files ( for home page)\n    // we need to establish the users initial MEGA ( Megabytes ) asset allocation in their portfolio\n    // since the user's initial state will have no record, we can simply attempt to add\n    // backend will allow initial allocation of 10 MEGA to all users\n\n    //\n    // Request default MEGA allocation\n    //\n    try {\n        await this.bp.load('portfolio');\n\n\n        await this.bp.apps.portfolio.resource.apiRequest('POST', 'portfolio/' + qtoken.me + '/MEGA', {\n            symbol: 'MEGA',\n            owner: qtoken.me,\n            amount: 10,\n            available: 10,\n            price: 0.1,\n            cost: 0\n        });\n\n    } catch (error) {\n        console.log('Error creating MEGA asset for user', error);\n    }\n\n    //\n    // Request default GBP allocation\n    //\n    try {\n        await this.bp.load('portfolio'); // should be cached at this stage\n        await this.bp.apps.portfolio.resource.apiRequest('POST',  'portfolio/' + qtoken.me + '/GBP', {\n            symbol: 'GBP',\n            owner: qtoken.me,\n            amount: 10000,\n            available: 10000,\n            price: 0.001,\n            cost: 0\n        });\n    } catch (error) {\n        console.log('Error creating GBP asset for user', error);\n    }\n}","// Scroll to the bottom of the chat window\nexport default function scrollToBottom(parent, retryDelay = 0, retryCount = 0) {\n  // console.log('scrollToBottom', parent, retryDelay, retryCount);\n  if (!parent) {\n    console.log('No parent element provided.');\n    return;\n  }\n  if (retryCount > 5) {\n    console.log('Max retry count reached. Stopping scroll attempt.');\n    return;\n  }\n  $('.aim-chat-area', parent).scrollTop(99999999)\n\n  // check if the scroll is still at 0\n  const scrollTop = $('.aim-chat-area', parent).scrollTop();\n\n  if (scrollTop === 0) {\n    // scroll to the bottom\n    retryDelay += 200;\n    retryCount++;\n    setTimeout(() => {\n      scrollToBottom(parent, retryDelay, retryCount);\n    }, retryDelay);\n  }\n}","import scrollToBottom from \"./scrollToBottom.js\";\n\n// TODO: add logic for \"reply-message\" action\n//       reply-message action should open a small \"replying to\" box above the closest .aim-message-sender element\n//       The \"Replying to {BuddyName}\" box should contain the message text and a small \"cancel\" button at the right / end of the box\n//       We can assume that data-from will be the same as the sender of the message we are replying to\n\nexport default function bindMessageContextMenu() {\n\n\n\n  bindProfilePictureClick.call(this);\n\n  // Single event delegation for context menu, hover menu, and edit hint actions\n  document.addEventListener('click', (event) => {\n    const target = event.target;\n    let action = target.getAttribute('data-action');\n\n    // Handle context menu item click\n    if (target.classList.contains('aim-context-menu-item') && action) {\n      handleContextMenuItemClick.call(this, action, target);\n      return;\n    }\n\n    // Handle hover menu item click\n\n    // TODO: there must be a better way to do this\n    // Remark: The issue is that we wish to cover the click action for the parent item and all its potential children\n    let isHoverMenuAction = $(target).hasClass('aim-hover-menu-item') || $(target).parents().hasClass('aim-hover-menu-item');\n    action = target.getAttribute('data-action') || target.parentNode.getAttribute('data-action');\n\n    if (isHoverMenuAction && action) {\n      handleContextMenuItemClick.call(this, action, target);\n      return;\n    }\n\n    // Handle edit hint action click (escape/enter)\n    if (target.classList.contains('aim-edit-hint-action') && action) {\n      handleEditHintAction.call(this, action, target);\n      return;\n    }\n\n    // Handle reply cancel button click\n    if (target.classList.contains('aim-reply-cancel') && action === 'cancel-reply') {\n      // get the closest reply box\n      const replyBox = target.closest('.aim-reply-box');\n      cancelReply.call(this, replyBox);\n      return;\n    }\n\n    // Close existing context menu and reset hover menu\n    closeMenus.call(this);\n  });\n}\n\n// Handle context menu or hover menu item click\nfunction handleContextMenuItemClick(action, target) {\n  performAction.call(this, action, target);\n  if (action !== 'more-options') {\n    closeMenus.call(this);\n  }\n}\n\n// Handle edit hint action (escape/enter)\nfunction handleEditHintAction(action, target) {\n  const messageContent = target.closest('.aim-editable-container')?.querySelector('.aim-message-content');\n  if (!messageContent) {\n    console.error('No message content found for edit hint action');\n    return;\n  }\n\n  const messageUUID = messageContent.closest('.aim-chat-message')?.getAttribute('data-uuid');\n  const originalMessage = document.querySelector(`.aim-chat-message[data-uuid=\"${messageUUID}\"]`);\n  if (!originalMessage) {\n    console.error('No original message found');\n    return;\n  }\n\n  const messageData = {\n    uuid: messageUUID,\n    chatId: originalMessage.getAttribute('data-chat-id'),\n    text: originalMessage.getAttribute('data-original-text') || messageContent.innerText\n  };\n\n  if (action === 'cancel-edit') {\n    cancelEdit.call(this, messageContent, messageData.text);\n  } else if (action === 'save-edit') {\n    saveEdit.call(this, messageContent, messageData);\n  }\n\n}\n\n// Close active context and hover menus\nfunction closeMenus() {\n  if (this.activeMessageContextMenu) {\n    this.activeMessageContextMenu.remove();\n    this.activeMessageContextMenu = null;\n  }\n  if (this.activeMessageHoverMenu) {\n    this.activeMessageHoverMenu = null; // Rely on CSS for hiding hover menu\n  }\n  if (this.activeReplyBox) {\n    return;\n    this.activeReplyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.replyMode = false;\n  }\n}\n\n// Perform the specified action\nfunction performAction(action, target) {\n  const closestTarget = target.closest('.aim-context-menu') || target.closest('.aim-chat-message');\n  if (!closestTarget) {\n    console.error('No closest target found');\n    return;\n  }\n  // console.log('closestTarget', closestTarget);\n  const messageUUID = closestTarget.getAttribute('data-uuid');\n  const messageChatId = closestTarget.getAttribute('data-chat-id');\n  const messageFrom = closestTarget.getAttribute('data-from');\n  const messageData = {\n    uuid: messageUUID,\n    chatId: messageChatId,\n    from: messageFrom,\n  };\n\n  const originalMessage = document.querySelector(`.aim-chat-message[data-uuid=\"${messageUUID}\"]`);\n  if (!originalMessage) {\n    console.error('No original message found');\n    return;\n  }\n\n  messageData.text = originalMessage.querySelector('.aim-message-content').innerText;\n\n  if (!messageData.uuid || !messageData.chatId) {\n    console.error('No message data found');\n    return;\n  }\n\n  switch (action) {\n    case 'add-reaction':\n      console.log('Add reaction clicked');\n      break;\n    case 'edit-message':\n      editMessage.call(this, messageData);\n      break;\n    case 'reply-message':\n      replyMessage.call(this, messageData, originalMessage);\n      break;\n    case 'more-options':\n      event.preventDefault();\n      const closestMessage = target.closest('.aim-chat-message');\n      console.log('closestMessage', closestMessage);\n      if (closestMessage) {\n        this.createMessageContextMenu(target, closestMessage);\n      }\n\n      break;\n    case 'quote-message':\n      console.log('Quote message clicked');\n      break;\n    case 'say-message':\n      console.log('Say message clicked');\n      console.log('sayMessage', messageData);\n      this.bp.emit('say::message', messageData);\n      break;\n    case 'report-message':\n      console.log('Report message clicked');\n      break;\n    case 'copy-message':\n      console.log('Copy message clicked');\n      break;\n    case 'delete-message':\n      deleteMessage.call(this, messageData);\n      break;\n    case 'cast-spell':\n      this.bp.open('spellbook', { context: messageData.from, output: 'buddy'});\n      break;\n    default:\n      console.error(`Unknown action: ${action}`);\n  }\n}\n\n// Delete a message\nfunction deleteMessage(messageData) {\n  console.log('Deleting message', messageData);\n  buddypond.removeInstantMessage(messageData);\n}\n\n// Edit a message\nfunction editMessage(messageData) {\n  const messageContent = document.querySelector(\n    `.aim-chat-message[data-uuid=\"${messageData.uuid}\"] .aim-message-content`\n  );\n  if (!messageContent) {\n    console.error('No message content found');\n    return;\n  }\n\n  this.bp.ignoreUIControlKeys = true;\n  const originalText = messageData.text;\n\n  // Wrap message content in an editable container\n  const editableContainer = document.createElement('div');\n  editableContainer.className = 'aim-editable-container';\n  messageContent.parentNode.insertBefore(editableContainer, messageContent);\n  editableContainer.appendChild(messageContent);\n\n  // Store original text for restoration\n  messageContent.closest('.aim-chat-message').setAttribute('data-original-text', originalText);\n\n  // Make content editable\n  messageContent.setAttribute('contenteditable', 'true');\n  messageContent.setAttribute('data-editing', 'true');\n  messageContent.focus();\n\n  // Add UX hint message\n  const editHint = document.createElement('div');\n  editHint.className = 'aim-edit-hint';\n  editHint.innerHTML = `\n    <span class=\"aim-edit-hint-action\" data-action=\"cancel-edit\">escape</span> to cancel • \n    <span class=\"aim-edit-hint-action\" data-action=\"save-edit\">enter</span> to save\n  `;\n  editableContainer.appendChild(editHint);\n\n  // find the closest chatWindow\n  const chatWindow = messageContent.closest('.chatWindow');\n\n  scrollToBottom(chatWindow);\n\n  // Named event handler for keydown\n  const handleKeydown = (event) => {\n    if (event.key === 'Escape') {\n      cancelEdit.call(this, messageContent, originalText);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (event.key === 'Enter') {\n      saveEdit.call(this, messageContent, messageData);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  // Named event handler for blur\n  const handleBlur = (ev) => {\n    // ensure the target was not \".aim-edit-hint-action\"\n    console.log('handleBlur', ev.relatedTarget, ev.target.classList);\n    if (ev.relatedTarget && !ev.relatedTarget.classList.contains('aim-edit-hint-action')) {\n      cancelEdit.call(this, messageContent, originalText);\n      cleanupListeners();\n    }\n  };\n\n  // Cleanup function for event listeners\n  const cleanupListeners = () => {\n    messageContent.removeEventListener('keydown', handleKeydown);\n    messageContent.removeEventListener('blur', handleBlur);\n    this.bp.ignoreUIControlKeys = false;\n  };\n\n  // Attach event listeners\n  messageContent.addEventListener('keydown', handleKeydown);\n  messageContent.addEventListener('blur', handleBlur);\n\n  console.log('Editing message', messageData);\n}\n\n// Cancel editing and restore original text\nfunction cancelEdit(messageContent, originalText, restoreText = true) {\n  const editableContainer = messageContent.closest('.aim-editable-container');\n  if (editableContainer) {\n    // Move messageContent back to its original parent\n    editableContainer.parentNode.insertBefore(messageContent, editableContainer);\n    editableContainer.remove();\n  }\n\n  messageContent.setAttribute('contenteditable', 'false');\n  messageContent.removeAttribute('data-editing');\n  if (restoreText) {\n    messageContent.innerText = originalText;\n  }\n  messageContent.blur();\n\n  const messageElement = messageContent.closest('.aim-chat-message');\n  if (messageElement) {\n    messageElement.removeAttribute('data-original-text');\n  }\n\n  console.log('Edit cancelled');\n  this.bp.ignoreUIControlKeys = false;\n}\n\n// Save edited message\nasync function saveEdit(messageContent, messageData) {\n  const editableContainer = messageContent.closest('.aim-editable-container');\n  if (editableContainer) {\n    console.log('Editable container found', editableContainer);\n    // Move messageContent back to its original parent\n    // throws error:  Failed to execute 'insertBefore' on 'Node': The node to be removed is no longer a child of this node. Perhaps it was moved in a 'blur' event handler?\n    // is the blur event already removing this?\n    //editableContainer.parentNode.insertBefore(messageContent, editableContainer);\n    //editableContainer.remove();\n  }\n\n  const newMessageText = messageContent.innerText;\n  messageContent.setAttribute('contenteditable', 'false');\n  messageContent.removeAttribute('data-editing');\n  messageContent.blur();\n\n  const messageElement = messageContent.closest('.aim-chat-message');\n  if (messageElement) {\n    messageElement.removeAttribute('data-original-text');\n  }\n\n  console.log('Edit saved', newMessageText);\n\n  await buddypond.editInstantMessage({\n    from: messageData.from,\n    chatId: messageData.chatId,\n    uuid: messageData.uuid,\n    text: newMessageText,\n  });\n\n  // close the edit hint\n  cancelEdit.call(this, messageContent, null, false);\n}\n\n// Reply to a message\nfunction replyMessage(messageData, originalMessage) {\n  // Close any existing reply box\n  if (this.activeReplyBox) {\n    this.activeReplyBox.remove();\n    this.activeReplyBox = null;\n  }\n\n\n  this.bp.ignoreUIControlKeys = true;\n  this.bp.replyData = messageData; // Store reply data for message submission\n\n  // Create reply box\n  const replyBox = document.createElement('div');\n  replyBox.className = 'aim-reply-box';\n  replyBox.innerHTML = `\n    <span class=\"aim-reply-header\">Replying to ${messageData.from}</span>\n    <button class=\"aim-reply-cancel\" data-action=\"cancel-reply\">Cancel</button>\n  `;\n  //   <span class=\"aim-reply-text\">${messageData.text}</span>\n\n\n  // Insert reply box above .aim-message-sender\n  console.log(\"originalMessage\", originalMessage)\n  const messageSender = $(originalMessage).parent().parent().parent().parent().find('.aim-message-sender')[0];\n  console.log('REEE messageSender', messageSender);\n  if (!messageSender) {\n    console.error('No message sender found');\n    return;\n  }\n  messageSender.parentNode.insertBefore(replyBox, messageSender);\n\n  // Store active reply box\n  this.activeReplyBox = replyBox;\n  // this.activeReplyUUID = messageData.uuid;\n  // find the closet input named \"message_replyto\"\n  const replyInput = replyBox.closest('.chatWindow').querySelector('input[name=\"message_replyto\"]');\n  const messageTextInput = replyBox.closest('.chatWindow').querySelector('textarea[name=\"message_text\"]');\n  // set the value of the input to the messageData.uuid\n  // set the focus to the replyInput\n  if (replyInput) {\n    replyInput.value = messageData.uuid;\n  } else {\n    console.error('No reply input found');\n  }\n  if (messageTextInput) {\n    messageTextInput.focus();\n  } else {\n    console.error('No message text input found');\n  }\n\n  // Find the closest chatWindow and scroll to bottom\n  const chatWindow = originalMessage.closest('.chatWindow');\n  if (chatWindow) {\n    scrollToBottom(chatWindow);\n  }\n\n  const handleKeydown = (event) => {\n    if (event.key === 'Escape') {\n      //cancelEdit(messageContent, originalText);\n      cancelReply.call(this, replyBox);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (event.key === 'Enter') {\n      // saveEdit.call(this, messageContent, messageData);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  // Cleanup function for event listeners\n  const cleanupListeners = () => {\n    messageTextInput.removeEventListener('keydown', handleKeydown);\n    // messageTextInput.removeEventListener('blur', handleBlur);\n    this.bp.ignoreUIControlKeys = false;\n  };\n\n  messageTextInput.addEventListener('keydown', handleKeydown);\n\n  console.log('Reply mode activated', messageData);\n\n}\n\n// Cancel reply mode\nfunction cancelReply(replyBox) {\n  console.log('Cancel reply', replyBox);\n  console.log('aimReplyBox', replyBox);\n  if (replyBox) {\n\n    // clear out the .aim-replyto input value\n    const replyInput = replyBox.closest('.chatWindow').querySelector('input[name=\"message_replyto\"]');\n    if (replyInput) {\n      replyInput.value = '';\n    } else {\n      console.error('No reply input found');\n    }\n\n    replyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.ignoreUIControlKeys = false;\n    this.bp.replyData = null;\n  }\n\n  console.log('Reply cancelled');\n}\n\nfunction bindProfilePictureClick() {\n\n  document.addEventListener('click', (event) => {\n    let target = event.target;\n    // if target is svg and parent has class aim-profile-picture\n    // console.log(' bindProfilePictureClick target', target, target.tagName);\n    if ($(target).parents().hasClass('aim-profile-picture')) {\n      //if (target.classList.contains('.aim-avatar')) {\n      const buddyname = target.closest('.aim-chat-message').getAttribute('data-from');\n      console.log('Profile picture clicked', buddyname);\n\n      if (buddyname === this.bp.me) {\n        // opens profile edit page\n        this.bp.open('profile', { context: 'edit' });\n      } else {\n        // opens profile page\n        // this.bp.emit('profile::view', buddyname);\n        this.bp.open('user-profile', { context: buddyname });\n\n      }\n\n    }\n  });\n\n}","import createWebSocketClient from './createWebSocketClient.js';\n\nexport default class Client {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.config = {\n      host: \"\",\n      api: \"\",\n    };\n\n    this.api = buddypond;\n\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 999999; // Set to a high number for unlimited attempts\n    this.maxBackoffDelay = 10000; // 10 seconds\n    this.isIntentionallyClosed = false; // Flag to track intentional closure\n\n    return this;\n  }\n}\n\nClient.prototype.connect = async function connectBuddyListWs() {\n  console.log(\"Connecting to BuddyList WebSocket...\");\n  this.wsClient = await this.createWebSocketClient();\n  console.log(\"Connected to BuddyList WebSocket:\", this.wsClient);\n  // TODO: needs to return / await the connection event\n  // TODO: should emit buddylist::connected event ( not auth::qtokenid event )\n  this.bp.emit('buddylist::connected', this.wsClient);\n}\n\nClient.prototype.disconnect = async function disconnectBuddyListWs() {\n  console.log(\"Attempting disconnecting from BuddyList WebSocket...\");\n  if (this.wsClient) {\n    this.wsClient.closeConnection();\n    this.wsClient = null;\n    console.log(\"Disconnected from BuddyList WebSocket\");\n  } else {\n    console.log(\"No active WebSocket connection to disconnect\");\n  }\n}\n\nClient.prototype.addBuddy = async function addBuddy(buddyname, cb) {\n  console.log(\"NEW Calling addBuddy\", this, buddyname);\n\n  apiRequest('/buddylist/' + this.bp.me + '/add-buddy', 'POST', {\n    buddyname: buddyname\n  }, function (err, data) {\n    cb(err, data);\n  })\n}\n\nClient.prototype.receivedInstantMessage = async function receivedInstantMessage(buddyName, cb) {\n  this.wsClient.send(JSON.stringify({\n    action: \"receivedInstantMessage\",\n    buddyname: buddyName,\n  }));\n  cb(null);\n}\n\nClient.prototype.setStatus = async function setStatus(buddyName, update, cb = function noop () {}) {\n  // use wsClient to send the status update\n  console.log('calling setStatus', buddyName, update);\n  this.wsClient.send(JSON.stringify({\n    action: \"setStatus\",\n    buddyname: buddyName,\n    status: update.status,\n    profilePicture: update.profilePicture\n  }));\n  cb(null);\n};\n\nClient.prototype.createWebSocketClient = createWebSocketClient;\n\nfunction apiRequest(uri, method, data, cb) {\n  let url;\n\n  url = buddypond.endpoint + uri;\n\n  // console.log(\"making apiRequest\", url, method, data);\n\n  let headers = {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    \"X-Me\": buddypond.me, // ✅ Include X-Me header for user identification\n  };\n\n  if (buddypond.qtokenid) {\n    headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n  }\n\n  let body = method === \"POST\" ? JSON.stringify(data) : undefined;\n\n  // Prepare fetch options\n  const options = {\n    method: method,\n    headers: headers,\n    body: body,\n    // credentials: \"include\",  // ✅ Allow CORS with cookies/auth headers\n  };\n\n  // Handling fetch timeout manually\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 sec timeout\n\n  buddypond.incrementPackets(\"packetsSent\");\n  let perf = { start: new Date() };\n  // console.log(\"apiRequest\", url, options);\n  fetch(url, { ...options, signal: controller.signal })\n    .then(response => {\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        // Parse JSON for non-2xx responses\n        return response.json().then(errorData => {\n          // Create a custom error with status and JSON data\n          const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n          error.status = response.status;\n          error.data = errorData; // Attach JSON payload\n          throw error;\n        });\n      }\n      return response.json();\n    })\n    .then(data => {\n      buddypond.incrementPackets(\"packetsReceived\");\n      perf.end = new Date();\n      buddypond.addPerfTime(perf);\n      cb(null, data);\n    })\n    .catch(error => {\n      let msg = \"Fetch connection error. Retrying shortly.\";\n      if (error.name === \"AbortError\") {\n        msg = \"Fetch request timeout\";\n      } else if (error.message.includes(\"Payload Too Large\")) {\n        msg = \"File upload was too large. Try a smaller file.\";\n      } else if (error.status === 400 && error.data) {\n        // Use the JSON payload from the 400 error\n        msg = error.data.error || error.data.message || \"Invalid input. Please try again.\";\n      } else {\n        msg = error.message;\n      }\n      console.error(\"❌ API Request Failed:\", error);\n      cb(new Error(msg), error.data || null);\n    });\n}","// TODO: decouple Buddylist class from Message Class\n// TODO: formalize Message class\n\nimport processBuddylist from \"./lib/processProfile.js\";\nimport renderOrUpdateBuddyInBuddyList from \"./lib/renderOrUpdateBuddyInBuddyList.js\";\nimport createChatMessageElement from \"./lib/message/createChatMessageElement.js\";\nimport renderChatMessage from \"./lib/message/renderChatMessage.js\";\nimport renderBuddyRequests from \"./lib/renderBuddyRequests.js\";\nimport buddylistUIEvents from \"./lib/buddylistUIEvents.js\";\nimport openChatWindow from \"./lib/openChatWindow.js\";\nimport generateDefaultProfile from \"./lib/generateDefaultProfile.js\";\nimport requestDefaultCoinAllocations from \"./lib/requestDefaultCoinAllocations.js\";\nimport defaultChatWindowButtons from \"./lib/defaultChatWindowButtons.js\";\nimport sortBuddyList from \"./lib/sortBuddyList.js\";\n// buddylist context menu\nimport showContextMenu from \"./lib/showContextMenu.js\";\n// chat message context menu\nimport bindMessageContextMenu from \"./lib/message/bindMessageContextMenu.js\";\nimport createMessageContextMenu from \"./lib/message/createMessageContextMenu.js\";\nimport loadUserApps from \"./lib/loadUserApps.js\";\n\nimport sendMessageHandler from \"./lib/message/sendMessageHandler.js\";\nimport showCard from \"./lib/message/showCard.js\";\nimport scrollToBottom from \"./lib/message/scrollToBottom.js\";\n\n\n\n// new ws api\nimport Client from './lib/ws/Client.js';\n\n// TODO: why does client care about making UUID at all?\n// this is the responsibility of the server\n// TODO: remove uuid(), is most likely used for local render of message before server confirms ( which is removed atm )\nfunction uuid() {\n    return new Date().getTime();\n}\n\nexport default class BuddyList {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.data = {\n            processedMessages: {},\n            profileState: {\n                me: null,\n                status: null, // are these used?\n                profilePicture: null, // are these used?\n                updates: {}\n            }\n        };\n\n        this.defaultPond = 'Buddy';\n        this.subscribedBuddies = [];\n        this.subscribedPonds = [];\n        this.options = options;\n        this.showedHelp = false;\n\n        // alias global logout to the buddylist logout\n        // buddylist logout will handle both buddylist and message logout\n        this.bp.logout = this.logout.bind(this);\n\n        this.options.chatWindowButtons = this.options.chatWindowButtons || defaultChatWindowButtons(this.bp);\n\n        this.opened = false;\n        this.showingIsTyping = this.showingIsTyping || {};\n\n        this.activeMessageContextMenu = null;\n\n        this.faucetAttempts = 0;\n\n    }\n\n    async init() {\n        // Add event when user closes browser window or navigates away\n        window.addEventListener('beforeunload', (event) => {\n            // Show warning message\n            //event.preventDefault();\n            //event.returnValue = \"Are you sure you want to leave? Your status will be set to offline.\";\n            // Attempt to set status to offline (you may need a sync alternative)\n            // if page has quickly refreshed, client might be defined yet or connected\n            if (this.client) {\n                this.client.setStatus(this.bp.me, {\n                    status: 'offline'\n                }, function (err, re) {\n                    console.log('buddypond.setStatus', err, re);\n                });\n\n            }\n            //return event.returnValue;\n        });\n        // this.bp.load('ramblor');\n\n        await this.bp.appendScript('/v5/apps/based/buddylist/vendor/marked.min.js');\n\n        // TODO: we can load this lazier\n        this.bp.vendor.dicebear = await this.bp.importModule('/v5/apps/based/buddylist/vendor/dicebear.core.js', {}, false);\n        this.bp.vendor.dicebearAvatars = await this.bp.importModule('/v5/apps/based/buddylist/vendor/dicebear.identicon.js', {}, false);\n        //console.log('LOADED dicebear', this.dicebear);\n        //console.log('LOADED dicebearAvatars', this.dicebearAvatars);\n\n        this.bindMessageContextMenu();\n\n        // TODO: probably should remove this event and just use handleAuthSuccess handler?\n        /*\n        this.bp.on('auth::qtoken', 'connect-to-websocket-server', (qtoken) => {\n            //this.qtokenid = qtoken.qtokenid;\n            //this.api.qtokenid = this.qtokenid;\n            //this.api.me = qtoken.me;\n            //this.me = qtoken.me;\n            //this.bp.me = this.me;\n            //this.bp.qtokenid = this.qtokenid;\n            //this.client = new this.Client(bp);\n            //this.client.connect();\n        });\n        */\n\n    }\n\n    async open(config = { type: 'buddylist-profile' }) {\n        // buddylist supports (2) window types for bp.open('buddylist, { type: 'buddylist-profile' })\n        // 'buddylist-profile' - the default buddylist window\n        // 'buddylist-chat' - a chat window\n        // console.log('BuddyList open config', config)\n\n        if (typeof config.type !== 'string') {\n            config.type = 'buddylist-profile';\n        }\n\n        if (config.type === 'buddylist-profile') {\n\n            // TODO: have the ability to close and re-open the buddylist gracefully\n\n            if (this.opened) {\n                this.buddyListWindow.open();\n                this.bp.apps.ui.windowManager.focusWindow(this.buddyListWindow);\n                this.buddyListWindow.restore();\n                $('.loginForm input[name=\"username\"]').focus();\n                return 'buddylist already open';\n            }\n\n            this.opened = true;\n\n            const htmlStr = await this.bp.fetchHTMLFragment('/v5/apps/based/buddylist/buddylist.html');\n            this.messageTemplateString = await this.bp.fetchHTMLFragment('/v5/apps/based/buddylist/message.html');\n            this.bp.appendCSS('/v5/apps/based/buddylist/buddylist.css');\n            this.bp.appendCSS('/v5/apps/based/buddylist/messages.css');\n\n            // this.bp.apps.themes.applyTheme(this.bp.settings.active_theme);\n\n\n            // await this.bp.importModule('https://cdn.jsdelivr.net/npm/uuid@11.0.3/+esm', {}, false)\n\n            // loads affirmations messages via the affirmations app\n            let affirmations = await this.bp.importModule('affirmations');\n\n            const buddyListWindow = this.createBuddyListWindow();\n            buddyListWindow.content.appendChild(this.createHTMLContent(htmlStr));\n            this.buddyListWindow = buddyListWindow;\n            this.registerEventHandlers();\n            this.handleAuthentication();\n            this.buddylistUIEvents();\n            return 'hello buddyList';\n        }\n\n        // Remark: is this code still used? can we remove? handled by openChatWindow\n        // called from elsewhere?\n        if (config.type === 'pond') {\n            console.log('BuddyList open config.type is pond', config);\n            // the type of window is a chat window\n            // we *don't* need to re-render the buddylist-profile \n            this.openChatWindow(config);\n        }\n\n\n        if (config.type === 'chat') {\n            // the type of window is a chat window\n            // we *don't* need to re-render the buddylist-profile \n            this.openChatWindow(config);\n        }\n\n    }\n\n    createBuddyListWindow() {\n\n        // calculate right side of screen\n        let x = window.innerWidth - 350;\n\n        return this.bp.apps.ui.windowManager.createWindow({\n            app: 'buddylist',\n            type: 'buddylist-profile',\n            title: 'Buddy List',\n            icon: '/desktop/assets/images/icons/icon_profile_64.png',\n            id: 'buddyListWindow',\n            parent: this.bp.apps.ui.parent,\n            width: 250,\n            height: 500,\n            x: x,\n            y: 75,\n            onOpen: () => {\n\n                // Remark: We seeing a race condition where the input field is not focusable\n                // Most likely due to element being hidden / shown\n                // We hooked into window focus events and everything appeared OK in regards to conflicting focus() calls\n                // The issue is most likely due to the element being hidden\n                // This still doesn't work as intended since the element might actually be hidden\n                // TODO: find a better way to handle this\n                function focusOnInput() {\n                    const $loginInput = $('.loginForm input[name=\"username\"]');\n                    console.log('focusOnInput: Found elements:', $loginInput.length, $loginInput);\n\n                    // If the element doesn’t exist, retry after a delay\n                    if ($loginInput.length === 0) {\n                        console.log('Input not found, retrying in 100ms');\n                        setTimeout(focusOnInput, 100);\n                        return;\n                    }\n\n                    // Check if the element is focusable\n                    const input = $loginInput[0]; // Get the raw DOM element\n                    const isFocusable = input.offsetParent !== null && // Visible in the DOM\n                        !input.disabled && // Not disabled\n                        input.tabIndex !== -1 && // Focusable via tab\n                        getComputedStyle(input).visibility !== 'hidden' && // Not hidden\n                        getComputedStyle(input).display !== 'none'; // Not display: none\n\n                    if (!isFocusable) {\n                        console.log('Input is not focusable yet, retrying in 100ms', {\n                            isVisible: input.offsetParent !== null,\n                            isEnabled: !input.disabled,\n                            tabIndex: input.tabIndex,\n                            visibility: getComputedStyle(input).visibility,\n                            display: getComputedStyle(input).display\n                        });\n                        setTimeout(focusOnInput, 100);\n                        return;\n                    }\n\n                    // Attempt to focus and verify\n                    $loginInput.focus();\n                    setTimeout(() => {\n                        if (document.activeElement === input) {\n                            console.log('Focus successful on:', input);\n                        } else {\n                            console.warn('Focus failed, active element is:', document.activeElement);\n                            // Optionally retry\n                            setTimeout(focusOnInput, 100);\n                        }\n                    }, 0); // Check focus in the next tick\n                }\n                // focusOnInput();\n                // if we call this in console after load, it works\n                $('.loginForm input[name=\"username\"]').focus();\n\n            },\n            onClose: () => {\n                this.opened = false;\n            }\n        });\n\n    }\n\n    registerEventHandlers() {\n\n        this.bp.on('auth::qtoken', 'handle-auth-success', qtoken => this.handleAuthSuccess(qtoken));\n\n        // On auth success, load user specific apps ( TODO: should pull from DB )\n        this.bp.on('auth::qtoken', 'load-user-apps', qtoken => this.loadUserApps());\n\n        // Generate default profile files ( TODO: don't run this each time, keep track on profile state if users generated default profile )\n        this.bp.on('auth::qtoken', 'generate-default-profile-files', qtoken => {\n            // give the app a moment to load messages and open windows before generating default profile\n            // TODO: we could do this server-side instead\n            setTimeout(() => {\n                try {\n                    // alert('Generating default profile files');\n                    this.generateDefaultProfile(qtoken)\n\n                } catch (err) {\n                    console.error('generate-default-profile-files', err);\n                }\n            }, 6000);\n\n        });\n\n        this.bp.on('buddylist-websocket::connected', 'update-buddylist-connected', ws => {\n            // sets buddylist status to online\n            $('.onlineStatusSelect').val('online');\n            $('.loggedOut').flexHide();\n            $('.loggedIn').flexShow();\n\n            this.bp.apps.buddylist.client.wsClient.send(JSON.stringify({\n                action: 'getCoinBalance',\n                buddyname: this.bp.me,\n                qtokenid: this.bp.qtokenid,\n            }));\n\n            //$('.loggedIn').addClass('show');\n        });\n\n        // Remark: This has been removed in favor of letting windows manage their own state\n        // If the buddylist emits newMessages: true for a buddy, the window will open automatically calling getMessages\n        //this.bp.on('client::websocketConnected', 'get-latest-messages', ws => this.getLatestMessages());\n\n        this.bp.on('profile::buddylist', 'process-buddylist', ev => this.processBuddylist(ev.data));\n\n        this.bp.on('profile::buddy::in', 'render-or-update-buddy-in-buddylist', data => this.renderOrUpdateBuddyInBuddyList(data));\n        this.bp.on('profile::buddy::out', 'remove-buddy-from-buddylist', data => {\n            console.log('profile::buddy::out', data);\n            const buddyName = data.name;\n            let buddyListItem = $(`li[data-buddy=\"${buddyName}\"]`, '.buddylist');\n            console.log('buddyListItem', buddyListItem);\n            buddyListItem.remove();\n        });\n\n        this.bp.on('profile::fullBuddyList', 'render-or-update-buddy-in-buddylist', data => {\n            let buddylist = data.buddylist || {};\n            console.log('profile::buddy::full_profile', data);\n            for (let b in buddylist) {\n                let buddy = {\n                    name: b,\n                    profile: buddylist[b]\n                }\n                this.data.profileState = this.data.profileState || {};\n                this.data.profileState.buddylist = this.data.profileState.buddylist || {};\n\n                this.data.profileState.buddylist[b] = buddy.profile;\n                // console.log('renderOrUpdateBuddyInBuddyList', buddy);\n                this.renderOrUpdateBuddyInBuddyList(buddy);\n            }\n\n            if (buddylist[this.bp.me]) {\n                // for now...needs to change shape of server response to include root fields?\n                if (buddylist[this.bp.me].profile_picture) {\n                    console.log('setting profilePicture', buddylist[this.bp.me].profile_picture);\n                    this.data.profileState.profilePicture = buddylist[this.bp.me].profile_picture;\n                }\n                if (buddylist[this.bp.me].status) {\n                    console.log('setting status', buddylist[this.bp.me].status);\n                    this.data.profileState.status = buddylist[this.bp.me].status;\n                }\n            }\n\n            if (data.email) {\n                this.data.profileState.email = data.email;\n                // update the email input field\n                $('.buddy_email').val(data.email);\n            }\n\n            // iterate through all buddies and call renderOrUpdateBuddyInBuddylist\n\n        });\n\n\n\n\n        // Remark: removing buddy-in sound because Marak account is friends without everyone is is constantly triggering the sound\n        // We'll have to be smarter about when to play sounds and limit the amount of BUDDY-IN a single buddy can trigger\n        // total amount of buddy-in sounds per time window ( in case of 100s of buddies, etc )\n        // this.bp.on('profile::buddy::in', 'play-buddy-in-sound', data => bp.play('desktop/assets/audio/BUDDY-IN.wav'));\n\n        // Remark: buddy-out sound disabled until new client connection logic with backend is fully tested \n        //         ( was triggering too many sounds too often )\n        //this.bp.on('profile::buddy::out', 'play-buddy-out-sound', data => bp.play('desktop/assets/audio/BUDDY-OUT.wav'));\n        this.bp.on('buddy::message::processed', 'play-im-sound', data => {\n            if (data.noAlert) {\n                // don't play sound if noAlert is set by server\n                return;\n            }\n            // only play sounds for recent messages\n            let messageTime = new Date(data.ctime);\n            let now = new Date().getTime();\n            //console.log(\"messageTime\", messageTime);\n            //console.log(\"now\", new Date());\n            if (now - messageTime.getTime() < 5000) {\n                bp.play('desktop/assets/audio/IM.wav');\n            }\n        });\n\n        this.bp.on('profile::buddy::newmessage', 'open-chat-window', data => {\n            // open the new chat window only if not already open\n            let windowId = `buddy_message_-` + data.name;\n            let win = this.bp.apps.ui.windowManager.findWindow(windowId);\n            if (!win) {\n                this.openChatWindow(data)\n            }\n        });\n\n        this.bp.on('profile::buddy::newmessage', 'mark-messages-as-read', data => this.buddyReadNewMessages(data));\n\n        this.bp.on('profile::buddy::calling', 'start-call', data => {\n            // legacy BP API\n            // console.log(\"profile::buddy::calling\", data);\n            desktop.app.videochat.startCall(false, data.name, function (err, re) {\n                console.log('startCall callback', err, re);\n            });\n\n        });\n\n        // buddylist should not respond to auth::logout \n        // this.bp.on('auth::logout', 'logout', () => this.logout());\n\n        this.bp.on('profile::status', 'update-profile-status', status => {\n            if (status === 'signout') {\n                this.logout()\n            }\n            this.client.setStatus(this.bp.me, { status }, function (err, re) {\n                if (err) {\n                    console.error('error setting status', err);\n                }\n                // console.log('setStatus', err, re);\n            });\n            /*\n            buddypond.setStatus(this.bp.me, { status }, function(err, re){\n                // console.log('errrrr', err, re);\n            });\n            */\n\n        });\n\n        this.bp.on('buddy::messages', 'render-chat-message', data => this.handleChatMessages(data));\n        this.bp.on('buddy::sendMessage', 'send-buddy-message-to-server', data => this.sendMessageToServer(data));\n        // this.bp.on('pond::sendMessage', 'send-pond-message-to-server', data => this.sendPondMessageToServer(data));\n\n        //this.bp.on('buddy::sendMessage', 'process-buddymessage-bs', data => this.bp.apps.buddyscript.parseCommand(data.text));\n        //this.bp.on('pond::sendMessage', 'process-pondmessage-bs', data => this.bp.apps.buddyscript.parseCommand(data.text));\n\n        // remote isTyping event from server\n        // TODO: move to separate file\n        this.bp.on(\"buddy::isTyping\", \"show-is-typing-message\", message => {\n            // console.log('show-is-typing-message', message);\n            // TODO: move to separate file\n            // TODO: move this to a separate file / function\n            // Handling typing message display\n            if (message.isTyping === true) {\n                // check to see if message.from is the same as the current user\n                // if so, ignore the message\n                if (message.from === this.bp.me) {\n                    return;\n                }\n\n                // check the ctime of the message\n                // console.log(\"isTyping message\", message);\n                let messageTime = new Date(message.ctime);\n                // console.log(\"messageTime\", messageTime.getTime());\n                let now = new Date().getTime();\n                let windowId;\n                if (message.type === 'buddy') {\n                    if (message.to === this.bp.me) {\n                        windowId = `buddy_message_-${message.from}`;\n                    } else {\n                        windowId = `buddy_message_-${message.to}`;\n                    }\n                }\n\n                if (message.type === 'pond') {\n                    windowId = `pond_message_-${message.to}`;\n                }\n\n                let chatWindow = this.bp.apps.ui.windowManager.findWindow(windowId);\n                // don't process isTyping messages over 3 seconds old\n                if (now - messageTime.getTime() > 3000) {\n                    // console.log(\"isTyping message too old\", message);\n                    // return;\n                }\n\n                let typingIndicatorId = `typing-${message.from}`;\n                let typingMessage = `${message.from} is typing...`;\n\n                // Check if the typing indicator for this user already exists\n                let typingIndicator = $(`.aim-typing span[data-user=\"${message.from}\"]`, chatWindow.content);\n                // console.log('typingIndicator', typingIndicator);\n                // console.log('typingMessage', typingMessage);\n                if (typingIndicator.length === 0) {\n                    // If it does not exist, create a new span and append it to the .aim-typing area\n                    typingIndicator = $('<span></span>')\n                        .attr('data-user', message.from)\n                        .text(typingMessage)\n                        .appendTo($('.aim-typing', chatWindow.content));\n                } else {\n                    // If it exists, just update the text\n                    typingIndicator.text(typingMessage);\n                }\n\n                // Clear any existing timeout for this user\n                // console.log(\"CLEARING OLD TIMER\")\n                if (this.showingIsTyping[typingIndicatorId]) {\n                    clearTimeout(this.showingIsTyping[typingIndicatorId]);\n                }\n\n                // console.log(\"CREATING NEW TIMER\")\n                // Set a new timeout to remove the typing message after very short pause\n                // since there already is a delay from the server\n                this.showingIsTyping[typingIndicatorId] = setTimeout(() => {\n                    typingIndicator.remove();\n                }, 500);\n                return;\n            }\n        })\n\n        // local typing event TOOD: better name\n        // when buddy is typing send a message to the ws server\n        this.bp.on('buddy::typing', 'send-typing-message-to-server', data => {\n            // we don't want to spam typing messages, so we will only send a message every 2 seconds\n            this.lastTypingMessage = this.lastTypingMessage || 0;\n            if (new Date().getTime() - this.lastTypingMessage < 2000) {\n                // return;\n            }\n            this.lastTypingMessage = new Date().getTime();\n            // console.log('buddy::typing', data);\n\n            let chatId = '';\n\n            if (data.type === 'buddy') {\n                let buddyNames = [data.from, data.to].sort();\n                chatId = 'buddy/' + buddyNames.join('/');\n            }\n\n            if (data.type === 'pond') {\n                chatId = 'pond/' + data.to;\n            }\n\n            bp.apps.client.sendWsMessage(chatId, {\n                action: 'send',\n                chatId: chatId,\n                buddyname: buddypond.me,\n                qtokenid: buddypond.qtokenid,\n                message: {\n                    ...data,\n                    chatId,\n                    isTyping: true\n                }\n            });\n            /*\n            if (data.type === 'pond') {\n                this.sendPondMessageToServer(data, false);\n            } else {\n                this.sendMessageToServer(data, false);\n            }\n            */\n            // this.bp.apps.client.sendMessage({ id: uuid(), method: 'sendMessage', data: data });\n\n\n        });\n\n        // TODO: this handler could instead bind to bp.apps.system.messages\n        // a System allows for sending and receiving messages to a sequence of handlers\n        /*\n        */\n        // the buddylist registers with the \"messages\" system\n        // in order to receive messages from other systems\n        /*\n        // this will get or create a system called \"messages\"\n        // the send and recieve handlers should get ordered in the order they are registered\n        // unless the order is specified, which should put the system in the correct order by number values and then undefined last\n        bp.apps.system.registerSystem('messages', {\n            registrant: 'buddylist',\n            send: {\n                // since send is missing name and handler, it will be ignored\n            },\n            receive: {\n                name: 'buddylist-processes-messages',\n                order: 2, // we can stack multiple systems in order\n                handler: (message) => {\n                    console.log('buddylist-processes-messages', message);\n                }\n            }\n        });\n        // this event can be anywhere, doesn't have to be in the buddylist\n        // prob should be though :-D\n        // by sending the events to the messages system, they will \n        // go through the processing chain ( if any exists for that system )\n        // and then we recieved via the receive handler\n        this.bp.on(\n            'buddy::messages',\n            'send-messages-to-messages-system',\n            data => this.bp.apps.systems.messages.send({\n                name: 'buddylist-processes-messages',\n                data: data\n        }));\n       // example of another app which filters messages\n\n        bp.apps.system.registerSystem('messages', {\n            registrant: 'shorten-text',\n            send: {\n                // since send is missing name and handler, it will be ignored\n            },\n            receive: {\n                name: 'shorten-text',\n                order: 1, // we can stack multiple systems in order\n                handler: (message) => {\n                    console.log('shorten text', message);\n                    return message.text.substr(0, 1);\n                }\n            }\n        });\n        */\n        this.bp.on('buddylist-websocket::reward', 'update-local-coin-balance', data => {\n            // TODO: move this into rewards app\n            //$('#menu-bar-coin-balance').text(data.message.newBalance);\n            if (!data.success) {\n                console.log(data.message);\n                return;\n            }\n            window.rollToNumber($('#menu-bar-coin-balance'), data.message.newBalance)\n\n            // TODO: better condition to check if portfolio app is loaded and ready\n            if (this.bp.apps.portfolio && this.bp.apps.portfolio.portfolioWindow && this.bp.apps.portfolio.portfolioWindow.content && this.bp.apps.portfolio.portfolioData) {\n\n                this.bp.apps.portfolio.updateCoinRow(data.message.symbol, {\n                    symbol: data.message.symbol,\n                    amount: data.message.newBalance,\n                    available: data.message.newBalance,\n                    price: 0.001,\n                    cost: 0.001 * data.message.newBalance\n                });\n\n                let coinSendSelector = $('#coin-send-name');\n                let coinSendBalance = $('#current-balance');\n\n                // if coinSendSelector value is \"GBP\"\n                if (coinSendSelector.val() === 'GBP') {\n                    // set the coin balance to the new balance\n                    // window.rollToNumber(coinSendBalance, data.message.newBalance)\n                    const formattedValue = data.message.newBalance.toLocaleString('en-US');\n\n                    coinSendBalance.text(formattedValue);\n                }\n            }\n        });\n\n        this.bp.on('buddylist-websocket::coinBalance', 'update-local-coin-balance', async (data) => {\n            console.log('buddylist-websocket::coinBalance', data);\n            if (typeof data.message.balance === 'number') {\n                window.rollToNumber($('#menu-bar-coin-balance'), data.message.balance)\n            } else {\n                this.faucetAttempts++;\n                // should work on 1, adds safe guard in case service is down\n                // we don't want to spam the faucet service or getCoinBalance\n                if (this.faucetAttempts < 3) {\n                    // request initial coin balance, null indicates no portfolio entry for GBP\n                    // if no portfolio entry, request the default coin allocations\n                    await this.requestDefaultCoinAllocations();\n                    // make another request to get the coin balance\n                    this.bp.apps.buddylist.client.wsClient.send(JSON.stringify({\n                        action: 'getCoinBalance',\n                        buddyname: this.bp.me,\n                        qtokenid: this.bp.qtokenid,\n                    }));\n                } else {\n                    console.warn('BuddyList: Too many faucet attempts, not requesting balance again this session');\n                }\n\n            }\n\n        })\n    }\n\n    createHTMLContent(htmlStr) {\n        const html = document.createElement('div');\n        html.innerHTML = htmlStr;\n        // $('.loginForm input[name=\"username\"]').focus();\n        return html;\n    }\n\n    getLatestMessages() {\n        // This can also be called when closing a chat window to let the server\n        // know we are no longer interested in messages from that buddy or pond\n        const data = {\n            buddyname: this.subscribedBuddies.join(','),\n            pondname: this.subscribedPonds.join(','),\n            me: this.bp.me\n        };\n        this.bp.apps.client.sendMessage({ id: uuid(), method: 'getMessages', data: data });\n    }\n\n    buddyReadNewMessages(data) {\n        this.bp.log(\"BuddyReadNewMessages\", data);\n        const buddyName = data.name;\n    }\n\n    async handleChatMessages(data) {\n        // console.log('handleChatMessages', data);\n        let windowsToUpdate = new Set();\n        for (const message of data.result.messages) {\n            try {\n                // check to see if we have newMessages in local profile for message.from\n                // if so, send buddypond.receiveInstantMessage(message.from)\n                if (message.from && this.data.profileState && this.data.profileState.buddylist && this.data.profileState.buddylist[message.from] && this.data.profileState.buddylist[message.from].newMessages) {\n                    // console.log(\"SENDING READ NEWMESSAGES ALERT\");\n                    this.data.profileState.buddylist[message.from].newMessages = false;\n                    this.client.receivedInstantMessage(message.from, function (err, re) {\n                        console.log('receivedInstantMessage', err, re);\n                    });\n                }\n                // return the chatWindow which the message was rendered in\n                let chatWindow = await this.renderChatMessage(message);\n                windowsToUpdate.add(chatWindow);\n\n            } catch (err) {\n                console.log('error rendering chat message', message, err)\n            }\n        }\n        for (const chatWindow of windowsToUpdate) {\n            if (chatWindow && chatWindow.content) {\n                this.scrollToBottom(chatWindow.content);\n            }\n        }\n\n        // show help card if local storage does not have the card shown\n        // TODO: remove false\n        // if (true || !this.bp.settings['viewed-help-card']) {\n        if (!this.showedHelp) {\n            let chatWindow = windowsToUpdate.values().next().value;\n            this.showCard({\n                chatWindow,\n                cardName: 'help'\n            });\n            // console.log('showing help card', chatWindow);\n            this.showedHelp = true;\n        }\n\n        /*\n        if (!localStorage.getItem('buddylist-help-card-shown')) {\n            localStorage.setItem('buddylist-help-card-shown', true);\n        }\n        */\n\n    }\n\n    sendMessageToServer(data, emitLocal = false) {\n        this.bp.log('buddy::sendMessage', data);\n        data.uuid = uuid();\n\n        if (data.text === '') {\n            console.log('will not sendMessageToServer: no text');\n            return;\n        }\n\n        // so confusing client.sendMessage....maybe should be sendWorkerMessage...dunno\n        if (data.type === 'pond') {\n            console.log('sendMessageToServer', data);\n            buddypond.pondSendMessage(data.to, data.text, data, function (err, result) {\n                console.log('pondSendMessage', err, result)\n                console.log(err, result)\n            })\n\n        }\n        if (data.type === 'buddy') {\n            console.log('sendMessageToServer', data);\n            buddypond.sendMessage(data.to, data.text, data, function (err, result) {\n                console.log('pondSendMessage', err, result)\n                console.log(err, result)\n            });\n        }\n        /*\n        this.bp.apps.client.sendMessage({ id: data.uuid, method: 'sendMessage', data: data });\n        data.name = data.to;\n        if (emitLocal) {\n            data.ctime = new Date().getTime();\n            if (this.data.profileState) {\n                data.location = this.data.profileState.location || 'outer space';\n            }\n            this.renderChatMessage(data);\n        }\n        */\n    }\n\n    /*\n    sendPondMessageToServer(data, emitLocal = false) {\n        data.type = 'pond';\n        this.bp.log('pond::sendMessage', data);\n        data.uuid = uuid();\n        data.pondname = data.to;\n        // console.log('sendPondMessageToServer', data);\n        this.bp.apps.client.sendMessage({ id: data.uuid, method: 'sendMessage', data: data });\n        if (emitLocal) {\n            data.ctime = new Date().getTime();\n            if (this.data.profileState) {\n                data.location = this.data.profileState.location || 'outer space';\n            }\n            this.renderChatMessage(data);\n        }\n    }\n    */\n\n    // called on open to verify token ( if exists )\n    // signup / login logic is in buddylistUIEvents.js\n    handleAuthentication() {\n        const api = this.bp.apps.client.api;\n        const localToken = localStorage.getItem('qtokenid');\n        const me = localStorage.getItem('me');\n        if (!localToken) return;\n        // console.log('localToken', localToken, me);\n        api.verifyToken(me, localToken, (err, data) => {\n            if (err) {\n                console.error('Failed to verify token:', err);\n                $('.password').show();\n                $('.loginForm .error').text('Failed to authenticate buddy');\n                return;\n            }\n            console.log('verified token', data);\n            if (data.success) {\n                // A pre-existing token was found and verified, emit the auth event\n                this.bp.emit('auth::qtoken', { qtokenid: localToken, me: me, hasPassword: data.user.hasPassword });\n                $('.loggedIn').flexShow();\n                $('.loggedOut').flexHide();\n                if (!data.user.hasPassword) {\n                    this.bp.open('pincode');\n                }\n\n            } else {\n                $('.loginForm .error').text('Failed to authenticate buddy');\n                $('.password').show();\n                console.error('Failed to authenticate buddy:');\n            }\n        });\n\n    }\n\n    // TODO: this event should only set the qtokenid and local settings?\n    // it could open the chat window?\n    // maybe also could connect to the websocket server for buddylist?\n    // opening the default window initializes the messages client\n    async handleAuthSuccess(qtoken) {\n        // console.log('handleAuthSuccess', qtoken);\n        if (this.client) {\n            console.error('buddylist websocket client already exists and has not been closed. This should not happen');\n            return;\n        }\n\n        this.bp.me = qtoken.me;\n        this.bp.qtokenid = qtoken.qtokenid;\n        this.data.profileState = this.data.profileState || {};\n        this.data.profileState.me = this.bp.me;\n\n        $('#me_title').html('Welcome ' + this.bp.me);\n\n        // TODO: connect-to-websocket-server should happen here\n        // plays welcome message\n        this.bp.play('desktop/assets/audio/WELCOME.mp3', { tryHard: Infinity });\n\n\n        // this will eventually trigger the buddylist::connected event\n        this.client = new this.Client(bp);\n        let connected = await this.client.connect();\n\n        if (!qtoken.hasPassword){\n            // if the user does not have a password, open the pincode window\n            this.bp.open('pincode');\n        }\n\n        // wait until buddylist is connected and then opens default chat window if defined\n        if (this.defaultPond) {\n            setTimeout(() => {\n                let chatWindow = this.openChatWindow({ pondname: this.defaultPond });\n            }, 100);\n        }\n\n    }\n}\n\nBuddyList.prototype.renderOrUpdateBuddyInBuddyList = renderOrUpdateBuddyInBuddyList;\nBuddyList.prototype.createChatMessageElement = createChatMessageElement;\nBuddyList.prototype.renderChatMessage = renderChatMessage;\nBuddyList.prototype.renderBuddyRequests = renderBuddyRequests;\nBuddyList.prototype.processBuddylist = processBuddylist;\nBuddyList.prototype.buddylistUIEvents = buddylistUIEvents;\nBuddyList.prototype.openChatWindow = openChatWindow;\nBuddyList.prototype.generateDefaultProfile = generateDefaultProfile;\nBuddyList.prototype.requestDefaultCoinAllocations = requestDefaultCoinAllocations;\nBuddyList.prototype.sortBuddyList = sortBuddyList;\nBuddyList.prototype.showContextMenu = showContextMenu;\n\nBuddyList.prototype.createMessageContextMenu = createMessageContextMenu;\nBuddyList.prototype.bindMessageContextMenu = bindMessageContextMenu;\nBuddyList.prototype.loadUserApps = loadUserApps;\nBuddyList.prototype.sendMessageHandler = sendMessageHandler;\nBuddyList.prototype.showCard = showCard;\nBuddyList.prototype.scrollToBottom = scrollToBottom;\n\n\n// new API\nBuddyList.prototype.Client = Client;\n\n\nBuddyList.prototype.logout = function () {\n    // set status to online\n\n    $('.loginButton').prop('disabled', false);\n    $('.loginButton').removeClass('disabled');\n    $('#menu-bar-coin-balance').text('0');\n\n    this.client.setStatus(this.bp.me, {\n        status: 'offline'\n    }, (err, re) => {\n        console.log('buddypond.setStatus', err, re);\n        // close any open chat windows\n        $('.chatWindow').remove(); // maybe, they could stay open as well\n        // disconnect the client\n        // this.bp.apps.client.logout();\n        $('.password').val('');\n        $('.loggedIn').flexHide();\n        $('.loggedOut').flexShow();\n\n        this.data.profileState = null;\n        this.bp.play('desktop/assets/audio/GOODBYE.wav');\n        // TODO can we now remove bp.apps.client.logout()?\n        this.bp.apps.client.logout();\n        this.client.disconnect();\n        this.client = null;\n        // clear out the local .data scope\n        this.data = {\n            processedMessages: {},\n            profileState: {\n            },\n            activeUsersInContext: {},\n            activeUsers: [],\n            activePonds: []\n        };\n        // empty the buddylist\n        $('.buddylist').empty();\n\n        // hide any .dialog\n        $('.dialog').remove();\n\n    });\n}","// Remark: createWebSocketClient is a prototype method of Client, as Client.createWebSocketClient()\nexport default function createWebSocketClient() {\n  // Track reconnect state\n\n  console.log(`Creating WebSocket client for buddylist`);\n  return new Promise((resolve, reject) => {\n    const wsClient = new WebSocket(\n      `${buddypond.buddylistWsEndpoint}?me=${buddypond.me}&qtokenid=${buddypond.qtokenid}`\n    );\n\n    // Handle open event\n    const handleOpen = () => {\n      console.log('WebSocket connection opened to buddylist');\n      this.reconnectAttempts = 0; // Reset reconnect attempts\n\n      this.wsClient = wsClient; // Store the WebSocket instance\n\n      wsClient.send(\n        JSON.stringify({\n          action: 'getProfile',\n          buddyname: buddypond.me,\n          qtokenid: buddypond.qtokenid,\n        })\n      );\n      // Emit connected event\n      bp.emit('buddylist-websocket::connected');\n\n      /*\n      this.updateStatusInterval = setInterval(() => {\n        let status = 'online'; // Default status\n        try {\n          status = bp.apps.buddylist.data.profileState.status;\n        } catch (error) {\n          console.log('Error retrieving profile state status for updateStatusInterval:', error);\n        }\n        // console.log('Sending status update to buddylist:', status);\n        this.bp.emit('profile::status', status);\n      }, 1000 * 60 * 5); // Refresh status every 5 minutes\n      */  \n      /*\n      this.pingInterval = setInterval(() => {\n        if (wsClient.readyState === WebSocket.OPEN) {\n          wsClient.send(JSON.stringify({ action: 'ping' }));\n        }\n      }, 10000);\n      */\n      resolve(wsClient); // Resolve with the WebSocket instance\n    };\n\n    // Handle message event\n    // TODO: move to a separate function\n    const handleMessage = (event) => {\n      try {\n        const parseData = JSON.parse(event.data);\n        // console.log('Got back from server:', parseData);\n        switch (parseData.action) {\n          case 'buddy_added':\n            // console.log('buddy_added WebSocket message received:', parseData);\n            bp.emit('profile::buddy::in', {\n              name: parseData.buddyname,\n              profile: parseData.profile || { ctime: new Date().getTime(), dtime: 0 },\n            });\n            break;\n\n          case 'getRemoteProfiles':\n            console.log('getRemoteProfiles message received:', parseData);\n            if (parseData.profile && parseData.profile.buddylist) {\n              bp.emit('profile::fullBuddyList', parseData.profile);\n            } else {\n              console.error('getProfile message received but no buddylist:', parseData);\n            }\n\n            break;\n          case 'getProfile':\n            console.log('getProfile message received:', parseData);\n\n            if (parseData.profile && parseData.profile.buddylist) {\n              bp.emit('profile::fullBuddyList', parseData.profile);\n            } else {\n              console.error('getProfile message received but no buddylist:', parseData);\n            }\n            // TODO: after getting profile, create a new call that wil fetch all buddies DO's to get\n            // most updated state ( a reverse of setStatus() call )\n            // this will ensure we always get the most recent updates for all buddies in case our DO\n            // wasn't updated or missed an update or setStatus() truncation limit for users not recently active\n            // send a message now to getRemoteProfiles\n            console.log('Requesting remote profiles for all buddies');\n            // After getting the initial profile ( single DO state, quick load ),\n            // we can request remote profiles for all buddies\n            // This will fetch all buddies DO's and get their most recent state\n            // This is useful for getting the most recent updates for all buddies in case our DO\n            // wasn't updated or missed an update or setStatus() truncation limit for users not recently active\n            wsClient.send(\n              JSON.stringify({\n                action: 'getRemoteProfiles',\n                buddyname: buddypond.me,\n                qtokenid: buddypond.qtokenid,\n              })\n            );\n            break;\n          case 'ping':\n            // console.log('pong message received:', parseData);\n            break;\n          case 'buddy_removed':\n            // alert('buddy_removed WebSocket message received:', parseData);\n            console.log('buddy_removed WebSocket message received:', parseData);\n            this.bp.emit('profile::buddy::out', { name: parseData.buddyname });\n            break;\n          case 'rewards:response':\n            // console.log('rewards:response message received:', parseData);\n            if (parseData.success) {\n              bp.emit('buddylist-websocket::reward', {\n                success: true,\n                message: parseData.message,\n                reward: parseData.reward,\n              });\n\n            } else {\n              bp.emit('buddylist-websocket::reward', {\n                success: false,\n                message: parseData.message,\n              });\n            }\n            break;\n          case 'getCoinBalance':\n            console.log('getCoinBalance message received:', parseData);\n            if (parseData.success) {\n              bp.emit('buddylist-websocket::coinBalance', parseData);\n            } else {\n              bp.emit('buddylist-websocket::coinBalance', parseData);\n            }\n            break;\n          default:\n            console.log('Last message:', event.data);\n            console.warn('Unknown action received:', parseData);\n            break;\n        }\n      } catch (error) {\n        console.log('Last message:', event.data);\n        console.error('Error parsing WebSocket message:', error);\n        bp.emit('buddylist-websocket::error', { error: 'Message parsing failed' });\n      }\n    };\n\n    // Handle close event\n    const handleClose = (event) => {\n      console.log('WebSocket connection closed to', 'buddylist', 'Code:', event.code, 'Reason:', event.reason);\n\n      // clearInterval(this.pingInterval);\n      clearInterval(this.updateStatusInterval);\n\n      bp.emit('buddylist-websocket::disconnected', { code: event.code, reason: event.reason });\n\n      // Reconnect only if not intentionally closed\n      if (!this.isIntentionallyClosed && this.reconnectAttempts < this.maxReconnectAttempts) {\n        const delay = Math.min(\n          200 * Math.pow(2, this.reconnectAttempts) * (1 + 0.1 * Math.random()), // Exponential backoff with jitter\n          this.maxBackoffDelay\n        );\n        console.log(`Scheduling reconnect attempt ${this.reconnectAttempts + 1} for buddylist in ${delay}ms`);\n        setTimeout(async () => {\n          this.reconnectAttempts++;\n          bp.emit('buddylist-websocket::reconnecting', { attempt: this.reconnectAttempts });\n          try {\n            const newWsClient = await this.createWebSocketClient(); // Attempt to reconnect\n            // Update event listeners to the new WebSocket instance\n            Object.assign(wsClient, newWsClient);\n            this.wsClient = newWsClient;\n          } catch (error) {\n            console.error('Reconnect failed:', error);\n          }\n        }, delay);\n      } else if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n        console.error(`Max reconnect attempts (${this.maxReconnectAttempts}) reached for buddylist. Giving up.`);\n        bp.emit('buddylist-websocket::reconnect_failed');\n      }\n    };\n\n    // Handle error event\n    const handleError = (event) => {\n      console.error('WebSocket error buddylist', event);\n      bp.emit('buddylist-websocket::error', { error: 'WebSocket error' });\n      // Reject the promise if connection hasn't opened yet\n      if (wsClient.readyState !== WebSocket.OPEN) {\n        reject(new Error('WebSocket connection failed'));\n      }\n      // Close to trigger reconnect logic in handleClose\n      wsClient.close(1000, 'Error occurred');\n    };\n\n    // Add event listeners\n    wsClient.addEventListener('open', handleOpen.bind(this));\n    wsClient.addEventListener('message', handleMessage.bind(this));\n    wsClient.addEventListener('close', handleClose.bind(this));\n    wsClient.addEventListener('error', handleError.bind(this));\n\n    // Method to intentionally close the WebSocket\n    wsClient.closeConnection = () => {\n      this.isIntentionallyClosed = true;\n      console.log(`Intentionally closing WebSocket for buddylist`);\n      wsClient.close(1000, 'Normal closure');\n      // Remove event listeners to prevent memory leaks\n      wsClient.removeEventListener('open', handleOpen);\n      wsClient.removeEventListener('message', handleMessage);\n      wsClient.removeEventListener('close', handleClose);\n      wsClient.removeEventListener('error', handleError);\n      bp.emit('buddylist-websocket::closed');\n    };\n  });\n}","export default function defaultChatWindowButtons(bp) {\n\n    return [\n\n        {\n            text: 'Image Search',\n            image: 'desktop/assets/images/icons/icon_image-search_64.png',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // Open the image search window\n                bp.open('image-search', {\n                    output: type || 'buddy',\n                    context: context,\n                    provider: 'giphy'\n                });\n                return false;\n            }\n        },\n\n        {\n            text: 'BuddySound',\n            image: 'desktop/assets/images/icons/icon_soundrecorder_64.png',\n            onclick: (ev) => {\n                console.log('BuddySound button clicked', ev);\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                bp.open('soundrecorder', { type: type || 'buddy', output: type || 'buddy', context: context });\n\n            }\n        },\n        /* TOOD: add gifstudio back ( with better UX and features )\n        {\n            text: 'BuddyGif',\n            image: 'desktop/assets/images/icons/icon_gifstudio_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                JQDX.openWindow('gifstudio', { type: type || 'buddy', context: context, output: type || 'buddy' });\n            }\n        },\n        */\n        {\n            text: 'BuddyPaint',\n            image: 'desktop/assets/images/icons/icon_paint_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                bp.open('paint', { type: type || 'buddy', output: type || 'buddy', context: context });\n            }\n        },\n        {\n            text: 'BuddySnap',\n            image: 'desktop/assets/images/icons/svg/1f4f7.svg',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('mirror', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('camera', { type: type || 'buddy', output: type || 'buddy', context: context });\n            }\n        },\n        {\n            text: 'BuddyEmoji',\n            image: 'desktop/assets/images/icons/svg/1f600.svg',\n            className: 'emojiPicker',\n            onclick: async (ev) => {\n                // EmojiPicker lazy load is a special case\n                // All other BuddyPond deps / lazy imports with await bp.load() are fine to work as expected\n                // We usually don't need to check existence of the app before loading it\n                // For EmojiPicker we need to recall the original click event with same parameters\n                // This could be resolved by using a new EmojiPicker library or patching the current one\n                if (!bp.apps['emoji-picker']) { // this is not a normal practice for user in await bp.load()\n                    await bp.load('emoji-picker');\n                    // Create a new MouseEvent with the original event's coordinates\n                    const newEvent = new MouseEvent('click', {\n                        bubbles: true,\n                        cancelable: true,\n                        clientX: ev.clientX, // Preserve original x coordinate\n                        clientY: ev.clientY, // Preserve original y coordinate\n                        // Include other relevant properties if needed\n                        button: ev.button,\n                        target: ev.target\n                    });\n                    // Dispatch the new event on the original target\n                    ev.target.dispatchEvent(newEvent);\n                    return;\n                }\n                // now that the emoji-picker is loaded, we can open it as normal\n\n                // focus on the .emojiPicker input\n                $('.emojiPicker').focus();\n\n                // we need to add class activeTextArea to the active textarea\n                // so we can append the emoji to the correct textarea\n                // remove the activeTextArea from all other textareas\n                $('.activeTextArea').removeClass('activeTextArea');\n\n                let messageControls = $(ev.target).closest('.aim-message-controls');\n                // find the closest textarea to the ev.target\n                $('.aim-input', messageControls).addClass('activeTextArea');\n\n            }\n        },\n        {\n            text: 'BuddyCall',\n            type: 'buddy-only',\n            image: 'desktop/assets/images/icons/icon_phone_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('mirror', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('videochat', { type: type || 'buddy', output: type || 'buddy', context: context, isHost: true });\n\n                // should send message to buddy that will open the videocall window on receiving end\n                let message = {\n                    from: bp.me,\n                    to: context,\n                    text: 'Let\\'s have a video call',\n                    type: 'buddy',\n                    card: {\n                        type: 'videochat'\n                    }\n                }\n\n\n                console.log('BuddyCall message', message);\n                // send message to buddy\n                buddypond.sendCardMessage(message, function (err, response) {\n                    if (err) {\n                        console.error('Error sending message', err);\n                    } else {\n                        console.log('Message sent', response);\n                    }\n                });\n\n\n            }\n        },\n        // spellbook\n        {\n            text: 'Spellbook',\n            image: 'desktop/assets/images/icons/icon_spellbook_64.png',\n            onclick: (ev) => {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('spellbook', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('spellbook', { type: type || 'buddy', output: type || 'buddy', context: context });\n            }\n        },\n        // buddycoins\n        {\n            text: 'BuddyCoins',\n            image: 'desktop/assets/images/icons/icon_coin_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('coin', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('portfolio', { type: type || 'buddy', output: context, context: '#portfolio-transfer' });\n            }\n        },\n        /* // TODO: add Dictate with improved UX */\n        {\n            text: 'Dictate',\n            env: 'desktop-only',\n            image: 'desktop/assets/images/icons/icon_dictate_64.png',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                let targetEl = $('.aim-input', $(ev.target).parent().parent());\n                await bp.open('dictate', { type: type || 'buddy', output: type || 'buddy', context: context, targetEl: targetEl });\n            }\n        },\n        {\n            text: 'BuddyHelp',\n            image: 'desktop/assets/images/icons/icon_help_64.png',\n            align: 'right',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // TODO: better way to get the windowId\n                let windowIdPrefix = type === 'pond' ? 'pond_message_-' : 'buddy_message_-';\n                let windowId = windowIdPrefix + context;\n                // console.log('opening chat window ', windowId)\n                let chatWindow = bp.apps.ui.windowManager.findWindow(windowId);\n                console.log('chatWindow', chatWindow);\n                // bp.apps.buddylist.showCard({ chatWindow, cardName: 'help' });\n\n                let aimInput = chatWindow.content.querySelector('.aim-input');\n                let sendButton = chatWindow.content.querySelector('.aim-send-btn');\n                if (aimInput) {\n                    aimInput.value = '/help';\n                    aimInput.dispatchEvent(new Event('input', { bubbles: true })); // Trigger input event\n                }\n                if (sendButton) {\n                    sendButton.click(); // Simulate button click\n                }\n\n\n\n\n            }\n        }\n    ]\n}","export default function renderGeoFlag(message) {\n    if (message.location === 'outer space' || !message.location) {\n      // Set Antarctica to the default flag when the location is 'outer space'\n      message.location = 'AQ';\n    }\n  \n    if (!message.location || message.location === 'outer space') {\n      return document.createElement('span');  // Return an empty span if no flag should be displayed\n    }\n  \n    // Create an image element for the flag\n    let img = document.createElement('img');\n    img.className = 'geoFlag';\n    img.src = `desktop/assets/geo-flags/flags/4x3/${message.location.toLowerCase()}.svg`;\n    return img;\n  }\n  ","// Function to remove outer <p> tags\nexport default function parseMarkdownWithoutPTags(markdown) {\n  if (!markdown) return ''; // empty text\n  \n    // Supported colors and styles\n    const supportedColors = ['red', 'blue', 'green', 'yellow', 'purple', 'orange', 'black', 'white', 'gray', 'cyan', 'magenta', 'pink'];\n    const supportedStyles = ['bold', 'italic', 'underline', 'strike', 'blink', 'reverse', 'hidden', 'dim', 'rainbow'];\n    \n    // Custom renderer for links to add target=\"_blank\"\n    const linkExtension = {\n      name: 'link',\n      level: 'inline',\n      renderer(token) {\n        // Ensure href is properly encoded\n        const href = token.href.replace(/\"/g, '&quot;');\n        // Add target=\"_blank\" and rel=\"noopener\" for security\n        return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener\">${this.parser.parseInline(token.tokens)}</a>`;\n      }\n    };\n\n\n    const styleExtension = {\n      name: 'style',\n      level: 'inline',\n    \n      tokenizer(src) {\n        const match = /^((?:\\w+\\.)*\\w+)\\(\\s*([\\s\\S]+?)\\s*\\)/.exec(src);\n        if (match) {\n          const raw = match[0];\n          const modifiers = match[1].split('.');\n          const text = match[2];\n    \n          const isValid = modifiers.every(mod => supportedColors.includes(mod) || supportedStyles.includes(mod));\n          if (!isValid) return;\n    \n          return {\n            type: 'style',\n            raw,\n            modifiers,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n      },\n    \n      renderer(token) {\n        let content = this.parser.parseInline(token.tokens);\n    \n        // Apply modifiers in reverse order to maintain proper nesting\n        token.modifiers.reverse().forEach(mod => {\n          if (supportedColors.includes(mod)) {\n            content = `<span style=\"color: ${mod};\">${content}</span>`;\n          } else if (mod === 'bold') {\n            content = `<strong>${content}</strong>`;\n          } else if (mod === 'italic') {\n            content = `<em>${content}</em>`;\n          } else if (mod === 'underline') {\n            content = `<u>${content}</u>`;\n          } else if (mod === 'strike') {\n            content = `<s>${content}</s>`;\n          } else if (mod === 'blink') {\n            // Using CSS animation instead of deprecated <blink> tag\n            content = `<span style=\"animation: blink 1s step-start infinite;\">${content}</span>`;\n          } else if (mod === 'reverse') {\n            content = content.split('').reverse().join('');\n          } else if (mod === 'hidden') {\n            content = `<span style=\"visibility: hidden;\" onmouseover=\"this.style.visibility='visible'\" onmouseout=\"this.style.visibility='hidden'\">${content}</span>`;\n          } else if (mod === 'dim') {\n            content = `<span style=\"opacity: 0.5;\">${content}</span>`;\n          } else if (mod === 'rainbow') {\n            content = content\n              .split('')\n              .map((char, i) => `<span style=\"color: hsl(${(i * 360) / content.length}, 100%, 50%);\">${char}</span>`)\n              .join('');\n          }\n        });\n    \n        return content;\n      },\n    \n      walkTokens(token) {\n        if (token.type === 'style') {\n          console.log(`Detected style token: ${token.modifiers.join('.')}`);\n        }\n      }\n    };\n    \n    marked.use({ extensions: [styleExtension, linkExtension] });\n    \n    let html;\n    try {\n      html = marked.parse(markdown);\n    } catch (error) {\n      html = markdown;\n    }\n  \n    return html.replace(/^<p>(.*?)<\\/p>\\s*$/s, '$1');\n    // Explanation:\n    // ^<p>       → Matches the opening <p> at the start\n    // (.*?)      → Captures the content inside (non-greedy)\n    // <\\/p>\\s*$  → Matches the closing </p> with optional trailing whitespace\n    // $1         → Returns only the captured content\n  }","// import forbiddenNotes from '../forbiddenNotes.js';\nimport checkForLinksInMessage from './checkForLinksInMessage.js';\n\nexport default async function renderChatMessage(message, _chatWindow) {\n    // console.log('renderChatMessage', message, _chatWindow);\n    let context = 'default';\n\n    // profanity filter, could also be done in the backend\n    if (message.text && message.text.length > 0) {\n      message.text = forbiddenNotes.filter(message.text);\n    }\n\n    // TODO: needs to check for links inside the message, not just entire links\n    checkForLinksInMessage(message);\n\n    // if there is a #pondname in the message, add a pond card type\n    if (message.text && message.text.length > 0) {\n        let pondNames = findAllHashPondNames(message.text);\n        if (pondNames.length > 0) {\n            message.card = {\n                type: 'pond',\n                pondNames: pondNames\n            }\n        }\n    }\n\n    // Determine the window ID based on the message context\n    let windowId = `buddy_message_-${message.to}`;\n\n    // dynamically create the windowId based on the message details\n    if (message.type === 'buddy') {\n        if (message.to === this.bp.me) {\n            /*\n            // we need to check if message.from is not part of the buddy type chatId, could be a bot talking in the buddy chat\n            // this differs from pond chats, as its a third party in a two person chat\n            // the whole approach here is a bit awkward, but is required if we wish for bots to join buddy chat conversations\n            // check if message.from is not part of the chatId\n            let participants = message.chatId.split('/');\n            // remove the first item from the array\n            participants.shift();\n            // check if message.from is not inside the participants array\n            if (!participants.includes(message.from)) {\n              // this means a third party is sending a message in a buddy chat ( a bot most likely )\n              // we need to set the windowId to be the non-me participant\n              let notMe = participants.find(participant => participant !== this.bp.me);\n              // console.log('Setting windowId for non-me participant', notMe);\n              windowId = `buddy_message_-${notMe}`;\n              context = notMe;\n            } else {\n              // regular buddy conversation with (2) participants\n              windowId = `buddy_message_-${message.from}`;\n              context = message.from;\n            }\n            */\n            windowId = `buddy_message_-${message.from}`;\n            context = message.from;\n\n\n        } else {\n            windowId = `buddy_message_-${message.to}`;\n            context = message.to;\n        }\n    }\n\n    if (message.type === 'pond') {\n        context = message.to;\n        windowId = `pond_message_-${message.to}`;\n    }\n    // console.log('windowIdwindowId', windowId)\n    // TODO: scope on processedMessages needs to be keyed by type in addition to context\n    this.data.processedMessages[context] = this.data.processedMessages[context] || [];\n\n    // Stores all active users across all chat windows\n    this.data.activeUsers = this.data.activeUsers || [];\n\n    // Stores all buddies that are currently active in the context of the chat window\n    this.data.activeUsersInContext = this.data.activeUsersInContext || {};\n    this.data.activeUsersInContext[context] = this.data.activeUsersInContext[context] || [];\n\n    this.data.activePonds = this.data.activePonds || [];\n    if (message.type === 'pond') {\n        // If message.to is not in the activePonds, add it\n        if (message.to && !this.data.activePonds.includes(message.to)) {\n            this.data.activePonds.push(message.to);\n            this.bp.emit('pond::activePondAdded', message.to);\n        }\n    }\n\n    if (message.type === 'buddy') {\n        // If message.to is not in the activeUsers, add it\n        if (message.to && !this.data.activeUsers.includes(message.to)) {\n            this.data.activeUsers.push(message.to);\n            this.bp.emit('buddy::activeUserAdded', message.to);\n        }\n        // If message.to is not in the activeUsersInContext, add it\n        if (message.to && !this.data.activeUsersInContext[context].includes(message.to)) {\n            this.data.activeUsersInContext[context].push(message.to);\n        }\n    }\n\n    // If message.from is not in the activeUsers, add it\n    if (message.from && !this.data.activeUsers.includes(message.from)) {\n        this.data.activeUsers.push(message.from);\n        this.bp.emit('buddy::activeUserAdded', message.from);\n    }\n\n\n    // If message.from is not in the activeUsersInContext, add it\n    if (message.from && !this.data.activeUsersInContext[context].includes(message.from)) {\n        this.data.activeUsersInContext[context].push(message.from);\n    }\n\n    // Remark: Removing and editing messages do not currently require a windowId since they currently\n    // do not have a from / to property\n    // We may want to change this in the future to allow for more granular control directly in the chatWindow instance\n    if (message.removed) {\n        console.log(\"ATTEMPTING TO REMOVE MESSAGE\", message);\n        // find the chatMessage by uuid\n        let removedMessageEl = $(`.aim-chat-message[data-uuid=\"${message.removed}\"]`); // could be document as well?\n        if (removedMessageEl.length > 0) {\n            // remove the removed message\n            removedMessageEl.remove();\n        }\n        return;\n    }\n\n    if (message.edited) {\n        console.log(\"ATTEMPTING TO EDIT MESSAGE\", message);\n        // find the chatMessage by uuid\n        let editedMessageEl = $(`.aim-chat-message[data-uuid=\"${message.edited}\"]`); // could be document as well?\n\n        if (!editedMessageEl.length > 0) {\n            console.error('No original message found');\n            return;\n        }\n\n        // get the aim-message-content and set the text to the new message\n        let editedMessageContent = editedMessageEl.find('.aim-message-content');\n        if (editedMessageContent.length > 0) {\n            // remove the edited message\n            editedMessageContent.html(message.text);\n        }\n        return;\n    }\n\n    let chatWindow = this.bp.apps.ui.windowManager.findWindow(windowId);\n\n    if (_chatWindow) {\n        chatWindow = _chatWindow;\n    }\n\n    if (!chatWindow || !chatWindow.content) {\n        console.log('chat window not ready, trying again soon', windowId, message);\n        console.log(message);\n        return;\n    }\n\n    // Check if message already exists in the DOM\n    if (document.querySelector(`.chatMessage[data-uuid=\"${message.uuid}\"]`)) {\n        return; // Message is already rendered\n    }\n\n    // check to see if this command is less than 10 seconds old\n    // TODO: split local and remote commands\n    // TODO: should probably go through card codepath\n    // this means we create the bs-card on the client\n    // we should only run local commands on the client\n    let now = new Date().getTime();\n    let messageTime = new Date(message.ctime).getTime();\n    // needs to determine if this command should be run locally or remotely\n    // for now, only run locally\n    // check to see  if message.from is bp.me\n\n\n    // console.log('checking this.data.processedMessages[context]', this.data.processedMessages[context]);\n    // Check if message has been processed to avoid duplication\n    for (let i = 0; i < this.data.processedMessages[context].length; i++) {\n        if (this.data.processedMessages[context][i].uuid === message.uuid) {\n            // console.log('Message already processed, skipping rendering', message);\n            // if the message has already been processed by UUID, then it's a duplicate and we should not render it\n            return chatWindow;\n            // we have a special case here we wish to re-render the client message\n            // this indicates the server filtered parts of the message and it should be removed and re-rendered\n            if (this.data.processedMessages[context][i].from === this.bp.me && this.data.processedMessages[context][i].text !== message.text) {\n                // find the chatMessage by uuid\n                let filteredMessageEl = $(`.chatMessage[data-uuid=\"${message.uuid}\"]`, chatWindow.content);\n                if (filteredMessageEl.length > 0) {\n                    // remove the filtered message\n                    filteredMessageEl.remove();\n                    //this.bp.emit('buddy::message::gotfiltered', message);\n                }\n            } else {\n                // else there is no special filtering case from server\n                // and the messaged is a duplicate, return and do not render\n                return;\n            }\n        }\n    }\n\n    // Manage size of processedMessages to prevent memory leaks\n    if (this.data.processedMessages[context].length > 5000) {\n        this.data.processedMessages[context].shift();\n    }\n\n    // Add the processed message UUID to prevent reprocessing\n    this.data.processedMessages[context].push(message);\n\n    // check if this is an Agent message which gets processed first\n    if (message.type === 'agent') {\n\n        // Legacy BP API\n        if (desktop && desktop.app && desktop.app.spellbook && desktop.app.spellbook[message.text]) {\n            desktop.app.spellbook[message.text]();\n            return;\n        } else {\n            console.log('unknown agent message', message);\n        }\n    }\n\n    // TODO: allow buddylist to register message processors\n    // Is most likely best handled using SystemsManager from ECS code\n    // this way all app can register an update method\n    // we can give each app an onMessage method and have the ECS S delegate the message to the app\n    // bp.apps.buddylist.addMessageProcessor('buddyscript', function (message) {});\n    // bp.apps.buddylist.addMessageProcessor('card', function (message) {});\n    // etc\n    // this way we don't have to pollute the buddylist with all the message processing logic\n    // TODO: Migrate TTS app to v5 API\n\n    if (this.bp.apps.say && message.text && message.text.startsWith('/say')) {\n        // this is a /say message\n        this.bp.apps.say.processMessages(message);\n    }\n\n    // check if mobile, is so shorten the time\n    // legacy API\n    if (this.bp.isMobile()) {\n        messageTime = DateFormat.format.date(messageTime, 'hh:mm:ss a');\n\n    } else {\n        messageTime = DateFormat.format.date(messageTime, 'E MMMM dd, hh:mm:ss a');\n    }\n\n    // Format message time\n    messageTime = messageTime.toString();\n\n    // Check to see if message is type card\n\n    let container;\n    if (message.card && this.bp && this.bp.apps && this.bp.apps.card) {\n        //console.log('message is', message);\n        //console.log('message is card', message.card);\n\n        let cardData = message.card;\n        // console.log(\"USING CARD\", cardData, message);\n        // make sure card has props\n        if (Object.keys(cardData).length > 0) {\n            cardData.message = message; // TODO probably should clone for CardManager, etc\n            // default JSON rendering will now fail by default due to nested messages cards with arbitrary props ( no .data scope either ), .context might be good...\n            let cardManager = this.bp.apps.card.cardManager;\n            // console.log('cardManager.loadCard', cardData);\n            const _card = await cardManager.loadCard(cardData.type, cardData, chatWindow);\n            container = document.createElement('div');\n            container.classList.add('cardContainer');\n            let d = await _card.render(container);\n        }\n\n    }\n\n    let bp = this.bp;\n\n    this.createChatMessageElement(message, messageTime, chatWindow, container);\n\n    // console.log('parseChatMessage result', result);\n\n\n    // emit the freshly processed message for any post processing events ( such as playing a sound )\n    if (message.type === 'pond') {\n        this.bp.emit('pond::message::processed', message);\n    } else {\n        this.bp.emit('buddy::message::processed', message);\n    }\n\n    return chatWindow;\n\n}\n\n// TODO: add via addMessageProcessor() on `marked` and `pond` apps\n\nfunction findAllHashPondNames(text) {\n    // Decode HTML entities more comprehensively\n    const decodedText = decodeEntities(text);\n    // Regex: # followed by at least one letter/digit, then optional letters/digits/underscores/hyphens\n    // Requires space or start of string before #, supports Unicode\n    const hashPondNameRegex = /(^|\\s)#([a-zA-Z0-9\\p{L}][a-zA-Z0-9\\p{L}_-]*)/gu;\n    return Array.from(decodedText.matchAll(hashPondNameRegex), m => m[2]);\n}\n\nfunction decodeEntities(text) {\n    const entities = {\n        '&amp;': '&',\n        '&quot;': '\"',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&apos;': \"'\",\n        '&nbsp;': ' ',\n        // Add more as needed\n    };\n    return text.replace(/&[a-zA-Z0-9#]+;/g, match => entities[match] || match);\n}","export default function renderBuddyRequests (buddyrequests) {\n    //console.log(\"renderBuddyRequests\", buddyrequests);\n\n    $('.you_have_no_buddies').hide();\n    let api = this.bp.apps.client.api;\n\n    if (buddyrequests) {\n  \n      $('.pendingIncomingBuddyRequests').html('');\n      $('.pendingOutgoingBuddyRequests').html('');\n      $('.loading').remove();\n  \n      for (let buddy in buddyrequests) {\n        let buddyrequest = buddyrequests[buddy];\n        buddyrequest = JSON.parse(buddyrequest);\n        if (buddyrequest.to === this.bp.me) {\n          $('.pendingIncomingBuddyRequests').append('<li>' + buddyrequest.from + ' - <a href=\"#\" class=\"approveBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.from +'\">Approve</a> / <a href=\"#\" class=\"denyBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.from +'\">Remove</a> </li>');\n        } else {\n          $('.pendingOutgoingBuddyRequests').append('<li>' + buddyrequest.to + ' - <a href=\"#\" class=\"denyBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.to +'\">Remove</a></li>');\n        }\n      }\n  \n      $('.apiResult').val(JSON.stringify(buddyrequests, true, 2));\n  \n      // desktop.app.buddylist.pendingIncomingBuddyRequests = desktop.app.buddylist.pendingIncomingBuddyRequests || 0;\n      this.data.pendingIncomingBuddyRequests = this.data.pendingIncomingBuddyRequests || 0;\n\n      let totalIncomingBuddyRequests = $('.pendingIncomingBuddyRequests li').length;\n  \n      if (totalIncomingBuddyRequests > this.data.pendingIncomingBuddyRequests) {\n        this.data.pendingIncomingBuddyRequests = totalIncomingBuddyRequests;\n  \n        // Remark: short delay is used here to provide nice login experience if Buddy has requests\n        //         allows WELCOME sound to play\n        //         A better solution here is to here priority option for playing sound with queue\n        setTimeout(function () {\n          // this.bp.apps.play('YOUVEGOTMAIL.wav'); // TODO add 'play' app\n        }, 2222);\n      }\n  \n      if (totalIncomingBuddyRequests === 0) {\n        $('.pendingIncomingBuddyRequestsHolder').hide();\n      } else {\n        $('.pendingIncomingBuddyRequestsHolder').show();\n      }\n  \n      if ($('.pendingOutgoingBuddyRequests li').length == 0) {\n        $('.pendingOutgoingBuddyRequestsHolder').hide();\n      } else {\n        $('.pendingOutgoingBuddyRequestsHolder').show();\n      }\n  \n      // TODO: remove links in real-time from client for approve / deny ( no lags or double clicks )\n      //  '.pendingIncomingBuddyRequests'\n      $('.denyBuddyRequest').on('click', function () {\n        $(this).parent().hide();\n        api.denyBuddy($(this).attr('data-buddyname'), function (err, data) {\n          $('.apiResult').val(JSON.stringify(data, true, 2));\n        });\n        return false;\n      });\n  \n      $('.approveBuddyRequest', '.pendingIncomingBuddyRequests').on('click', function () {\n        $(this).parent().hide();\n        let buddyName = $(this).attr('data-buddyname');\n        api.approveBuddy(buddyName, function (err, data) {\n          $('.apiResult').val(JSON.stringify(data, true, 2));\n        });\n        return false;\n      });\n    }\n  \n  }","\n\nexport default async function processProfile(profileState) {\n  // console.log('processBuddylist', profileState);\n\n  // if the client hasn't seen the buddylist yet, we start from empty state\n  if (!this.data.buddylist) {\n    this.data.buddylist = {};\n  }\n  if (!this.data.buddyrequests) {\n    this.data.buddyrequests = {};\n  }\n\n  //console.log('processProfile', profileState);\n  //console.log('this.data.profileState', this.data.profileState);\n  if (this.data.profileState &&\n    (\n      Number(profileState.powerlevel) > Number(this.data.profileState.powerlevel)\n    )\n  ) {\n\n    // Assuming there's a container with ID 'powerLevelContainer' in your HTML\n    const powerLevel = bp.apps.powerlevel.popup;\n\n    // Example of increasing to level 4\n    powerLevel.show(profileState.powerlevel, {\n      duration: 7777\n    });\n  }\n\n  // merge the profile state, don't overwrite\n  this.data.profileState = { ...profileState };\n  // profileState is a JSON document representing entire user profile\n  // console.log('profileState', profileState);\n  if (profileState.system) {\n    $('.totalConnectedCount').html(profileState.system.totalIsConnected);\n    $('.totalOnlineCount').html(profileState.system.totalIsOnline);\n  }\n\n  // metadata about ponds users is joined or ponds of interest ( such as viewing popular ponds list )\n  if (profileState.ponds && profileState.ponds.ponds) {\n    profileState.ponds.ponds.forEach(function (pond) {\n      // check to see if we have an open window with data-app=\"buddylist\" data-type=\"pond\" and data-context=\"${pondName}\"\n      let win = $('#pond_message_-' + pond.name);\n      // update the window-title-text with the number of connected users\n      if (win) {\n        $('.window-title-text', win).html(pond.name + ' Pond (' + pond.connected + ')');\n      }\n    });\n  }\n\n  // we will process the profileState as if it was a differential state update\n  let buddylist = profileState.buddylist;\n  let profileNeedsUpdate = _processBuddylistData(this, buddylist);\n\n  let buddyrequests = profileState.buddyrequests;\n  _processBuddyRequestsData(this, buddyrequests);\n\n  // once we have completed processing all the buddylist profile data\n  // we will want to send back the updated document to awk that we have processed the profile\n  // and set newMessages flags to false\n  let api = this.bp.apps.client.api;\n  // console.log('getBuddyProfile', api, profileState);\n  profileState.updates = profileState.updates || {};\n\n}\n\nfunction _processBuddyRequestsData(buddylist, buddyrequests) {\n  if (buddyrequests) {\n    buddylist.renderBuddyRequests(buddyrequests);\n  }\n}\n\nfunction _processBuddylistData(buddylist, buddylistData) {\n\n  let profileNeedsUpdate = false;\n  if (buddylist) {\n    for (let b in buddylistData) {\n      let buddy = buddylistData[b];\n      let buddyName = b.replace('buddies/', '');\n      // check to see if the buddy is already in the local buddylist\n      // if not, render the buddy in the buddylist\n      /*\n      if (!buddylist.data.buddylist[b]) {\n        if (buddy.isConnected) {\n          buddylist.bp.emit('profile::buddy::in', {\n            name: buddyName,\n            buddydata: buddy\n          });\n        }\n        buddylist.data.buddylist[b] = buddy;\n      } else {\n        // check to see if buddy was connected and is no longer\n        if (!buddy.isConnected && buddylist.data.buddylist[b].isConnected) {\n          buddylist.bp.emit('profile::buddy::out', {\n            name: buddyName,\n            buddydata: buddy,\n            wasOnline: false\n          });\n        }\n      }*/\n\n\n      buddylist.renderOrUpdateBuddyInBuddyList({\n        name: buddyName,\n        buddydata: buddy,\n        wasOnline: false\n      });\n\n      // check if this buddy has sent newMessages\n      // if so, open a new window\n      // the process of opening a new chat window will connect websocket ( if not already connected )\n      // then messages will flow through the websocket\n      if (buddy.newMessages) {\n        buddylist.bp.emit('profile::buddy::newmessage', {\n          name: buddyName\n        });\n        // console.log('updaitng local profile state', buddylist.data.profileState, buddyName)\n        buddylist.data.profileState.buddylist['buddies/' + buddyName] = {\n          newMessages: false\n        };\n        profileNeedsUpdate = true;\n      }\n\n\n      if (buddy.isCalling) {\n        buddylist.bp.emit('profile::buddy::calling', {\n          name: buddyName\n        });\n      }\n\n    }\n  }\n  return profileNeedsUpdate;\n}","export default function buddylistUIEvents() {\n  let api = this.bp.apps.client.api;\n  let affirmations = this.bp.apps.affirmations.affirmations;\n\n  // bind events\n  $('.loginForm').submit((e) => {\n    e.preventDefault();\n\n    // disable the login button\n    $('.loginButton').prop('disabled', true);\n    $('.loginButton').addClass('disabled');\n\n    let username = $('.loginForm input[name=\"username\"]').val();\n    let password = $('.loginForm input[name=\"password\"]').val();\n    if (!password) {\n      password = username;\n    }\n\n    api.authBuddy(username, password, function (err, result) {\n      console.log('authBuddy', err, result);\n      if (err) {\n        if (result && result.error) {\n          $('.loginStatus').html(result.error);\n          if (result.error === 'Incorrect password.') {\n            // $('.resetPasswordLink').show();\n          }\n        } else {\n          if (err.message === 'Failed to fetch') {\n            $('.loginStatus').text('Failed to connect to Buddy Pond');\n          } else {\n            $('.loginStatus').html(err.message || 'Failed to authenticate buddy');\n          }\n        }\n        $('.loginButton').prop('disabled', false);\n        $('.loginButton').removeClass('disabled');\n\n        $('.password').show();\n        console.error('Failed to authenticate buddy:', err);\n\n        return;\n      }\n      if (result.success) {\n        // attempt to connect for events after getting auth token\n        //console.log('connecting with valid qtokenid', api.qtokenid);\n        result.me = username;\n        // The user has logged in password or signed up successfully, emit the auth event\n        bp.emit('auth::qtoken', result);\n        // $('.loggedIn').flexShow();\n        $('.loginForm .error').text('');\n\n      } else {\n        // re-enable the login button\n        $('.loginButton').prop('disabled', false);\n        $('.loginButton').removeClass('disabled');\n        if (username === password) {\n          $('.password').show();\n          $('.password').focus();\n          return;\n        }\n        $('.loginForm .error').text('Failed to authenticate buddy');\n        $('.password').show();\n        console.error('Failed to authenticate buddy:');\n      }\n    });\n    return false;\n  });\n\n  $('.onlineStatusSelect').change((e) => {\n    let status = $(e.target).val();\n    console.log('status', status);\n    bp.emit('profile::status', status);\n  });\n\n  $('.forgot-password').on('click', (ev) => {\n    $('.forgot-password-modal').flexShow();\n  });\n\n  $('.closeForgotPassword').on('click', (ev) => {\n    $('.forgot-password-modal').flexHide();\n  });\n\n  $('.buddylist').click((e) => {\n    // check if element has a data-buddy attribute\n    if (!$(e.target).closest('.buddy-message-sender').data('buddy')) {\n      return\n    }\n    let buddyname = $(e.target).closest('.buddy-message-sender').data('buddy');\n    console.log('message-buddy', buddyname);\n    this.openChatWindow({ name: buddyname });\n  });\n\n  // Send a buddy request form\n  $('.sendBuddyRequest').on('click', (ev) => {\n    ev.preventDefault();\n    let buddyName = $('.buddy_request_name').val();\n    if (!buddyName) {\n      $('.buddy_request_name').addClass('error');\n      return;\n    }\n\n    $('.you_have_no_buddies').html('Buddy Request Sent!');\n    $('.buddy_request_name').removeClass('error');\n    $('.buddy_request_name').val('');\n    // $('.pendingOutgoingBuddyRequests').append('<li>' + buddyName + '</li>');\n    this.bp.log('buddypond.addBuddy ->', buddyName);\n\n    this.client.addBuddy(buddyName, (err, data) => {\n      console.log('buddypond.addBuddy <-', err, data);\n      if (data.error) {\n        $('.you_have_no_buddies').html(data.error);\n        console.error(data);\n        return;\n      }\n      if (!data.success) {\n        $('.you_have_no_buddies').html(data.message)\n        console.error(data);\n        return;\n      }\n      this.bp.log('buddypond.addBuddy <-', data);\n    });\n\n  });\n\n  // Initially disable the login button\n  $('.loginButton').prop('disabled', true);\n  $('.loginButton').addClass('disabled');\n\n  // Toggle the login button based on the checkbox status\n  $('#tosAgree').change(function () {\n    if ($(this).is(':checked')) {\n      $('.loginButton').prop('disabled', false);\n      $('.loginButton').removeClass('disabled');\n    } else {\n      $('.loginButton').prop('disabled', true);\n      $('.loginButton').addClass('disabled');\n    }\n  });\n\n  /*\n  // TODO: create context meny for buddy-message-sender\n  $(document).on('click', (e) => {\n    // delegate based on if e.target is a .buddy-message-sender\n    // if so, open profile for that buddy\n    //alert(e.target.classList)\n    if ($(e.target).hasClass('buddy-message-sender')) {\n      alert('buddy-message-sender');\n      let buddyName = $(e.target).text();\n      if (this.bp.admin) {\n        // roles are handled server-side, this is a simple UI route for the implied role access\n        // loading admin-profile from another user won't return admin data\n        this.bp.open('admin-profile', { context: buddyName });\n      } else {\n        // this.bp.open('user-profile', { context: buddyName });\n      }\n    }\n  });\n  */\n\n  // Append a custom context menu to the body (hidden initially)\n  // $('body').append('<div id=\"customContextMenu\" class=\"removeMessage\" style=\"display: none; position: absolute; z-index: 1000; background: white; border: 1px solid #ccc; padding: 10px;\">Remove Message</div>');\n\n  // Right-click event on elements with class .buddy-message-sender\n  /*\n  $(document).on('contextmenu', function (e) {\n\n    if (!$(e.target).hasClass('buddy-message-sender')) {\n      return true;\n    }\n\n    e.preventDefault(); // Prevent default context menu\n    let chatMessage = $(e.target).closest('.chatMessage'); // Get the chat message element\n    console.log('using chatMessage', chatMessage.html());\n    if (api.me !== 'Marak') { // could also allow users to remove their own messages\n       // set the removeMessage to disabled class\n      $('#customContextMenu').addClass('disabled');\n    }\n\n    let from = chatMessage.attr('data-from');\n    let to = chatMessage.attr('data-to');\n    let uuid = chatMessage.attr('data-uuid');\n    let type = chatMessage.attr('data-type');\n\n    console.log('type', type, 'from', from, 'uuid', uuid);\n\n    // Position the custom context menu at the mouse coordinates\n    $('#customContextMenu').css({\n      top: e.pageY + 'px',\n      left: e.pageX + 'px',\n      display: 'block'\n    });\n\n    $('#customContextMenu').off('click').on('click', async () => {\n      // Replace 'openProfile' with your actual function to open the profile\n      //openProfile(buddyName);\n\n      let context = to;\n\n      await api.removeMessage({type, from, to, uuid});\n      // $(this).hide(); // Hide the context menu after click\n    });\n  });\n  */\n\n  // Hide context menu when clicking anywhere else on the document\n  /*\n  $(document).on('click', function (e) {\n    if (!$(e.target).hasClass('buddy-message-sender')) {\n      $('#customContextMenu').hide();\n    }\n  });\n  */\n\n  // Invite a buddy link ( opens twitter with a random message )\n  $('.inviteBuddy').on('click', () => {\n    let randomInviteMessages = [\n      `Find me as \"${this.bp.me}\" on https://buddypond.com and let's start a conversation that could last a lifetime.`,\n      `I've taken my conversations to the cloud! Reach me at \"${this.bp.me}\" on https://buddypond.com where the future of messaging unfolds.`,\n      `Wave goodbye to the old and hello to the old! I'm waiting at \"${this.bp.me}\" on https://buddypond.com. Let's catch up!`,\n      `Missing chat sessions? They're back and better than ever at \"${this.bp.me}\" on https://buddypond.com. Join me and let's reconnect!`,\n      `Taking conversations to the next level. Find me at \"${this.bp.me}\" on https://buddypond.com and let's dive into new topics together!`,\n      `Remember the ease of old-school messaging? Experience it again with a twist! I'm \"${this.bp.me}\" at https://buddypond.com. Chat soon?`,\n      `I'm charting new territories in the world of digital communication. Join me as \"${this.bp.me}\" on https://buddypond.com and let's explore together!`,\n      `Just like the good old days but better! Find me on \"${this.bp.me}\" at https://buddypond.com and let's keep the conversations flowing.`,\n    ];\n    let inviteMessage = randomInviteMessages[Math.floor(Math.random() * randomInviteMessages.length)];\n    window.open(`https://twitter.com/intent/tweet?url=${inviteMessage}`);\n    return false;\n  });\n\n  function updatePositiveAffirmation() {\n    let key = affirmations[Math.floor(Math.random() * affirmations.length)];\n    $('.positiveAffirmation').html(key);\n  }\n\n  // update the positive affirmation on an interval\n  setInterval(function () {\n    $('.positiveAffirmation').fadeOut({\n      duration: 4444,\n      complete: function () {\n        updatePositiveAffirmation();\n        $('.positiveAffirmation').fadeIn({\n          duration: 4444,\n          complete: function () { }\n        });\n      }\n    });\n  }, 199800); // 3 minutes, 33 seconds\n\n  updatePositiveAffirmation();\n\n  $('.positiveAffirmation').on('click', function () {\n    updatePositiveAffirmation();\n  });\n\n\n}","\n// Remark: Server will only allocate if there is no pre-existing portion of coins\n// Remark: Server maintains a mutex lock to ensure only one request per user at a time ( spamming prevention )\nexport default async function requestDefaultCoinAllocations() {\n\n  let qtokenid = buddypond.qtokenid;\n  let me = this.bp.me;\n\n  // TODO: set a five second alarm here so messages aren't immediately sent on login\n  console.log(`requestDefaultCoinAllocations ${me} ${qtokenid}`);\n\n  let res;\n  try {\n    let faucetUrl = `${buddypond.randolphEndpoint}/randolph/faucet`;\n    console.log('faucetUrl', faucetUrl);\n    res = await fetch(faucetUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${qtokenid}`,\n        'x-me': me\n      }\n    });\n    console.log('requestDefaultCoinAllocations', res.status, res.statusText);\n    let json = await res.json();\n    console.log('requestDefaultCoinAllocations', json);\n  } catch (err) {\n    throw err;\n  }\n\n}","export default function sortBuddyList() {\n\n  let buddyList = document.querySelector('.buddylist');\n  if (!buddyList) {\n    console.log('Buddy list not found, unable to sort');\n    return;\n  }\n\n  let buddyItems = Array.from(document.querySelectorAll('.buddylist li')); // TODO: more specific selector?\n\n  buddyItems.sort((a, b) => {\n    // Sort by status (online 🟢 first)\n    let aStatus = a.querySelector('.buddy-status').textContent.includes('🟢') ? 0 : 1;\n    let bStatus = b.querySelector('.buddy-status').textContent.includes('🟢') ? 0 : 1;\n\n    if (aStatus !== bStatus) {\n      return aStatus - bStatus; // Online first\n    }\n\n    // If both are online, sort alphabetically by name\n    if (aStatus === 0 && bStatus === 0) {\n      return a.dataset.buddy.localeCompare(b.dataset.buddy);\n    }\n\n    // If both are offline, sort by utime (most recent first), then by name\n    let aUtime = parseInt(a.dataset.utime || 0);\n    let bUtime = parseInt(b.dataset.utime || 0);\n    if (aUtime !== bUtime) {\n      return bUtime - aUtime; // Higher utime (more recent) first\n    }\n\n    return a.dataset.buddy.localeCompare(b.dataset.buddy);\n  });\n\n\n  buddyList.innerHTML = '';\n  buddyItems.forEach(item => buddyList.appendChild(item));\n}","\nexport default function showContextMenu(x, y, buddyName) {\n    const $menu = $('<div>', {\n      id: 'customContextMenu',\n      css: {\n        position: 'absolute',\n        top: y,\n        left: x,\n        zIndex: 99999,\n        display: 'block',\n        background: 'white',\n        border: '1px solid #ccc',\n        padding: '10px',\n        cursor: 'pointer'\n      }\n    }).append($('<ul>').append(\n      $('<li>').text('View Profile').on('click', () => openProfile(buddyName))\n    ));\n  \n    function openProfile(buddyName) {\n      console.log('Opening profile for ' + buddyName);\n      if (bp.admin) {\n        bp.open('admin-profile', { context: buddyName });\n      } else {\n        bp.open('user-profile', { context: buddyName });\n      }\n    }\n  \n    $('#customContextMenu').remove();\n    $('body').append($menu);\n  \n    $(document).one('click', function () {\n      $('#customContextMenu').remove();\n    });\n  }\n  ","// Context menu creation\nexport default function createMessageContextMenu(target, closestMessage) {\n\n  // Remove existing context menu if any\n  if (this.activeMessageContextMenu) {\n    this.activeMessageContextMenu.remove();\n    this.activeMessageContextMenu = null;\n  }\n\n  if (this.activeMessageHoverMenu) {\n    // set display: none on the hover menu\n    // TODO: needs to swap classes instead of setting styles\n    // this.activeMessageHoverMenu.style.display = 'none';\n    this.activeMessageHoverMenu = null;\n  }\n\n  // TODO: the closest .aim-hover-menu to target should have it's hover CSS logic removed\n  // aim-hover-menu:hover sets display: flex, without its display: none\n  // we need this bypassed while the context menu is open\n  const hoverMenu = target.closest('.aim-hover-menu');\n  /*\n  console.log('hoverMenu', hoverMenu);\n  if (hoverMenu) {\n    // hoverMenu.style.display = 'flex';\n  }\n  */\n\n  const contextMenu = document.createElement('div');\n  contextMenu.className = 'aim-context-menu';\n\n  const messageFrom = closestMessage.getAttribute('data-from');\n\n\n  const menuItems = [\n    { text: 'Reply', action: 'reply-message' },\n    // { text: 'Quote', action: 'quote-message' },\n    { text: 'Say Message', action: 'say-message' },\n    // { text: 'Report Message', action: 'report-message' },\n    // { text: 'Copy Message', action: 'copy-message' },\n  ];\n\n  if (messageFrom === this.bp.me || this.bp.me === 'Marak') { // TODO: admin rbac\n    menuItems.push(\n      { text: 'Edit Message', action: 'edit-message' },\n      { text: 'Delete Message', action: 'delete-message' }\n    );\n  }\n\n  menuItems.push({\n    text: 'Cast Spell',\n    action: 'cast-spell',\n  });\n\n  menuItems.forEach(item => {\n    const menuItem = document.createElement('div');\n    menuItem.className = 'aim-context-menu-item';\n    menuItem.textContent = item.text;\n    menuItem.setAttribute('data-action', item.action);\n    contextMenu.appendChild(menuItem);\n  });\n\n  // Position the context menu\n  document.body.appendChild(contextMenu);\n  const rect = target.getBoundingClientRect();\n  contextMenu.style.left = `${rect.left - 150}px`;\n  contextMenu.style.top = `${rect.bottom + window.scrollY - 20}px`;\n\n  // set data-attr to the closest message data-chat-id and data-uuid\n  const chatId = closestMessage.getAttribute('data-chat-id');\n  const uuid = closestMessage.getAttribute('data-uuid');\n  contextMenu.setAttribute('data-chat-id', chatId);\n  contextMenu.setAttribute('data-uuid', uuid);\n  contextMenu.setAttribute('data-from', messageFrom);\n\n  this.activeMessageContextMenu = contextMenu;\n  this.activeMessageHoverMenu = hoverMenu;\n  return contextMenu;\n}\n","export default function loadUserApps() {\n    // TODO: load from saved profile\n    if (this.bp.me === 'Marak') {\n        this.bp.apps.desktop.addShortCut({\n            name: 'admin',\n            icon: `desktop/assets/images/icons/icon_audio-player_64.png`,\n            label: 'Admin',\n        }, {\n            onClick: () => {\n                bp.open('admin', {\n                    context: null\n                });\n            }\n        });\n\n        window.arrangeDesktop();\n    \n    }\n\n}","export default async function sendMessageHandler(e, chatWindow, windowType, contextName) {\n\n  const message = $('.aim-input', chatWindow.content).val();\n\n  const _data = {\n    to: $('.aim-to', chatWindow.content).val(),\n    replyto: $('.aim-replyto', chatWindow.content).val(),\n    type: windowType,\n    from: this.bp.me,\n    message,\n    ctime: Date.now(),\n    text: message,\n    files: [],\n  };\n\n  // TODO: move file upload code to separate function\n  // Get file previews\n  const filePreviews = $('.file-preview', chatWindow.content);\n  const files = [];\n\n  if ((!message || message.length === 0) && filePreviews.length === 0) {\n    console.log('No message to send');\n    return;\n  }\n\n  // Collect all files first\n  filePreviews.each((_, filePreview) => {\n    $('.file-content', filePreview).each((_, fileContent) => {\n      const file = this.bp.apps['file-viewer'].getFile(fileContent);\n      if (file) {\n        files.push({\n          file,\n          element: fileContent\n        });\n      }\n    });\n  });\n\n  // Create status indicators for each file\n  files.forEach(({ file, element }) => {\n    const statusDiv = $('<div>', {\n      class: 'upload-status',\n      css: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0, 0, 0, 0.7)',\n        color: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      }\n    }).text('Waiting...');\n\n    $(element).css('position', 'relative').append(statusDiv);\n  });\n\n  // Process files sequentially\n  try {\n    for (const { file, element } of files) {\n      const statusDiv = $(element).find('.upload-status');\n      statusDiv.text('Uploading...');\n\n      try {\n        console.log('is there a filepath?', file.filePath);\n        console.log('this is the file', file);\n        file.filePath = file.filePath || file.name;\n\n        // we are going to perform some basic file organization and routing here\n        // when the user uploads files via the chat window, we are going to store them\n        // in the user's directory on the CDN\n        // to help out the user, will perform mime type / file ext detection here in order to upload\n        // the file to the appropriate directory such as images, audio, videos, etc\n        let supportedImageTypesExt = ['jpeg', 'png', 'gif', 'webp', 'svg']; // same as server ( for now )\n        let supportedAudioTypesExt = ['mp3', 'wav', 'ogg', 'flac', 'aac', 'm4a'];\n        let supportedVideoTypesExt = ['mp4', 'webm', 'ogg', 'avi', 'mov', 'mkv'];\n\n        // check to see if the file.name has an extension included in the supportedImageTypesExt array\n        let fileExt = file.name.split('.').pop().toLowerCase();\n        if (supportedImageTypesExt.includes(fileExt)) {\n          file.filePath = 'images/' + file.filePath;\n        }\n        if (supportedAudioTypesExt.includes(fileExt)) {\n          file.filePath = 'audio/' + file.filePath;\n        }\n        if (supportedVideoTypesExt.includes(fileExt)) {\n          file.filePath = 'videos/' + file.filePath;\n        }\n\n        // make file.filePath url encoded\n        file.filePath = encodeURIComponent(file.filePath);\n\n        console.log('assigning file path', file.filePath);\n        let fileUrl = await this.bp.apps.client.api.uploadFile(file, (progress) => {\n          statusDiv.text('Uploading: ' + progress + '%');\n        });\n\n        // now that we have the url, just send a regular message with the url\n        // the card type should automatically be detected by the server\n        // the the body of the message will be the url with extension of image, video, etc\n        let message = {\n          to: _data.to,\n          from: _data.from,\n          type: _data.type,\n          replyto: _data.replyto,\n          text: fileUrl\n        };\n        // TODO: replyto\n        console.log(\"sending multimedia message\", message);\n        this.bp.emit('buddy::sendMessage', message);\n\n        // Fade out and remove the uploaded file preview\n        await $(element).fadeOut(300);\n        $(element).remove();\n\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        statusDiv.text('Failed: ' + error.message)\n          .css('background', 'rgba(255, 0, 0, 0.7)');\n\n        // Keep failed uploads visible for 2 seconds then fade out\n        await new Promise(resolve => setTimeout(resolve, 8000));\n        await $(element).fadeOut(300);\n        $(element).remove();\n      }\n    }\n  } catch (error) {\n    console.error('Error in file upload process:', error);\n  }\n\n  // Remove empty file preview containers\n  filePreviews.each((_, container) => {\n    if ($(container).children().length === 0) {\n      $(container).remove();\n    }\n  });\n\n  $('.file-preview', chatWindow.content).remove();\n\n  // Send the regular message\n  if (windowType === 'pond') {\n    _data.type = 'pond';\n  } else {\n    _data.type = 'buddy';\n  }\n\n  // TODO: move these commands to defaultCommands in buddyscript\n  if (_data.text.startsWith('/gif')) {\n    // split text to parts on space\n    let params = _data.text.split(' ').slice(1);\n    await bp.load('image-search');\n\n    if (params.length === 0) {\n      await bp.open('image-search', { query: params[0], provider: 'giphy' });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return;\n    }\n\n    let result = await bp.apps['image-search'].fetchImages(params[0], 6, 'giphy');\n    // pick a random image from the result\n    if (result.error) {\n      console.error('Image search error:', result.error);\n      // show an error message in the chat window\n      await this.showCard({ chatWindow, cardName: 'error', context: { message: result.error } });\n\n      // $('.aim-input', chatWindow.content).val('Error fetching images: ' + result.error);\n      console.error('Error fetching images:', result.error);\n      return;\n    }\n    if (result.length === 0) {\n      console.error('No images found for query:', params[0]);\n      return;\n    }\n    let randomImage = result[Math.floor(Math.random() * result.length)];\n    console.log('Random image selected:', randomImage);\n    // _data.text = randomImage; // set the text to the image URL\n    _data.card = {\n      type: 'image',\n      url: randomImage\n    };\n  }\n\n  // TODO: merge back params to query string, just pop the first one off\n  if (_data.text.startsWith('/image')) {\n    // split text to parts on space\n    let params = _data.text.split(' ').slice(1);\n    console.log('/image params', params);\n    if (params.length === 0) {\n      // if only one parameter is provided, open the image search app\n      await bp.open('image-search', { query: params[0], provider: 'pexels' });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return;\n    }\n\n    await bp.load('image-search');\n    console.log('pppp', params)\n    let result = await bp.apps['image-search'].fetchImages(params[0], 6, 'pexels');\n    // pick a random image from the result\n    if (result.error) {\n      console.error('Image search error:', result.error);\n      // show an error message in the chat window\n      await this.showCard({ chatWindow, cardName: 'error', context: { message: result.error } });\n\n      // $('.aim-input', chatWindow.content).val('Error fetching images: ' + result.error);\n      console.error('Error fetching images:', result.error);\n      return;\n    }\n    if (result.length === 0) {\n      console.error('No images found for query:', params[0]);\n      return;\n    }\n    let randomImage = result[Math.floor(Math.random() * result.length)];\n    console.log('Random image selected:', randomImage);\n    // _data.text = randomImage; // set the text to the image URL\n    _data.card = {\n      type: 'image',\n      url: randomImage\n    };\n  }\n\n  // if this is a buddyscript command, but not a /say command\n  // say has a special meaning in the context of the chat window\n  // as it should be sent as regular text message ( should be a card later, click to repeat )\n  // TODO: needs to rebuild bs system to support local transform commands\n  if (_data.text.startsWith('/')\n    && !_data.text.startsWith('/say')\n    && !_data.text.startsWith('/roll')\n    && !_data.text.startsWith('/gif')\n    && !_data.text.startsWith('/image')\n  ) {\n    // TODO: process the card locall here\n    /*\n    _data.card = {\n     type: 'bs'\n   };\n   */\n    // runs local BS script command\n    // alert('bs card')\n\n    let bs = this.bp.apps.buddyscript.parseCommand(_data.text);\n    console.log('got back buddyscript command', bs);\n    if (bs.pipe) {\n      //if (now - messageTime < 10000) {\n      // pipeable / immediate run commands should only persist for 10 seconds\n      bs.pipe({\n      chatWindow,\n      contextName,\n      windowType\n    });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return false;\n\n      // }\n    }\n\n    console.log('buddyscript command', bs);\n    if (bs.type === 'show-card') {\n      // show the bs card\n      let cardData = bs.data;\n      this.showCard({\n        chatWindow,\n        cardName: 'bs',\n        context: {\n          ...bs\n        }\n      });\n    }\n    $('.aim-input', chatWindow.content).val('');\n\n    return false;\n  }\n\n  console.log(`Sending message to ${_data.to} from ${_data.from} of type ${_data.type}:`, _data.text);\n  console.log(_data.text.startsWith('\\\\'));\n  if (_data.text.startsWith('\\\\')) {\n   \n    // let bs = this.bp.apps.buddyscript.parseCommand(_data.text);\n    // console.log('backwards command', bs);\n    _data.card = {\n      type: 'bs',\n      command: _data.text.replace('\\\\', '/').trim(),\n      //commandData: bs\n    };\n\n  }\n\n\n  // TODO: check if this is a valid BS command\n  // if so, we need to construct a card to show the command\n\n  // TODO: add support for sending /bs commands with \\ instead of /\n  /*\n  if (_data.text.startsWith('\\\\')) {\n    // the command is a /foo style command\n    // extract the command from the text\n    let command = _data.text.split(' ')[0].replace('\\\\', '');\n    alert(command)\n    _data.text = 'Sent app using `\\\\' + command + '` command'; // TODO: better UX message\n    _data.card = {\n      type: 'app', // coould also be a \"bs\" card, might need distinction between app and bs commands\n      context: command\n    };\n  }\n  */\n\n  console.log('emitting message', _data);\n  this.bp.emit('buddy::sendMessage', _data);\n\n  // Clear input\n  $('.aim-input', chatWindow.content).val('');\n\n  // Hide the aim-reply-box\n  $('.aim-reply-box', chatWindow.content).remove();\n\n  // clear the replyTo input value\n  $('.aim-replyto', chatWindow.content).val('');\n  /*\n  const replyBox = target.closest('.aim-reply-box');\n  if (replyBox) {\n    replyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.replyMode = false;\n    this.bp.replyData = null;\n  }\n  */\n\n  let $sendButton = $('.aim-send-btn', chatWindow.content);\n  $sendButton.css('opacity', 0.5);\n\n\n}","export default async function showCard({chatWindow, cardName, context = {}}) {\n\n    // render the help card and do not send the message\n    let cardManager = this.bp.apps.card.cardManager;\n    // console.log('cardManager.loadCard', cardData);\n    const _card = await cardManager.loadCard(cardName, context, chatWindow);\n    let container = document.createElement('div');\n    container.classList.add('cardContainer');\n    let d = await _card.render(container, chatWindow);\n    if (!chatWindow) {\n      console.error('chatWindow not found. user most likely not in the chat window');\n      return;\n    }\n    const aimMessages = chatWindow.content.querySelector('.aim-messages');\n    if (!aimMessages) {\n      console.error('aim-messages not found. user most likely not in the chat window');\n      return;\n    }\n\n    // append container to the aim-messages at the end\n    aimMessages.appendChild(container);\n\n    // empty the aim-input\n    $('.aim-input', chatWindow.content).val('');\n\n    // scroll to the bottom of the chat window\n    // aimMessages.scrollTop = aimMessages.scrollHeight;\n    container.scrollIntoView({\n      behavior: 'instant'\n    });\n\n    return d;\n  }\n"],"names":["attachContextMenu","buddyElement","$","on","e","preventDefault","buddyName","target","closest","dataset","buddy","this","showContextMenu","pageX","pageY","createHoverMenu","message","hoverMenu","document","createElement","className","menuItems","from","bp","me","push","text","action","icon","forEach","item","button","setAttribute","appendChild","createTextNode","avatarCache","Map","defaultAvatarSvg","username","has","get","svg","vendor","dicebear","createAvatar","dicebearAvatars","seed","size","backgroundColor","toString","set","checkForLinksInMessage","match","messageText","trim","url","URL","protocol","error","isValidUrl","contentUrl","card","type","ext","split","pop","buddypond","supportedImageTypesExt","includes","toLowerCase","supportedAudioTypesExt","supportedVideoTypesExt","isValidYoutubeLink","videoId","searchParams","thumbnail","context","slice","isValidGithubLink","githubRegex","owner","repo","filename","console","ChatWindowButtonBar","constructor","options","buttons","container","render","buttonBar","classList","add","image","imgElement","src","title","alt","draggable","onclick","align","buttonElement","innerText","forbiddenNotes","base64","setupChatWindow","windowType","contextName","chatWindow","chatWindowTemplate","messageTemplateString","cloned","innerHTML","content","autocomplete","sourceCommands","Object","keys","map","command","source","search","event","ui","firstChar","value","substr","indexOf","chatWindowButtons","filter","test","navigator","userAgent","env","chatWindowButtonBar","prepend","val","submit","async","sendMessageHandler","keydown","which","shiftKey","$input","inputValue","cursorPosition","selectionStart","newValue","setSelectionRange","ignoreUIControlKeys","replace","$sendButton","length","css","emit","to","isTyping","ctime","Date","now","randowFunWord","words","Math","floor","random","containsBadWord","str","lowerStr","decoded","some","fnote","RegExp","JSON","parse","atob","defaultProfileFiles","getFileType","fileName","endsWith","scrollToBottom","parent","retryDelay","retryCount","log","scrollTop","setTimeout","handleContextMenuItemClick","performAction","call","closeMenus","handleEditHintAction","messageContent","querySelector","messageUUID","getAttribute","originalMessage","messageData","uuid","chatId","cancelEdit","saveEdit","activeMessageContextMenu","remove","activeMessageHoverMenu","activeReplyBox","closestTarget","editMessage","replyMessage","closestMessage","createMessageContextMenu","deleteMessage","open","output","removeInstantMessage","originalText","editableContainer","parentNode","insertBefore","focus","editHint","handleKeydown","key","cleanupListeners","stopPropagation","handleBlur","ev","relatedTarget","contains","removeEventListener","addEventListener","restoreText","removeAttribute","blur","messageElement","newMessageText","editInstantMessage","replyData","replyBox","messageSender","find","replyInput","messageTextInput","cancelReply","bindProfilePictureClick","parents","hasClass","buddyname","Client","config","host","api","reconnectAttempts","maxReconnectAttempts","maxBackoffDelay","isIntentionallyClosed","getTime","prototype","connect","wsClient","createWebSocketClient","disconnect","closeConnection","addBuddy","cb","uri","method","data","endpoint","headers","Accept","qtokenid","body","stringify","controller","AbortController","timeoutId","abort","incrementPackets","perf","start","fetch","signal","then","response","clearTimeout","ok","json","errorData","Error","status","statusText","end","addPerfTime","catch","msg","name","apiRequest","err","receivedInstantMessage","send","setStatus","update","profilePicture","Promise","resolve","reject","WebSocket","buddylistWsEndpoint","handleOpen","handleMessage","parseData","profile","dtime","buddylist","success","reward","warn","handleClose","code","reason","clearInterval","updateStatusInterval","delay","min","pow","attempt","newWsClient","assign","handleError","readyState","OPEN","close","bind","BuddyList","processedMessages","profileState","updates","defaultPond","subscribedBuddies","subscribedPonds","showedHelp","logout","provider","apps","load","newEvent","MouseEvent","bubbles","cancelable","clientX","clientY","dispatchEvent","removeClass","messageControls","addClass","isHost","sendCardMessage","targetEl","windowId","windowManager","findWindow","aimInput","sendButton","Event","click","defaultChatWindowButtons","opened","showingIsTyping","faucetAttempts","init","window","client","re","appendScript","importModule","bindMessageContextMenu","buddyListWindow","focusWindow","restore","htmlStr","fetchHTMLFragment","appendCSS","createBuddyListWindow","createHTMLContent","registerEventHandlers","handleAuthentication","buddylistUIEvents","openChatWindow","x","innerWidth","createWindow","app","id","width","height","y","onOpen","onClose","qtoken","handleAuthSuccess","loadUserApps","generateDefaultProfile","ws","flexHide","flexShow","processBuddylist","renderOrUpdateBuddyInBuddyList","buddyListItem","b","profile_picture","email","noAlert","messageTime","play","buddyReadNewMessages","desktop","videochat","startCall","handleChatMessages","sendMessageToServer","typingIndicatorId","typingMessage","typingIndicator","attr","appendTo","lastTypingMessage","sort","join","sendWsMessage","rollToNumber","newBalance","portfolio","portfolioWindow","portfolioData","updateCoinRow","symbol","amount","available","price","cost","coinSendSelector","coinSendBalance","formattedValue","toLocaleString","balance","requestDefaultCoinAllocations","html","getLatestMessages","pondname","sendMessage","windowsToUpdate","Set","result","messages","newMessages","renderChatMessage","values","next","showCard","cardName","emitLocal","pondSendMessage","localToken","localStorage","getItem","verifyToken","show","hasPassword","user","tryHard","Infinity","buddydata","buddyTimeouts","buddyListItems","querySelectorAll","existingBuddy","Array","el","wasConnected","textContent","hasOwnProperty","isConnected","diff","utime","buddyListItemEl","connectedStatusIcon","isCalling","lastSeen","lastSeenDate","lastSeenString","year","month","day","hour","minute","second","hour12","style","display","firstChild","formattedDate","DateFormat","format","date","append","sortBuddyList","createChatMessageElement","chatMessage","img","defaultAvatar","contentWrapper","messageHeader","sender","tripcode","timestamp","messageMeta","geoFlag","location","renderGeoFlag","badgesContainer","replyIndicator","replyto","repliedMessage","repliedSender","repliedText","scrollIntoView","behavior","block","processedText","markdown","supportedColors","supportedStyles","linkExtension","level","renderer","token","href","parser","parseInline","tokens","styleExtension","tokenizer","exec","raw","modifiers","every","mod","lexer","inlineTokens","reverse","char","i","walkTokens","marked","use","extensions","parseMarkdownWithoutPTags","aimMessages","allMessages","inserted","existingMessage","existingId","parseInt","insertChatMessage","_chatWindow","pondNames","decodedText","entities","decodeEntities","hashPondNameRegex","matchAll","m","findAllHashPondNames","activeUsers","activeUsersInContext","activePonds","removed","removedMessageEl","edited","editedMessageEl","editedMessageContent","shift","spellbook","say","startsWith","processMessages","isMobile","cardData","cardManager","_card","loadCard","renderBuddyRequests","buddyrequests","hide","buddyrequest","pendingIncomingBuddyRequests","totalIncomingBuddyRequests","denyBuddy","approveBuddy","Number","powerlevel","popup","duration","system","totalIsConnected","totalIsOnline","ponds","pond","win","connected","buddylistData","profileNeedsUpdate","wasOnline","_processBuddylistData","_processBuddyRequestsData","affirmations","updatePositiveAffirmation","prop","password","authBuddy","change","is","randomInviteMessages","inviteMessage","setInterval","fadeOut","complete","fadeIn","windowTitle","pondName","alert","windowIdPrefix","iconImagePath","_window","addSubscription","rerenderMessages","focusOnInput","removeSubscription","loggedIn","basePath","fileContent","entries","blob","Blob","file","File","lastModified","filePath","uploadFile","uploadError","res","faucetUrl","randolphEndpoint","Authorization","buddyList","buddyItems","a","aStatus","bStatus","localeCompare","aUtime","bUtime","$menu","position","top","left","zIndex","background","border","padding","cursor","admin","openProfile","one","contextMenu","messageFrom","menuItem","rect","getBoundingClientRect","bottom","scrollY","isHoverMenuAction","addShortCut","label","onClick","arrangeDesktop","_data","files","filePreviews","each","_","filePreview","getFile","element","statusDiv","class","right","color","alignItems","justifyContent","fileExt","encodeURIComponent","fileUrl","progress","children","params","query","fetchImages","randomImage","bs","buddyscript","parseCommand","pipe","d","empty"],"mappings":"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"}