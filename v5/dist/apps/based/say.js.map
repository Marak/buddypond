{"version":3,"file":"say.js","sources":["../../../apps/based/say/say.js"],"sourcesContent":["export default class Say {\n  constructor(bp, settings = {}) {\n    this.bp = bp;\n    this.settings = {\n      audioEnabled: settings.audioEnabled || true,\n      ttsEnabled: settings.ttsEnabled || true,\n      ttsVoiceIndex: settings.ttsVoiceIndex || 0,\n      language: settings.language || 'en-US'\n    };\n    this.voices = [];\n  }\n\n  init() {\n    if ('speechSynthesis' in window) {\n      this.available = true;\n      this.loadVoices();\n      if (typeof speechSynthesis.onvoiceschanged !== 'undefined') {\n        speechSynthesis.onvoiceschanged = this.loadVoices.bind(this);\n      }\n    } else {\n      this.available = false;\n      console.log('Speech Synthesis not supported in this browser.');\n    }\n    this.bp.say = this.speak.bind(this);\n    this.bp.on('say::message', 'speak-message-text', (message) => {\n      this.speak(message.text);\n    });\n  }\n\n  loadVoices() {\n    this.voices = speechSynthesis.getVoices();\n  }\n\n  speak(text) {\n\n    if (!this.available || !this.settings.audioEnabled || !this.settings.ttsEnabled) {\n      console.log('Warning: TTS Engine not available or disabled.');\n      return;\n    }\n\n    if (!this.bp.settings.audio_enabled) {\n      console.log('Audio is disabled in settings.');\n      return;\n    }\n\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.voice = this.voices[this.settings.ttsVoiceIndex] || this.voices[0];\n    speech.lang = this.settings.language;\n\n    window.speechSynthesis.speak(speech);\n  }\n\n  setVoice(index) {\n    if (index < 0 || index >= this.voices.length) {\n      console.log('Invalid voice index.');\n      return;\n    }\n    this.settings.ttsVoiceIndex = index;\n  }\n\n  setLanguage(language) {\n    this.settings.language = language;\n  }\n\n  enableTTS(enable = true) {\n    this.settings.ttsEnabled = enable;\n  }\n\n  enableAudio(enable = true) {\n    this.settings.audioEnabled = enable;\n  }\n\n  processMessages(message) {\n    const now = new Date();\n    const messageDate = new Date(message.ctime);\n    const timeDiff = (now.getTime() - messageDate.getTime()) / 1000;\n\n    // if the say message is older than 10 seconds, don't process it\n    if (timeDiff > 10) {\n      // TODO: better to check UUID of processedMessages\n      // console.log('Message is too old to be processed for TTS.');\n      return;\n    }\n\n    if (message.text.startsWith('/say')) {\n\n      // TODO: move this to above the processedMessages() delegation\n      let processedCards = bp.get('processedCards') || [];\n\n      console.log('say message.uuid', message.uuid);\n      console.log('processedCards', processedCards);\n\n      // check if message.uuid is already in processedCards, if so, return\n      if (processedCards.includes(message.uuid)) {\n        console.log('Message already processed for TTS.');\n        //return;\n      }\n\n      // push message.uuid to processedCards\n      processedCards.push(message.uuid);\n\n      // truncate processedCards to 1000 items\n      if (processedCards.length > 1000) {\n        processedCards = processedCards.slice(-1000);\n      }\n\n      // store processedCards in local storage\n      bp.set('processedCards', processedCards);\n\n      const parts = message.text.split(' ');\n      parts.shift(); // Remove '/say'\n      const textToSpeak = parts.join(' ');\n\n      if (message.card && typeof message.card.voiceIndex !== 'undefined') {\n        const originalVoiceIndex = this.settings.ttsVoiceIndex;\n        this.setVoice(message.card.voiceIndex);\n        this.speak(textToSpeak || 'I have nothing to say');\n        this.setVoice(originalVoiceIndex); // Restore original voice index\n      } else {\n        this.speak(textToSpeak || 'I have nothing to say');\n      }\n    }\n  }\n}\n\n/*\n// Example usage:\nconst say = new Say({ audioEnabled: true, ttsEnabled: true, ttsVoiceIndex: 0, language: 'en-US' });\nsay.processMessages({\n  ctime: new Date().toISOString(),\n  text: '/say Hello, how are you today?',\n  card: { voiceIndex: 1 }\n});\n*/"],"names":["Say","constructor","bp","settings","this","audioEnabled","ttsEnabled","ttsVoiceIndex","language","voices","init","window","available","loadVoices","speechSynthesis","onvoiceschanged","bind","console","log","say","speak","on","message","text","getVoices","audio_enabled","speech","SpeechSynthesisUtterance","voice","lang","setVoice","index","length","setLanguage","enableTTS","enable","enableAudio","processMessages","now","Date","messageDate","ctime","getTime","startsWith","processedCards","get","uuid","includes","push","slice","set","parts","split","shift","textToSpeak","join","card","voiceIndex","originalVoiceIndex"],"mappings":"AAAe,MAAMA,EACnB,WAAAC,CAAYC,EAAIC,EAAW,IACzBC,KAAKF,GAAKA,EACVE,KAAKD,SAAW,CACdE,aAAcF,EAASE,eAAgB,EACvCC,WAAYH,EAASG,aAAc,EACnCC,cAAeJ,EAASI,eAAiB,EACzCC,SAAUL,EAASK,UAAY,SAEjCJ,KAAKK,OAAS,EAClB,CAEE,IAAAC,GACM,oBAAqBC,QACvBP,KAAKQ,WAAY,EACjBR,KAAKS,kBAC0C,IAApCC,gBAAgBC,kBACzBD,gBAAgBC,gBAAkBX,KAAKS,WAAWG,KAAKZ,SAGzDA,KAAKQ,WAAY,EACjBK,QAAQC,IAAI,oDAEdd,KAAKF,GAAGiB,IAAMf,KAAKgB,MAAMJ,KAAKZ,MAC9BA,KAAKF,GAAGmB,GAAG,eAAgB,sBAAuBC,IAChDlB,KAAKgB,MAAME,EAAQC,QAEzB,CAEE,UAAAV,GACET,KAAKK,OAASK,gBAAgBU,WAClC,CAEE,KAAAJ,CAAMG,GAEJ,IAAKnB,KAAKQ,YAAcR,KAAKD,SAASE,eAAiBD,KAAKD,SAASG,WAEnE,YADAW,QAAQC,IAAI,kDAId,IAAKd,KAAKF,GAAGC,SAASsB,cAEpB,YADAR,QAAQC,IAAI,kCAId,MAAMQ,EAAS,IAAIC,yBAAyBJ,GAC5CG,EAAOE,MAAQxB,KAAKK,OAAOL,KAAKD,SAASI,gBAAkBH,KAAKK,OAAO,GACvEiB,EAAOG,KAAOzB,KAAKD,SAASK,SAE5BG,OAAOG,gBAAgBM,MAAMM,EACjC,CAEE,QAAAI,CAASC,GACHA,EAAQ,GAAKA,GAAS3B,KAAKK,OAAOuB,OACpCf,QAAQC,IAAI,wBAGdd,KAAKD,SAASI,cAAgBwB,CAClC,CAEE,WAAAE,CAAYzB,GACVJ,KAAKD,SAASK,SAAWA,CAC7B,CAEE,SAAA0B,CAAUC,GAAS,GACjB/B,KAAKD,SAASG,WAAa6B,CAC/B,CAEE,WAAAC,CAAYD,GAAS,GACnB/B,KAAKD,SAASE,aAAe8B,CACjC,CAEE,eAAAE,CAAgBf,GACd,MAAMgB,EAAM,IAAIC,KACVC,EAAc,IAAID,KAAKjB,EAAQmB,OAIrC,MAHkBH,EAAII,UAAYF,EAAYE,WAAa,IAG5C,KAMXpB,EAAQC,KAAKoB,WAAW,QAAS,CAGnC,IAAIC,EAAiB1C,GAAG2C,IAAI,mBAAqB,GAEjD5B,QAAQC,IAAI,mBAAoBI,EAAQwB,MACxC7B,QAAQC,IAAI,iBAAkB0B,GAG1BA,EAAeG,SAASzB,EAAQwB,OAClC7B,QAAQC,IAAI,sCAKd0B,EAAeI,KAAK1B,EAAQwB,MAGxBF,EAAeZ,OAAS,MAC1BY,EAAiBA,EAAeK,aAIlC/C,GAAGgD,IAAI,iBAAkBN,GAEzB,MAAMO,EAAQ7B,EAAQC,KAAK6B,MAAM,KACjCD,EAAME,QACN,MAAMC,EAAcH,EAAMI,KAAK,KAE/B,GAAIjC,EAAQkC,WAA2C,IAA5BlC,EAAQkC,KAAKC,WAA4B,CAClE,MAAMC,EAAqBtD,KAAKD,SAASI,cACzCH,KAAK0B,SAASR,EAAQkC,KAAKC,YAC3BrD,KAAKgB,MAAMkC,GAAe,yBAC1BlD,KAAK0B,SAAS4B,EACtB,MACQtD,KAAKgB,MAAMkC,GAAe,wBAElC,CACA"}