{"version":3,"file":"desktop.js","sources":["../../../apps/based/desktop/lib/Folder.js","../../../apps/based/desktop/lib/shortcuts/createShortCut.js","../../../apps/based/desktop/lib/appList.js","../../../apps/based/desktop/lib/client.js","../../../apps/based/desktop/lib/defaultDesktopShortcuts.js","../../../apps/based/desktop/desktop.js","../../../apps/based/desktop/lib/File.js","../../../apps/based/desktop/lib/shortcuts/addShortCut.js","../../../apps/based/desktop/lib/addFolder.js","../../../apps/based/desktop/lib/shortcuts/removeShortCut.js","../../../apps/based/desktop/lib/shortcuts/arrangeShortCuts.js","../../../apps/based/desktop/lib/contextmenu/setupContextMenu.js","../../../apps/based/desktop/lib/contextmenu/showContextMenu.js","../../../apps/based/desktop/lib/viewSource.js","../../../apps/based/desktop/lib/shortcuts/renameShortCut.js","../../../apps/based/desktop/lib/apps/addApp.js","../../../apps/based/desktop/lib/apps/removeApp.js"],"sourcesContent":["export default class Folder {\n    constructor(data, options = {}) {\n        this.data = data;\n        this.parentElement = options.parentElement;\n        this.desktop = options.desktop;\n        this.depth = options.depth;\n        this.options = options;\n    }\n\n    render(app = {}) {\n    \n        app = this.data;\n        // Create the shortcut element\n        const folderDiv = document.createElement('div');\n        folderDiv.className = `folder ${app.class || ''}`;\n\n        if (this.depth > 1) {\n            folderDiv.classList.add(`hidden`);\n        }\n        folderDiv.classList.add('icon', 'shortcut');   \n        const anchor = document.createElement('a');\n        // anchor.href = app.href || `#icon_dock_${app.name}`;\n\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = 'desktop/assets/images/icons/icon_folder_64.png';\n\n        const title = document.createElement('span');\n        title.className = 'title';\n        title.textContent = app.label || app.name || app.id;\n\n        anchor.appendChild(image);\n        anchor.appendChild(title);\n        folderDiv.appendChild(anchor);\n\n        // folderDiv.onclick = () => this.openFolder(); // Placeholder for folder opening logic\n\n        $(folderDiv).draggable({\n            containment: 'parent' // Confine dragging within the parent container\n        });\n\n        // folderDiv click handler\n        folderDiv.addEventListener('mousedown', (e) => {\n           this.options.onOpen();\n        });\n\n        this.parentElement.appendChild(folderDiv);\n\n        // Recursively render each child in this folder\n        // this.data.children.forEach(child => this.desktop.renderNode(child, folderDiv, this.depth + 1));\n    }\n\n    open () {\n        // Logic to open the folder\n           this.options.onOpen();\n    }\n}\n","export default function createShortcut() {\n    if (!this.createShortCutWindow) {\n        let shortCutHtml = `\n        <div class=\"bp-create-shortcut-container\">\n            <form id=\"create-shortcut-form\" action=\"#\" method=\"post\">\n                <div class=\"bp-form-group\">\n                    <label>Shortcut Type:</label>\n                    <div class=\"bp-shortcut-type\">\n                        <label><input type=\"radio\" name=\"shortcut-type\" value=\"url\" checked> URL</label>\n                        <label><input type=\"radio\" name=\"shortcut-type\" value=\"app\"> App</label>\n                        <label><input type=\"radio\" name=\"shortcut-type\" value=\"buddyscript\"> Buddyscript</label>\n                    </div>\n                </div>\n                <div class=\"bp-form-group bp-shortcut-examples\">\n                    <!-- radio group of examples -->\n                    <label>Examples:</label>\n                    <div class=\"bp-shortcut-examples-list\">\n                        <label><input type=\"radio\" name=\"shortcut-example\" value=\"url\" checked>Open a Website</label>\n                        <label><input type=\"radio\" name=\"shortcut-example\" value=\"app\">Open your own Pond</label>\n                        <label><input type=\"radio\" name=\"shortcut-example\" value=\"buddyscript\">Run a Buddyscript</label>\n                    </div>\n                </div>\n                <div class=\"bp-form-group\">\n                    <label for=\"shortcut-name\">Shortcut Name:</label>\n                    <input type=\"text\" id=\"shortcut-name\" name=\"shortcut-name\" required>\n                </div>\n                <div class=\"bp-form-group bp-app-select-group\" style=\"display: none;\">\n                    <label for=\"shortcut-apps\">Select App:</label>\n                    <select id=\"shortcut-apps\" name=\"shortcut-apps\">\n                        <option value=\"\">Select App</option>\n                        ${Object.keys(this.bp.apps.desktop.appList).map(appName => `<option value=\"${appName}\">${this.bp.apps.desktop.appList[appName].label || appName}</option>`).join('')}\n                    </select>\n                </div>\n                <div class=\"bp-form-group bp-app-select-group\">\n                    <!-- context input, type input, output input -->\n                    <label for=\"shortcut-context\">Context:</label>\n                    <input type=\"text\" id=\"shortcut-context\" name=\"shortcut-context\" placeholder=\"Optional, e.g. 'chatWindow'\" value=\"\">\n                    <label for=\"shortcut-type\">Type:</label>\n                    <input type=\"text\" id=\"shortcut-type\" name=\"shortcut-type\" placeholder=\"Optional, e.g. 'pond'\" value=\"pond\">\n                    <label for=\"shortcut-output\">Output:</label>\n                    <input type=\"text\" id=\"shortcut-output\" name=\"shortcut-output\" placeholder=\"Optional, e.g. 'chat'\" value=\"chat\">\n                </div>\n\n                <div class=\"bp-form-group bp-url-group\">\n                    <label for=\"shortcut-url\">URL:</label>\n                    <input type=\"text\" id=\"shortcut-url\" name=\"shortcut-url\" required>\n                </div>\n\n                <div class=\"bp-form-group bp-command-group\">\n                    <label for=\"shortcut-command\">Command:</label>\n                    <input type=\"text\" id=\"shortcut-command\" name=\"shortcut-command\" required>\n                </div>\n                <div class=\"bp-form-group\">\n                    <label for=\"shortcut-icon\">Icon URL:</label>\n                    <input type=\"text\" id=\"shortcut-icon\" name=\"shortcut-icon\" placeholder=\"Optional\">\n                </div>\n                <div class=\"bp-form-group\">\n                    <label for=\"shortcut-description\">Description:</label>\n                    <textarea id=\"shortcut-description\" name=\"shortcut-description\" placeholder=\"Optional\"></textarea>\n                </div>\n                <div class=\"bp-form-group bp-form-actions\">\n                    <button type=\"submit\" class=\"bp-btn bp-btn-primary bp-create-shortcut-btn\">Create Shortcut</button>\n                    <button type=\"button\" class=\"bp-btn bp-btn-secondary\" id=\"cancel-shortcut\">Cancel</button>\n                </div>\n            </form>\n        </div>`;\n\n        this.createShortCutWindow = this.bp.apps.ui.windowManager.createWindow({\n            id: 'create-shortcut',\n            title: 'Create Shortcut',\n            icon: 'desktop/assets/images/icons/icon_console_64.png',\n            x: 250,\n            y: 75,\n            width: 600,\n            height: 600,\n            minWidth: 400,\n            minHeight: 300,\n            parent: $('#desktop')[0],\n            content: shortCutHtml,\n            resizable: true,\n            minimizable: true,\n            maximizable: true,\n            closable: true,\n            focusable: true,\n            maximized: false,\n            minimized: false,\n            onClose: () => {\n                // Clean up if needed\n                this.createShortCutWindow = null; // Clear reference on close\n            }\n        });\n\n        // Toggle app dropdown visibility based on shortcut type\n        $('#create-shortcut-form input[name=\"shortcut-type\"]').on('change', (e) => {\n            const shortcutType = e.target.value;\n            const appSelectGroup = $('.bp-app-select-group');\n            const commandGroup = $('.bp-command-group');\n            const urlGroup = $('.bp-url-group');\n            if (shortcutType === 'app') {\n                appSelectGroup.show();\n                commandGroup.hide();\n                urlGroup.hide();\n                $('#shortcut-command').prop('required', false);\n                $('#shortcut-apps').prop('required', true);\n            }\n\n            if (shortcutType === 'buddyscript') {\n                appSelectGroup.hide();\n                commandGroup.show();\n                urlGroup.hide();\n                $('#shortcut-command').prop('required', true);\n                $('#shortcut-apps').prop('required', false);\n            }\n\n            if (shortcutType === 'url') {\n                urlGroup.show();\n                appSelectGroup.hide();\n                commandGroup.hide();\n                $('#shortcut-command').prop('required', false);\n                $('#shortcut-apps').prop('required', false);\n            }\n        });\n\n        $('#create-shortcut-form').on('submit', (e) => {\n            e.preventDefault();\n            return false;\n        });\n\n        $('.bp-create-shortcut-btn').on('click', async (e) => {\n            e.preventDefault();\n            const shortcutType = $('input[name=\"shortcut-type\"]:checked').val();\n            const name = $('#shortcut-name').val().trim();\n            const appName = $('#shortcut-apps').val();\n            const command = $('#shortcut-command').val().trim();\n            let icon = $('#shortcut-icon').val().trim();\n            const description = $('#shortcut-description').val().trim();\n\n            // Validation\n            if (!name) {\n                alert('Shortcut Name is required.');\n                return;\n            }\n            if (shortcutType === 'app' && !appName) {\n                alert('Please select an app.');\n                return;\n            }\n            if ((shortcutType === 'buddyscript') && !command) {\n                alert('Command is required for URL or Buddyscript shortcuts.');\n                return;\n            }\n            if (shortcutType === 'url' && !$('#shortcut-url').val().trim()) {\n                alert('URL is required for URL shortcuts.');\n                return;\n            }\n\n            let onClick = null;\n\n            if (shortcutType === 'app') {\n\n                let context = $('#shortcut-context').val().trim() || '';\n                console.log('appNameappName', appName)\n                if (!icon) {\n                    // attempt default app icon\n                    icon = this.bp.apps.desktop.appList[appName]?.icon || 'desktop/assets/images/icons/icon_default_64.png';    \n                }\n                onClick = () => {\n                    bp.open(appName, { context: context });\n                }\n            }\n\n            if (shortcutType === 'buddyscript') {\n\n\n                onClick = () => {\n                    if (command) {\n                        // Execute the Buddyscript command\n\n                        let bs = this.bp.apps.buddyscript.parseCommand(command);\n                        console.log('got back buddyscript command', bs);\n                        if (bs.pipe) {\n                        //if (now - messageTime < 10000) {\n                        // pipeable / immediate run commands should only persist for 10 seconds\n                            bs.pipe();\n                        }\n\n                    } else {\n                        alert('Please enter a valid Buddyscript command.');\n                    }\n                }\n\n            }\n\n            if (shortcutType === 'url') {\n                const url = $('#shortcut-url').val().trim();\n\n                /*\n                // going to be challeging to pull off with un-auth proxy\n                // proxy requires a valid session for security reasons\n                // fetch the .ico from url using proxy\n                let metadata = null;\n                try {\n                    metadata = await fetchProxy.call(this, url, true, true);\n                } catch (error) {\n                    console.error('Error fetching URL metadata:', error);\n                    alert('Failed to fetch URL metadata. Please check the console for details.');\n                    return;\n                }\n\n                console.log('Fetched metadata:', metadata);\n                */\n                \n                onClick = () => {\n                    if (url) {\n                        window.open(url, '_blank');\n                    } else {\n                        alert('Please enter a valid URL.');\n                    }\n                };\n            }\n\n            // Create the shortcut object\n            const shortcut = {\n                name: name,\n                label: name,\n                shortcutType: shortcutType,\n                icon: icon || 'desktop/assets/images/icons/icon_default_64.png', // Default icon if none provided\n                description: description || '',\n                target: shortcutType === 'app' ? this.bp.apps.desktop.appList[appName]?.onClick || `bp.open('${appName}')` : command,\n                onClick: onClick,\n                parameters: {\n                    icon: icon || '',\n                    description: description || ''\n                }\n            };\n\n            try {\n                saveShortCut.call(this, shortcut);\n            } catch (error) {\n                console.error('Error creating shortcut:', error);\n                alert('Failed to create shortcut. Please check the console for details.');\n            }\n            return false;\n        });\n\n        $('#cancel-shortcut').on('click', () => {\n            this.createShortCutWindow.close();\n        });\n    } else {\n        this.createShortCutWindow.focus();\n        this.createShortCutWindow.restore();\n    }\n}\n\nfunction saveShortCut(shortcut) {\n    console.log('Saving shortcut:', shortcut);\n    // Save to localStorage\n    const shortcuts = JSON.parse(localStorage.getItem('bp-shortcuts') || '{}');\n    shortcuts[shortcut.name] = {\n        label: shortcut.label,\n        shortcutType: shortcut.shortcutType,\n        target: shortcut.target,\n        icon: shortcut.icon,\n        description: shortcut.parameters.description\n    };\n    // TODO: use app API instead\n    // localStorage.setItem('bp-short', JSON.stringify(shortcuts));\n\n    // Call addShortCut to create the shortcut on the desktop\n    this.bp.apps.desktop.addShortCut({\n        name: shortcut.name,\n        label: shortcut.label,\n        icon: shortcut.icon,\n        description: shortcut.description,\n        textIcon: !shortcut.icon ? shortcut.label.charAt(0).toUpperCase() : null\n    }, {\n      onClick: shortcut.onClick,\n\n    });\n\n    this.arrangeShortcuts(2, {\n        rowWidth: 80,\n        rowHeight: 100,\n        x: 0, // TODO: we should start from the x and y position in our calculations\n        y: 0,\n        ignoreSavedPosition: false\n    });    // Close the window\n    this.createShortCutWindow.close();\n}\n\n\nasync function fetchProxy(url, parseMetadata, showError) {\n    //console.log('Fetching via proxy:', url);\n    let proxyUrl = `${buddypond.buddyProxy}/api/fetch-metadata?url=${encodeURIComponent(url)}`;\n    console.log('Proxy URL:', proxyUrl);\n\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 6000); // 6 seconds\n\n    try {\n        const response = await fetch(proxyUrl, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            'Authorization': `Bearer ${buddypond.qtokenid}`,\n            'x-me': buddypond.me\n            },\n            signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        if (!response.ok) {\n            throw new Error(`Proxy request failed: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        //console.log('Proxy response:', data);\n        if (parseMetadata) {\n            if (data.metadata) {\n                //console.log('Parsed metadata:', data.metadata);\n                return data.metadata;\n            } else {\n                throw new Error('No metadata found in proxy response');\n            }\n        }\n    }\n    catch (error) {\n        clearTimeout(timeoutId);\n        console.error('Error fetching via proxy:', error);\n        if (showError) {\n            alert(`Error fetching URL: ${error.message}`);\n        }\n        throw error; // Re-throw the error for further handling\n    }\n    return null; // Return null if no metadata is found\n                \n}","export default {\n  \"admin\": {\n    name: 'admin',\n    icon: `desktop/assets/images/icons/icon_profile_64.png`,\n    label: 'Admin',\n    \"onClick\": \"bp.open('admin')\",\n    adminOnly: true,\n  },\n  \"profile\": {\n    \"icon\": \"desktop/assets/images/icons/icon_profile_64.png\",\n    \"label\": \"My Profile\",\n    \"description\": \"Manage your profile and settings\",\n    \"onClick\": \"bp.open('profile')\",\n    \"categories\": [\"social\", \"productivity\"]\n  },\n  \"buddylist\": {\n    \"icon\": \"desktop/assets/images/icons/icon_profile_64.png\",\n    \"label\": \"BuddyList\",\n    \"description\": \"View and manage your contacts\",\n    \"onClick\": \"bp.open('buddylist')\",\n    \"categories\": [\"social\", \"community\"]\n  },\n  \"pad\": {\n    \"icon\": \"desktop/assets/images/icons/icon_pad_64.png\",\n    \"label\": \"Buddy Apps\",\n    \"description\": \"Create hosted Apps for Buddy Pond\",\n    \"onClick\": \"bp.open('pad')\",\n    \"categories\": [\"productivity\", \"creative\", \"community\"]\n  },\n  \"pond\": {\n    \"icon\": \"desktop/assets/images/icons/icon_pond_64.png\",\n    \"label\": \"Ponds\",\n    \"description\": \"Explore shared content or communities\",\n    \"onClick\": \"bp.open('pond')\",\n    \"categories\": [\"community\", \"social\"]\n  },\n  \"file-explorer\": {\n    \"icon\": \"desktop/assets/images/icons/icon_file-explorer_64.png\",\n    \"label\": \"Buddy Files\",\n    \"description\": \"Browse and manage your files\",\n    \"onClick\": \"bp.open('file-explorer')\",\n    \"desktopOnly\": true,\n    \"categories\": [\"files\", \"productivity\"]\n  },\n  \"file-viewer\": {\n    \"icon\": \"desktop/assets/images/icons/icon_file-viewer_64.png\",\n    \"label\": \"File Viewer\",\n    \"description\": \"View files in various formats\",\n    \"onClick\": \"bp.open('file-viewer')\",\n    \"categories\": [\"files\", \"productivity\"]\n  },\n  \"minipaint\": {\n    \"icon\": \"desktop/assets/images/icons/icon_minipaint_64.png\",\n    \"label\": \"miniPaint\",\n    \"author\": \"ViliusL\",\n    \"description\": \"Advanced image editor to create and edit images\",\n    \"onClick\": \"bp.open('minipaint')\",\n    \"categories\": [\"art\", \"creative\"]\n  },\n  \"paint\": {\n    \"icon\": \"desktop/assets/images/icons/icon_paint_64.png\",\n    \"label\": \"Paint\",\n    \"author\": \"Isaiah Odhner\",\n    \"description\": \"A Classic Retro Style Image Editor\",\n    \"onClick\": \"bp.open('paint')\",\n    \"categories\": [\"art\", \"creative\"],\n    \"chatWindowButton\": ['buddy', 'pond'] // adds this app as a button in the chat window, array is types of windows to add it to\n  },\n  \"painterro\": {\n    \"icon\": \"desktop/assets/images/icons/icon_painterro_64.png\",\n    \"label\": \"Painterro\",\n    \"author\": \"Ivan Borshchov\",\n    \"description\": \"Easy to use image editing tool\",\n    \"onClick\": \"bp.open('painterro')\",\n    \"categories\": [\"art\", \"creative\"]\n  },\n  \"patatap\": {\n    \"icon\": \"desktop/assets/images/icons/icon_patatap_64.png\",\n    \"label\": \"Patatap\",\n    \"description\": \"Create music and animations with touch and keyboard input\",\n    \"onClick\": \"bp.open('patatap')\",\n    \"categories\": [\"audio\", \"music\", \"creative\"],\n    \"author\": \"Jono Brandel\"\n  },\n  /*\n  \"sandspiel\": {\n    \"icon\": \"desktop/assets/images/icons/icon_sandspiel_64.png\",\n    \"label\": \"Sandspiel\",\n    \"description\": \"A creative sandbox game with sand and physics\",\n    \"onClick\": \"bp.open('sandspiel')\",\n    \"categories\": [\"games\", \"creative\"]\n  },\n  */\n  \"soundrecorder\": {\n    \"icon\": \"desktop/assets/images/icons/icon_soundrecorder_64.png\",\n    \"label\": \"Sound Recorder\",\n    \"author\": \"Isaiah Odhner\",\n    \"description\": \"Record and save audio clips\",\n    \"onClick\": \"bp.open('soundrecorder')\",\n    \"desktopOnly\": true,\n    \"categories\": [\"audio\", \"creative\"]\n  },\n  \"youtube\": {\n    \"icon\": \"desktop/assets/images/icons/icon_interdimensionalcable_64.png\",\n    \"label\": \"IDC Cable\",\n    \"description\": \"Watch and browse YouTube videos\",\n    \"onClick\": \"bp.open('youtube')\",\n    \"categories\": [\"entertainment\", \"media\"]\n  },\n  \"camera\": {\n    \"icon\": \"desktop/assets/images/icons/icon_camera_64.png\",\n    \"label\": \"Camera\",\n    \"description\": \"Capture photos or videos\",\n    \"onClick\": \"bp.open('camera')\",\n    \"categories\": [\"media\", \"creative\"]\n  },\n  \"piano\": {\n    \"icon\": \"desktop/assets/images/icons/icon_piano_64.png\",\n    \"label\": \"Piano\",\n    \"description\": \"Play a virtual piano keyboard\",\n    \"onClick\": \"bp.open('piano')\",\n    \"desktopOnly\": true,\n    \"categories\": [\"music\", \"creative\"]\n  },\n  \"fluid-simulation\": {\n    \"icon\": \"desktop/assets/images/icons/icon_fluidsimulation_64.png\",\n    \"author\": \"Pavel Dobryakov\",\n    \"label\": \"Fluid Simulation\",\n    \"description\": \"Interact with a fluid dynamics simulation\",\n    \"onClick\": \"bp.open('fluid-simulation')\",\n    \"categories\": [\"creative\", \"entertainment\"]\n  },\n  \"sampler\": {\n    \"icon\": \"desktop/assets/images/icons/icon_midifighter_64.png\",\n    \"label\": \"Sampler\",\n    \"description\": \"Create and mix audio samples\",\n    \"onClick\": \"bp.open('sampler')\",\n    \"categories\": [\"audio\", \"music\", \"creative\"]\n  },\n  \"audio-visual\": {\n    \"icon\": \"desktop/assets/images/icons/icon_visuals_64.png\",\n    \"author\": \"lachlanmaclean\",\n    \"label\": \"Audio Visuals\",\n    \"description\": \"Experience audio-responsive visuals\",\n    \"onClick\": \"bp.open('audio-visual')\",\n    \"categories\": [\"creative\", \"entertainment\", \"audio\"]\n  },\n  \"chalkboard\": {\n    \"icon\": \"desktop/assets/images/icons/icon_chalkboard_64.png\",\n    \"label\": \"Chalkboard\",\n    \"description\": \"Draw and write on a virtual chalkboard\",\n    \"onClick\": \"bp.open('chalkboard')\",\n    \"categories\": [\"art\", \"creative\"],\n    \"chatWindowButton\": ['buddy', 'pond'], // adds this app as a button in the chat window, array is types of windows to add it to\n    \"chatButton\": {\n        text: 'Chalkboard',\n        image: 'desktop/assets/images/icons/icon_chalkboard_64.png',\n        onclick: async (ev) => {\n            let context = ev.target.dataset.context;\n            let type = ev.target.dataset.type;\n            // Open the image search window\n            bp.open('chalkboard', {\n                output: type || 'buddy',\n                context: context,\n            });\n            return false;\n        }\n    }    \n  },\n  \"coin\": {\n    \"icon\": \"desktop/assets/images/icons/icon_coin_64.png\",\n    \"label\": \"Buddy Coins\",\n    \"description\": \"Manage your virtual currency\",\n    \"onClick\": \"bp.open('coin')\",\n    \"categories\": [\"finance\"]\n  },\n  \"portfolio\": {\n    \"icon\": \"desktop/assets/images/icons/icon_portfolio_64.png\",\n    \"label\": \"Portfolio\",\n    \"description\": \"Track your investments and assets\",\n    \"onClick\": \"bp.open('portfolio')\",\n    \"categories\": [\"finance\"]\n  },\n  \"audio-player\": {\n    \"icon\": \"desktop/assets/images/icons/icon_audio-player_64.png\",\n    \"label\": \"Audio Player\",\n    \"description\": \"Play and manage audio files\",\n    \"onClick\": \"bp.open('audio-player')\",\n    \"categories\": [\"media\", \"audio\"]\n  },\n  \"mantra\": {\n    \"icon\": \"desktop/assets/images/icons/icon_mantra_64.png\",\n    \"label\": \"Mantra\",\n    \"description\": \"Play the Mantra game\",\n    \"categories\": [\"games\"]\n  },\n  \"minesweeper\": {\n    \"icon\": \"desktop/assets/images/icons/icon_minesweeper_64.png\",\n    \"label\": \"Minesweeper\",\n    \"description\": \"Classic Minesweeper puzzle game\",\n    \"categories\": [\"games\"]\n  },\n  \"emulator-nes\": {\n    \"icon\": \"desktop/assets/images/icons/icon_nes_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'nes',\n    \"label\": \"NES\",\n    \"description\": \"Play Nintendo Entertainment System games\",\n    \"options\": { \"context\": \"nes\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"emulator-sega\": {\n    \"icon\": \"desktop/assets/images/icons/icon_sega_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'sega',\n    \"label\": \"Sega\",\n    \"description\": \"Play Sega console games\",\n    \"options\": { \"context\": \"sega\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"emulator-snes\": {\n    \"icon\": \"desktop/assets/images/icons/icon_snes_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'snes',\n    \"label\": \"SNES\",\n    \"description\": \"Play Super Nintendo games\",\n    \"options\": { \"context\": \"snes\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"emulator-atari2600\": {\n    \"icon\": \"desktop/assets/images/icons/icon_atari2600_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'atari2600',\n    \"label\": \"Atari 2600\",\n    \"description\": \"Play Atari 2600 games\",\n    \"options\": { \"context\": \"atari2600\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"emulator-n64\": {\n    \"icon\": \"desktop/assets/images/icons/icon_n64_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'n64',\n    \"label\": \"n64\",\n    \"description\": \"Play Nintendo 64 games\",\n    \"options\": { \"context\": \"n64\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"solitaire\": {\n    \"icon\": \"desktop/assets/images/icons/icon_solitaire_64.png\",\n    \"label\": \"Solitaire\",\n    \"description\": \"Classic Solitaire card game\",\n    \"categories\": [\"games\"]\n  },\n  \"globe\": {\n    \"icon\": \"desktop/assets/images/icons/icon_globe_64.png\",\n    \"label\": \"Globe\",\n    \"description\": \"Visualize global network data\",\n    \"categories\": [\"tools\"]\n  },\n  \"hacker-typer\": {\n    \"icon\": \"desktop/assets/images/icons/icon_hacker-typer_64.png\",\n    \"label\": \"Hack Typer\",\n    \"description\": \"Simulate hacking with a typing game\",\n    \"categories\": [\"tools\", \"games\"]\n  },\n  \"hex-editor\": {\n    \"icon\": \"desktop/assets/images/icons/icon_hex-editor_64.png\",\n    \"label\": \"Hex Editor\",\n    \"description\": \"Edit files in hexadecimal format\",\n    \"categories\": [\"tools\", \"productivity\"]\n  },\n  \"maps\": {\n    \"icon\": \"desktop/assets/images/icons/icon_maps_64.png\",\n    \"label\": \"Maps\",\n    \"description\": \"Access mapping and navigation tools\",\n    \"categories\": [\"tools\"]\n  },\n  \"spellbook\": {\n    \"icon\": \"desktop/assets/images/icons/icon_spellbook_64.png\",\n    \"label\": \"Spellbook\",\n    \"description\": \"Manage scripts or commands\",\n    \"categories\": [\"tools\", \"productivity\"]\n  }\n}","const client = {};\n\nclient.incrementAppInstallCount = async function (appName) {\n    if (!appName) {\n        console.error('No app name provided for incrementing install count');\n        return;\n    }\n\n    // if appName is not an array, wrap it in an array\n    if (!Array.isArray(appName)) {\n        appName = [appName];\n    }\n\n    // Simulate an API call to increment the install count\n    try {\n        await fetch(`${buddypond.appsEndpoint}/apps/install`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ appIds: appName }),\n        });\n        console.log(`Install count for app ${appName} incremented successfully.`);\n    } catch (error) {\n        console.error(`Failed to increment install count for app ${appName}:`, error);\n    }\n}\n\nclient.getAppsStats = async function () {\n    try {\n        const response = await fetch(`${buddypond.appsEndpoint}/apps/stats`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Failed to fetch app stats:', error);\n        return null;\n    }\n}\n\nexport default client;","export default function defaultDesktopShortcuts() {\n\n    // check if we have default apps, if not initialize them\n    let installedApps = this.bp.settings.apps_installed || {};\n    if (Object.keys(installedApps).length === 0) {\n        let defaultAppList = [\n            'profile',\n            'buddylist',\n            'pad',\n            'pond',\n            'file-explorer',\n            'youtube',\n            'fluid-simulation',\n            'coin',\n            'portfolio',\n        ];\n\n        defaultAppList.forEach(appName => {\n            let app = this.bp.apps.desktop.appList[appName];\n            if (app) {\n                console.log(`Adding default app shortcut: ${appName}`);\n                // console.log(app);\n                installedApps[appName] = app;\n\n                // this.bp.apps.desktop.addShortCut(app);\n            } else {\n                console.warn(`App ${appName} not found in desktop app list.`);\n            }\n        });\n\n        this.bp.set('apps_installed', installedApps);\n\n        // update the count of installed apps\n        this.client.incrementAppInstallCount(Object.keys(installedApps));\n\n    }\n\n    // let installedApps = bp.settings.apps_installed || {};\n    if (Object.keys(installedApps).length > 0) {\n        Object.keys(installedApps).forEach(appName => {\n            let app = installedApps[appName];\n            if (app) {\n                // console.log(`Adding shortcut for installed app: ${appName}`, app);\n                bp.apps.desktop.addShortCut({\n                    name: appName,\n                    ...app\n                }, {\n                    onClick: () => {\n                        bp.open(app.app || appName, { context: app.context });\n                    }\n                });\n            }\n        });\n\n    }\n\n}","/* Desktop.js - Buddy Pond - Marak Squires - 2023 */\n\n// import Folder from '../file-explorer/Folder/Folder.js';\nimport Folder from \"./lib/Folder.js\";\nimport BPFile from \"./lib/File.js\";\n\n// shortcuts\nimport addShortCut from \"./lib/shortcuts/addShortCut.js\";\nimport addFolder from \"./lib/addFolder.js\";\nimport removeShortCut from \"./lib/shortcuts/removeShortCut.js\";\nimport createShortCut from \"./lib/shortcuts/createShortCut.js\";\nimport renameShortCut from \"./lib/shortcuts/renameShortCut.js\";\nimport arrangeShortcuts from \"./lib/shortcuts/arrangeShortCuts.js\";\n\n// apps\nimport appList from \"./lib/appList.js\";\nimport addApp from \"./lib/apps/addApp.js\";\nimport removeApp from \"./lib/apps/removeApp.js\";\n\n\n// context menu(s)\nimport setupContextMenu from \"./lib/contextmenu/setupContextMenu.js\";\nimport showContextMenu from \"./lib/contextmenu/showContextMenu.js\";\n\n// utils\nimport buildJsTreeData from \"../file-explorer/lib/buildJsTreeData.js\";\nimport viewSource from \"./lib/viewSource.js\";\n\nimport client from './lib/client.js'; // client api for desktop\n\n// default data\nimport defaultDesktopShortcuts from \"./lib/defaultDesktopShortcuts.js\";\n\nexport default class Desktop {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n\n        this.apps = {}; // registered apps\n\n        this.folders = [];\n\n        // Setup containers for the desktop and shortcuts\n        this.container = document.createElement('div');\n        this.container.id = 'desktop-container';\n        this.container.className = 'desktop-container';\n\n        this.shortCutsContainer = document.createElement('div');\n        this.shortCutsContainer.id = 'desktop-shortcuts-container';\n        this.shortCutsContainer.className = 'desktop-shortcuts-container';\n        this.container.appendChild(this.shortCutsContainer);\n\n        // Set parent container\n        this.parent = options.parent || document.body;\n        this.parent.appendChild(this.container);\n\n        this.enableShortcutDragging = true;\n\n        this.enabledChatWindowButtons = [];\n\n        if (typeof options.enableShortcutDragging === 'boolean') {\n            this.enableShortcutDragging = options.enableShortcutDragging;\n        }\n\n        // Context menu for desktop\n        this.setupContextMenu();\n    }\n\n    async init() {\n        await this.bp.load('/v5/apps/based/desktop/desktop.css');\n\n        // Used for parsing shortcuts, not needed ( for now )\n        //let yaml = await this.bp.importModule('/v5/apps/based/ui/vendor/js-yaml.min.js', {}, false);\n        //this.yaml = yaml.jsYamlDefault;\n\n        // Render the default shortcuts\n        defaultDesktopShortcuts.call(this);\n\n        /*\n        if (this.bp.settings.wallpaper_url) {\n            // won't work unless desktop is already loaded\n            this.bp.apps.desktop.setWallpaper(this.bp.settings.wallpaper_url);\n        } else {\n            this.bp.apps.wallpaper.wallpaperManager.active = this.bp.settings.wallpaper_name || 'solid';\n            this.bp.apps.wallpaper.wallpaperManager.start();\n        }\n        */\n\n        // check if there is a wallpaper_url\n        /*\n        if (this.bp.settings.wallpaper_url) {\n            this.setWallpaper(this.bp.settings.wallpaper_url);\n        }\n        */\n\n        // console.log('this.bp.settings.active_theme', this.bp.settings.active_theme)\n        /*\n        if (this.bp.settings.active_theme) {\n            // alert(this.bp.settings.active_theme);\n            this.bp.apps.themes.applyTheme(this.bp.settings.active_theme);\n        }\n        */\n\n        //alert(`BroadcastChannel message received: ${event.data}`);\n\n\n\n        // if (this.bp.settings.wallpaper) {\n\n        // TODO: after launch, port legacy wallpaper app\n        // this.setupWallpaper(); // Set initial wallpaper\n        return 'loaded desktop';\n    }\n\n    async load() {\n        return;\n        // get file list from cdn\n        // returns cloudFiles.files ( a flat array of relative file and directory paths )\n        let cloudFiles = await this.bp.apps.client.api.listFiles('desktop', 6);\n\n        // converts the flat array of files and directories into a nested jsTree data structure\n        // this conforms to the jsTree data format\n        /*\n\n        // Expected format of the node (there are no required fields)\n            {\n            id          : \"string\" // will be autogenerated if omitted\n            text        : \"string\" // node text\n            icon        : \"string\" // string for custom\n            state       : {\n                opened    : boolean  // is the node open\n                disabled  : boolean  // is the node disabled\n                selected  : boolean  // is the node selected\n            },\n            children    : []  // array of strings or objects\n            li_attr     : {}  // attributes for the generated LI node\n            a_attr      : {}  // attributes for the generated A node\n            }\n        */\n\n        // TODO: which will be easier to write a renderer for? flat array or tree data?\n        // We believe tree data will be easier to write a renderer for\n        let treeData = buildJsTreeData(this.bp.me, cloudFiles.files);\n        console.log('treeData', treeData);\n\n        // example shortcut format\n        let yamlStr = `\n                type: Shortcut\n                target: /path/to/application.exe\n                parameters:\n                startIn: /path/to/\n                args: \"--example-arg\"\n                icon: /path/to/icon.png\n                hotkey: Ctrl+Alt+A\n                description: \"A shortcut to an application\"\n        `;\n        // load the yaml as json\n        let doc = this.yaml.load(yamlStr);\n        console.log(doc);\n\n        // we now have treeData which is the form of a jsTree data structure\n        let userRoot = treeData[0]; // the top node is the buddyname / user root / foldername on CDN\n        console.log('userRoot', userRoot) // the desktop folder itself ( since we query for it )\n        let desktopRoot = userRoot.children[0]; // the desktop folder itself ( since we query for it )\n\n        // the problem is now we intended to render the \"Desktop\" folder contents at the top-level\n        // ( such that all its children are visible on the desktop )\n        // however; with the current structure we see a \"desktop\" folder on the desktop\n        // TODO: we need a way to render the co ntents of a folder at a top-level\n        // or change the way folders are rendered\n        // render the userRoot\n        this.renderNode(desktopRoot, this.shortCutsContainer, 0, true);\n        // arrangeDesktop(); // global ( for now remove later )\n\n        return;\n\n\n\n    }\n\n    renderNode(node, parentElement, depth = 0, skipFolderUI = false) {\n        console.log('renderNode', node, parentElement, depth, skipFolderUI);\n        if (node.children && node.children.length > 0) {\n            // Check if we should skip rendering the folder UI (used for top-level folder)\n            if (skipFolderUI) {\n                // Directly render the children in the parent element\n                node.children.forEach(child => this.renderNode(child, parentElement, depth + 1));\n            } else {\n                // It's a folder and should be rendered as such\n                const folder = new Folder(node, parentElement, this, depth);\n                folder.render();\n            }\n        } else {\n            // It's a file or shortcut\n            if (node.text.endsWith('.yml')) {\n                const shortcut = new Shortcut(node, parentElement);\n                shortcut.render();\n            } else {\n                const file = new File(node, parentElement, this, depth);\n                file.render();\n            }\n        }\n    }\n\n    toggleMute() {\n        if (this.bp.settings.audio_enabled === false) {\n            this.bp.set('audio_enabled', true);\n            $('.volumeFull').show();\n            $('.volumeMuted').hide();\n            this.bp.play('desktop/assets/audio/VOLUME-ON.mp3', { tryHard: Infinity });\n        } else {\n            this.bp.set('audio_enabled', false);\n            $('.volumeFull').hide();\n            $('.volumeMuted').show();\n        }\n    }\n\n    openFolder(folderId) {\n        console.log('openFolder', folderId);\n        // Find the folder by ID\n        const folder = this.folders.find(f => f.data.name === folderId);\n        if (folder) {\n            // Open the folder (this could be a method in the Folder class)\n            folder.open();\n        } else {\n            console.error(`Folder with ID ${folderId} not found.`);\n        }\n    }\n\n}\n\nDesktop.prototype.Folder = Folder;\nDesktop.prototype.File = BPFile;\nDesktop.prototype.addShortCut = addShortCut;\nDesktop.prototype.addFolder = addFolder;\nDesktop.prototype.removeShortCut = removeShortCut;\nDesktop.prototype.arrangeShortcuts = arrangeShortcuts;\nDesktop.prototype.setupContextMenu = setupContextMenu;\nDesktop.prototype.showContextMenu = showContextMenu;\n// Desktop.prototype.buildJsTreeData = buildJsTreeData;\nDesktop.prototype.viewSource = viewSource;\n\nDesktop.prototype.showDesktopIcons = function showDesktopIcons() {\n    this.shortCutsContainer.style.display = 'flex';\n    if (this.bp.isMobile()) {\n        this.shortCutsContainer.style.position = 'absolute';\n        this.shortCutsContainer.style.left = '0px';\n        this.shortCutsContainer.style.bottom = '0px';\n    }\n}\n\nclass Shortcut {\n    constructor(data, parentElement) {\n        this.data = data;\n        this.parentElement = parentElement;\n    }\n\n    render() {\n        const shortcutElement = document.createElement('div');\n        shortcutElement.textContent = this.data.text || this.data.id;\n        shortcutElement.className = 'shortcut';\n\n        shortcutElement.classList.add('icon', 'shortcut', 'bp-desktop-iconp');\n\n        this.parentElement.appendChild(shortcutElement);\n    }\n}\n\nDesktop.prototype.appList = appList;\nDesktop.prototype.createShortCut = createShortCut;\nDesktop.prototype.renameShortCut = renameShortCut;\nDesktop.prototype.addApp = addApp;\nDesktop.prototype.removeApp = removeApp;\nDesktop.prototype.client = client; // client api for desktop\n","\n\nexport default class File {\n    constructor(data, parentElement, desktop, depth) {\n        this.data = data;\n        console.log(\"FIKLE DATA\", data);\n        this.parentElement = parentElement;\n        this.desktop = desktop;\n        this.options = {};\n        this.depth = depth;\n    }\n\n    render(app = {}) {\n\n        app = this.data;\n\n        // Create the shortcut element\n        const el = document.createElement('div');\n        el.className = `icon shortcut ${app.class || ''}`;\n\n        if (this.depth > 1) {\n            el.classList.add(`hidden`);\n        }\n\n        el.classList.add('icon', 'shortcut');   \n\n\n        const anchor = document.createElement('a');\n        // anchor.href = app.href || `#icon_dock_${app.name}`;\n\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = app.icon;\n\n        const title = document.createElement('span');\n        title.className = 'title';\n        title.textContent = app.label || app.name || app.id;\n\n        anchor.appendChild(image);\n        anchor.appendChild(title);\n        el.appendChild(anchor);\n\n        // Adding onClick event to the .icon container\n        el.addEventListener('click', this.options.onClick);\n\n\n\n\n        // Apply jQuery UI draggable if enabled\n        if (this.enableShortcutDragging) {\n            $(el).draggable({\n                containment: 'parent' // Confine dragging within the parent container\n            });\n        }\n\n\n        this.parentElement.appendChild(el);\n\n\n        // Recursively render each child in this folder\n    }\n}\n","export default function addShortCut(app, options = {}, parent) {\n    // Default onClick behavior if not provided\n    if (typeof options.onClick !== 'function') {\n        options.onClick = () => console.log('desktop app - Missing options.onClick function', app.name);\n    }\n\n    // console.log('Adding shortcut for app:', app, 'with options:', options);\n\n    // Create the shortcut element\n    const el = document.createElement('div');\n    el.className = `icon shortcut ${app.class || ''} bp-desktop-shortcut`;\n    el.setAttribute('data-app', app.name);\n    const anchor = document.createElement('a');\n    // anchor.href = app.href || `#${app.name}`;\n\n    if (!app.textIcon) {\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = app.icon;\n        if (options.imageStyle) {\n            Object.keys(options.imageStyle).forEach(key => {\n                image.style[key] = options.imageStyle[key];\n            });\n        }\n        anchor.appendChild(image);\n    } else {\n        const image = document.createElement('div');\n        image.textContent = app.textIcon;\n        image.style.fontSize = '32px';\n        image.style.position = 'relative';\n        image.style.bottom = '10px';\n        if (options.imageStyle) {\n            Object.keys(options.imageStyle).forEach(key => {\n                image.style[key] = options.imageStyle[key];\n            });\n        }\n        anchor.appendChild(image);\n    }\n\n    const title = document.createElement('span');\n    title.className = 'title';\n    title.textContent = app.label || app.name;\n    anchor.appendChild(title);\n    el.appendChild(anchor);\n\n    // Adding onClick event to the .icon container\n    // TODO: make this event only happen on touchend\n    // the idea here is that if the element was dragged, we don't want to trigger the click event\n    // but if it was tapped, we do want to trigger the click event \n    /*\n    el.addEventListener('click', (e) => {\n        alert()\n        e.preventDefault();\n        options.onClick(e, app);\n        return false;\n    });\n    */\n\n    let pointerDownPos = null;\n    let wasDragging = false;\n\n    el.addEventListener('pointerdown', (e) => {\n        pointerDownPos = { x: e.clientX, y: e.clientY };\n        wasDragging = false;\n    });\n\n    el.addEventListener('pointermove', (e) => {\n        if (!pointerDownPos) return;\n\n        const dx = e.clientX - pointerDownPos.x;\n        const dy = e.clientY - pointerDownPos.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        // If moved more than a threshold, consider it a drag\n        if (distance > 5) {\n            wasDragging = true;\n        }\n    });\n\n    el.addEventListener('pointerup', (e) => {\n        if (!wasDragging) {\n            e.preventDefault(); // Prevent default anchor behavior\n            options.onClick(e, app);\n        }\n\n        pointerDownPos = null;\n        wasDragging = false;\n\n        // update the x/y position of the app shortcut inside this.bp.settings.installed_apps\n        let appsInstalled = this.bp.settings.apps_installed || {};\n        appsInstalled[app.name] = appsInstalled[app.name] || app;\n\n        appsInstalled[app.name].position = {\n            x: el.offsetLeft,\n            y: el.offsetTop\n        }\n\n        this.bp.set('apps_installed', appsInstalled);\n\n        return false;\n\n    });\n\n    // remove all existing context menus to avoid duplicates\n    /*\n    const existingMenus = document.querySelectorAll('.desktop-context-menu');\n    existingMenus.forEach(menu => {\n        menu.remove();\n    });\n    */\n\n    // Context menu setup\n    const contextMenu = document.createElement('div');\n    contextMenu.className = 'desktop-context-menu';\n    contextMenu.innerHTML = `\n        <div class=\"bp-context-menu-item\" data-action=\"delete\">Delete Shortcut</div>\n        <div class=\"bp-context-menu-item\" data-action=\"rename\">Rename Shortcut</div>\n    `;\n    document.body.appendChild(contextMenu); // Append to body for positioning\n\n    // Hide context menu on click elsewhere\n    document.addEventListener('click', () => {\n        contextMenu.style.display = 'none';\n    });\n\n    // Prevent default context menu and show custom menu\n    el.addEventListener('contextmenu', (e) => {\n\n        const existingMenu = $('.desktop-context-menu');\n        // existingMenu.hide();\n\n\n        console.log('Context menu triggered for app:', app.name);\n        e.preventDefault();\n        // Position menu near cursor, ensuring it stays within viewport\n        const menuWidth = 150; // Approximate width of context menu\n        const menuHeight = 80; // Approximate height of context menu\n        const posX = e.clientX;\n        const posY = e.clientY;\n        const maxX = window.innerWidth - menuWidth;\n        const maxY = window.innerHeight - menuHeight;\n        contextMenu.style.left = `${Math.min(posX, maxX)}px`;\n        contextMenu.style.top = `${Math.min(posY, maxY)}px`;\n        contextMenu.style.display = 'block';\n    });\n\n    // Handle context menu actions\n    contextMenu.addEventListener('click', (e) => {\n        const action = e.target.getAttribute('data-action');\n        if (action === 'delete') {\n            this.deleteShortcut(app.name, app, options.context);\n        } else if (action === 'rename') {\n            this.renameShortCut(app.name, title, options.context);\n        }\n        contextMenu.style.display = 'none';\n    });\n\n    // Append the new shortcut to the container\n    let p = parent || this.shortCutsContainer;\n    p.appendChild(el);\n\n    // Apply jQuery UI draggable if enabled\n    if (this.enableShortcutDragging) {\n        $(el).draggable({\n            containment: 'parent' // Confine dragging within the parent container\n        });\n    }\n\n    // install app into chatWindow buttons if property exists\n    if (app.chatWindowButton) {\n        let chatWindows = this.bp.apps.ui.windowManager.findWindows({\n            app: 'buddylist',\n            type: app.chatWindowButton\n        });\n        // console.log('chatWindows', chatWindows);\n\n        // these may need to be custom based on the app itself...\n        /*\n        let chatButton = {\n            text: app.label || app.name,\n            image: app.icon || 'desktop/assets/images/icons/icon_console_64.png',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // Open the image search window\n                bp.open(app.name, {\n                    output: type || 'buddy',\n                    context: context,\n                });\n                return false;\n            }\n        };\n        */\n\n        let chatButton = app.chatButton;\n\n        if (!chatButton) {\n            console.warn('No chatButton defined for app:', app.name);\n            return;\n        }\n        chatButton.name = app.name; // add name to button for reference\n        // adds to default chat window buttons\n        if (this.bp.apps.desktop.enabledChatWindowButtons) {\n            // console.log('Adding chat button to desktop enabledChatWindowButtons', chatButton);\n            this.bp.apps.desktop.enabledChatWindowButtons.push(chatButton);\n        }\n        if (this.bp.apps.buddylist && this.bp.apps.buddylist.options.chatWindowButtons) {\n            this.bp.apps.buddylist.options.chatWindowButtons.push(chatButton);\n        }\n\n        // adds to any open windows\n        chatWindows.forEach((chatWindow) => {\n            if (chatWindow.buttonBar) {\n                chatWindow.buttonBar.addButton(chatButton);\n            } else {\n                console.warn('No buttonBar found for pond chat window', chatWindow);\n            }\n        });\n\n\n    }\n\n    // Register the app with desktop.apps\n    app.options = options;\n    const appKey = options && options.context ? `${app.name}-${options.context}` : app.name;\n    this.apps[appKey] = app;\n\n    // Stubbed functions for context menu actions\n    this.deleteShortcut = function (appName, app, context) {\n        console.log(`Stub: Deleting shortcut for ${appName}${context ? `-${context}` : ''}`);\n        // Call removeApp to align with App Store logic\n        this.removeApp(appName, app);\n    };\n\n}","import Folder from './Folder.js';\nimport arrangeShortcuts from '../lib/shortcuts/arrangeShortCuts.js';\nexport default function addFolder(metadata) {\n\n    let that = this;\n\n    function renderItem(_item, parent) {\n\n        let item = {};\n        if (typeof _item === 'string') {\n            item.id = _item;\n            item.name = _item;\n            item.label = _item;\n        } else {\n            item = _item;\n        }\n\n        if (!item.icon) {\n            item.icon = `/desktop/assets/images/icons/icon_${item.id}_64.png`;\n        }\n\n        item.options = item.options || {};\n        that.addShortCut({\n            name: item.id,\n            icon: item.icon,\n            label: item.label,\n        }, {\n            onClick: () => {\n                bp.open(item.id, item.options);\n            },\n            ...item.options\n        }, parent);\n\n    }\n\n    let folderHolder = document.createElement('div');\n    folderHolder.className = 'folder-holder';\n\n    metadata.items.forEach(item => {\n        renderItem(item, folderHolder);\n    });\n\n\n    const folder = new Folder(metadata, {\n        desktop: this,\n        parentElement: this.shortCutsContainer,\n        depth: 0,\n        onOpen: () => {\n\n            this.arrangeShortcuts(4, {\n                parent: folderHolder,\n                x: 0,\n                y: 20\n            })\n\n            console.log('Folder opened:', metadata.name);\n            this.bp.apps.ui.windowManager.createWindow({\n                id: metadata.name,\n                title: metadata.name,\n                icon: '/desktop/assets/images/icons/icon_folder.png',\n                width: metadata.width || 400,\n                height: metadata.height || 150,\n                parent: $('#desktop').get(0),\n                content: folderHolder\n            });\n\n        }\n    });\n    this.folders.push(folder);\n\n    folder.render()\n    //this.addShortCut(folder);\n    // this.shortCutsContainer.appendChild(folder.render());\n}","export default function removeShortCut(appName, app) {\n    console.log(`Removing shortcut for app: ${appName}`, app);\n    // Find and remove a shortcut based on the app name\n    const shortcuts = Array.from(this.shortCutsContainer.children);\n    const shortcut = shortcuts.find(el => $(el).data('app') === appName);\n    if (shortcut) {\n        this.shortCutsContainer.removeChild(shortcut);\n    }\n\n    // TODO: add config option when removing to either target desktop or chatWindowButtons, or both\n    // deleting a shortcut from the desktop should not remove it from chat windows\n    // deleting a shortcut from chat windows should not remove it from the desktop\n    // uninstalling from appstore should remove it from both\n    if (app.chatWindowButton) {\n        // removes the shortcut from chat windows\n        if (this.bp.apps.desktop.enabledChatWindowButtons) {\n            // iterate the enabledChatWindowButtons and remove any entries where app.label matches button.text\n            this.bp.apps.desktop.enabledChatWindowButtons = this.bp.apps.desktop.enabledChatWindowButtons.filter(button => button.text !== app.label);\n            //this.bp.apps.desktop.enabledChatWindowButtons.push(chatButton);\n        }\n        // removes the shortcut from buddylist chat windows\n        if (this.bp.apps.buddylist.options.chatWindowButtons) {\n            // iterate the chatWindowButtons and remove any entries where app.label matches button.text\n            this.bp.apps.buddylist.options.chatWindowButtons = this.bp.apps.buddylist.options.chatWindowButtons.filter(button => button.text !== app.label);\n            //this.bp.apps.buddylist.options.chatWindowButtons.push(chatButton);\n        }\n\n        let chatWindows = this.bp.apps.ui.windowManager.findWindows({\n            app: 'buddylist',\n            type: app.chatWindowButton\n        });\n\n        // removes from open windows\n        chatWindows.forEach((chatWindow) => {\n            if (chatWindow.buttonBar) {\n                chatWindow.buttonBar.removeButton(app.label);\n            } else {\n                console.warn('No buttonBar found for pond chat window', chatWindow);\n            }\n        });\n    }\n\n\n}","export default function arrangeShortcuts(cols = 2, options = {\n    rowWidth: 80,\n    rowHeight: 100,\n    x: 0, // TODO: we should start from the x and y position in our calculations\n    y: 0,\n    ignoreSavedPosition: true\n}) {\n    let parent;\n    if (typeof options.parent !== 'undefined') {\n        parent = options.parent;\n    } else {\n        parent = this.shortCutsContainer;\n    }\n\n    if (typeof options.rowWidth !== 'number') {\n        options.rowWidth = 74;\n        if (this.bp.isMobile()) {\n            options.rowWidth = 256;\n        }\n    }\n\n    if (typeof options.rowHeight !== 'number') {\n        options.rowHeight = 100;\n        if (this.bp.isMobile()) {\n            options.rowHeight = 256;\n        }\n    }\n\n    if (typeof options.x !== 'number') {\n        options.x = 0;\n    }\n\n    if (typeof options.y !== 'number') {\n        options.y = 0;\n    }\n\n    const containerWidth = parent.offsetWidth || 800; // Get the container's width\n    const maxCols = Math.floor(containerWidth / options.rowWidth); // Calculate the maximum number of columns\n    const actualCols = cols < maxCols ? cols : maxCols; // Choose the lesser to avoid overflow\n\n    let appsInstalled = this.bp.settings.apps_installed || {};\n\n    Array.from(parent.children).forEach((icon, index) => {\n        let appName = icon.getAttribute('data-app');\n        let app = appsInstalled[appName] || {};\n        let x = (index % actualCols) * options.rowWidth; // Calculate x position\n        let y = Math.floor(index / actualCols) * options.rowHeight; // Calculate y position\n\n        let offSetY = 100;\n        if (this.bp.isMobile()) { // TODO: remove\n            y += offSetY; // Add an offset to the y position\n\n        }\n        let offsetX = 15;\n        x += offsetX; // Add an offset to the x position\n\n        x += options.x;\n        y += options.y;\n\n        if (app && app.position && !options.ignoreSavedPosition) {\n            // If the app has a specific position, use that instead\n            x = app.position.x || x;\n            y = app.position.y || y;\n        }\n\n        // update the x/y position of the app shortcut inside this.bp.settings.installed_apps\n        appsInstalled[appName] = appsInstalled[appName] || app;\n        appsInstalled[appName].position = {\n            x: x,\n            y: y\n        }\n\n        // console.log('x:', x, 'y:', y);\n        icon.style.position = 'absolute'; // Corrected typo here\n        icon.style.left = `${x}px`; // Set left position\n        icon.style.top = `${y}px`; // Set top position\n    });\n    this.bp.set('apps_installed', appsInstalled);\n\n}","// TODO: implement context menu options for desktop itself\nexport default function setupContextMenu() {\n    this.container.oncontextmenu = (event) => {\n        // check if target has class \"bp-desktop-icon\"\n        if (event.target.classList.contains('bp-desktop-icon')) {\n            // If it does, prevent the default context menu\n            return;\n        }\n\n        // find any existing context menu and remove it\n        const existingMenu = $('.desktop-context-menu');\n        existingMenu.hide();\n\n        event.preventDefault();\n        this.showContextMenu(event.clientX, event.clientY);\n    };\n}","export default function  showContextMenu(x, y) {\n\n    const menu = document.createElement('div');\n    menu.className = 'desktop-context-menu';\n    menu.style.top = `${y}px`;\n    menu.style.left = `${x}px`;\n    menu.style.display = 'block';\n    // z-index is needed to display the menu on top of other elements\n    menu.style.zIndex = '9999';\n    menu.innerHTML = `\n        <ul>\n            <!-- <li onclick=\"bp.apps.desktop.createShortCut()\">New Shortcut...</li> -->\n            <li onclick=\"bp.apps.desktop.arrangeShortcuts(2, {\n    rowWidth: 80,\n    rowHeight: 100,\n    x: 0,\n    y: 0,\n    ignoreSavedPosition: true\n            })\">Arrange Icons</li>\n            <li onclick=\"bp.open('profile', { context: 'themes' })\">Desktop Settings</li>\n            <li onclick=\"bp.apps.wallpaper.removeWallpaper()\">Remove Wallpaper</li>\n            <li onclick=\"bp.apps.desktop.viewSource()\">View Source</li>\n        </ul>\n    `;\n    // clear the body before appending the menu\n    document.body.appendChild(menu);\n    // Hide menu on click anywhere\n    document.addEventListener('click', () => menu.remove(), { once: true });\n}","export default async function viewSource (url = 'https://raw.githubusercontent.com/Marak/buddypond/refs/heads/master/index.html') {\n    // fetch the content as text\n    const response = await fetch(url);\n    const content = await response.text();\n    await this.bp.load('editor-monaco', {\n        content: content\n    });\n    this.bp.apps['editor-monaco'].open();\n}","export default function renameShortCut(appName, titleElement) {\n    \n    const newName = prompt('Enter new shortcut name:', titleElement.textContent);\n\n    if (!newName || newName.trim() === '') {\n        // console.warn('Renaming cancelled or invalid name provided.');\n        return;\n    }\n\n    // TODO: forbidden Note check goes here ( no bad names in shortcuts )\n    let shortcut = $(`.bp-desktop-shortcut[data-app=\"${appName}\"]`);\n    console.log(`Renaming shortcut ${shortcut} to ${newName}`);\n    console.log(`Shortcut element:`, shortcut);\n\n    /*\n    // Update the shortcut name\n    shortcut.name = newName;\n    \n    // Update the label if it exists\n    if (shortcut.label) {\n        shortcut.label = newName;\n    }\n        */\n    \n    //let titleElement = shortcut.find('.title');\n    // Update the title element's text content\n    titleElement.textContent = newName;\n\n    let installed_apps = this.bp.get('apps_installed') || {};\n    // Update the app label in the installed apps\n    if (installed_apps[appName]) {\n        installed_apps[appName].label = newName;\n        this.bp.set('apps_installed', installed_apps);\n    } else {\n        console.warn(`App ${appName} not found in installed apps.`);\n    }\n\n    // Update the icon's title text\n    /*\n    const iconElement = document.querySelector(`.bp-desktop-shortcut[data-app=\"${shortcut.name}\"] .title`);\n    if (iconElement) {\n        iconElement.textContent = newName;\n    } else {\n        console.warn(`Shortcut element for ${shortcut.name} not found.`);\n    }\n    */\n    \n    // Optionally, you can also update the app settings or any other related data\n    //this.bp.set(`apps_installed.${shortcut.name}`, shortcut);\n    \n    // Play a sound effect for renaming\n    //this.bp.play('desktop/assets/audio/APP-RENAME.wav');\n    \n    // Optionally, you can rearrange shortcuts if needed\n    // this.bp.apps.desktop.arrangeShortcuts();\n    \n    console.log(`Shortcut renamed to ${newName}`);\n};","let sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default async function addApp(appName, app) {\n\n    if (!appName) {\n        console.error('No app name provided');\n        return;\n    }\n\n    if (!app) {\n        console.log('this.bp.apps.desktop', this.bp.apps.desktop)\n        // if no app is provided, look up the app in the appstore\n        app = this.bp.apps.desktop.appList[appName];\n    }\n\n    if (!app) {\n        console.error(`App ${appName} not found in appstore`);\n        return;\n    }\n\n    // perform a fire-and-forget operation to increment the app install count\n    this.client.incrementAppInstallCount(appName);\n\n    // update the local app count immediately\n    // find element with data-app attribute matching appName\n    this.bp.apps.pad.data.appStats[appName] = this.bp.apps.pad.data.appStats[appName] || {};\n    this.bp.apps.pad.data.appStats[appName].installCount = (this.bp.apps.pad.data.appStats[appName]?.installCount || 0) + 1;\n\n    // console.log(`Stub: Adding app ${app} to desktop`);\n    this.bp.play('desktop/assets/audio/APP-ADD.wav');\n    let installedApps = this.bp.settings.apps_installed || {};\n    // TODO: lookup actual app object from appstore.apps\n    installedApps[appName] = app;\n    this.bp.set('apps_installed', installedApps);\n    this.bp.apps.desktop.addShortCut({\n        name: appName,\n        ...app\n        //icon: app.icon,\n        //label: app.label || appName,\n    }, {\n        onClick: () => {\n            // console.log(`Opening app: ${appName}`, app);\n            this.bp.open(app.app || appName, { context: app.context });\n        }\n    });\n    // this.bp.apps.desktop.hideLoadingProgressIndicator();\n    this.bp.apps.desktop.arrangeShortcuts();\n    await sleep(777); // Simulate delay for UI update\n}\n","let sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default async function removeApp(appName, app) {\n\n    this.bp.play('desktop/assets/audio/APP-REMOVE.wav');\n\n    let installedApps = this.bp.settings.apps_installed || {};\n    delete installedApps[appName];\n    this.bp.set('apps_installed', installedApps);\n    //desktop.ui.renderDesktopShortCuts();\n\n    // alert('removing ' + appName);\n    this.bp.apps.desktop.removeShortCut(appName, app);\n\n    // desktop.ui.hideLoadingProgressIndicator();\n    this.bp.apps.desktop.arrangeShortcuts();\n    await sleep(777); // Simulate delay for UI update\n\n}"],"names":["Folder","constructor","data","options","this","parentElement","desktop","depth","render","app","folderDiv","document","createElement","className","class","classList","add","anchor","image","loading","src","title","textContent","label","name","id","appendChild","$","draggable","containment","addEventListener","e","onOpen","open","saveShortCut","shortcut","console","log","JSON","parse","localStorage","getItem","shortcutType","target","icon","description","parameters","bp","apps","addShortCut","textIcon","charAt","toUpperCase","onClick","arrangeShortcuts","rowWidth","rowHeight","x","y","ignoreSavedPosition","createShortCutWindow","close","appList","admin","adminOnly","profile","categories","buddylist","pad","pond","desktopOnly","minipaint","author","paint","chatWindowButton","painterro","patatap","soundrecorder","youtube","camera","piano","sampler","chalkboard","chatButton","text","onclick","async","ev","context","dataset","type","output","coin","portfolio","mantra","minesweeper","solitaire","globe","maps","spellbook","client","defaultDesktopShortcuts","installedApps","settings","apps_installed","Object","keys","length","forEach","appName","warn","set","incrementAppInstallCount","Array","isArray","fetch","buddypond","appsEndpoint","method","headers","body","stringify","appIds","error","getAppsStats","response","ok","Error","status","json","Desktop","folders","container","shortCutsContainer","parent","enableShortcutDragging","enabledChatWindowButtons","setupContextMenu","init","load","call","renderNode","node","skipFolderUI","children","child","endsWith","Shortcut","File","toggleMute","audio_enabled","show","hide","play","tryHard","Infinity","openFolder","folderId","folder","find","f","prototype","el","setAttribute","style","fontSize","position","bottom","imageStyle","key","pointerDownPos","wasDragging","clientX","clientY","dx","dy","Math","sqrt","preventDefault","appsInstalled","offsetLeft","offsetTop","contextMenu","innerHTML","display","posX","posY","maxX","window","innerWidth","maxY","innerHeight","left","min","top","action","getAttribute","deleteShortcut","renameShortCut","chatWindows","ui","windowManager","findWindows","push","chatWindowButtons","chatWindow","buttonBar","addButton","appKey","removeApp","addFolder","metadata","that","folderHolder","items","item","_item","renderItem","createWindow","width","height","get","content","removeShortCut","from","removeChild","filter","button","removeButton","cols","isMobile","containerWidth","offsetWidth","maxCols","floor","actualCols","index","oncontextmenu","event","contains","showContextMenu","menu","zIndex","remove","once","viewSource","url","showDesktopIcons","shortcutElement","createShortCut","focus","restore","shortCutHtml","map","join","minWidth","minHeight","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","on","value","appSelectGroup","commandGroup","urlGroup","prop","val","trim","command","alert","bs","buddyscript","parseCommand","pipe","titleElement","newName","prompt","installed_apps","addApp","appStats","installCount","ms","Promise","resolve","setTimeout"],"mappings":"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"}