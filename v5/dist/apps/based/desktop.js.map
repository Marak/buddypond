{"version":3,"file":"desktop.js","sources":["../../../apps/based/desktop/lib/Folder.js","../../../apps/based/desktop/lib/shortcuts/createShortCut.js","../../../apps/based/desktop/lib/appList.js","../../../apps/based/desktop/lib/client.js","../../../apps/based/desktop/lib/defaultDesktopShortcuts.js","../../../apps/based/desktop/desktop.js","../../../apps/based/desktop/lib/File.js","../../../apps/based/desktop/lib/shortcuts/addShortCut.js","../../../apps/based/desktop/lib/addFolder.js","../../../apps/based/desktop/lib/shortcuts/removeShortCut.js","../../../apps/based/desktop/lib/shortcuts/arrangeShortCuts.js","../../../apps/based/desktop/lib/contextmenu/setupContextMenu.js","../../../apps/based/desktop/lib/contextmenu/showContextMenu.js","../../../apps/based/desktop/lib/viewSource.js","../../../apps/based/desktop/lib/shortcuts/renameShortCut.js","../../../apps/based/desktop/lib/apps/addApp.js","../../../apps/based/desktop/lib/apps/removeApp.js","../../../apps/based/desktop/lib/bindKeyboardShortcuts.js"],"sourcesContent":["export default class Folder {\n    constructor(data, options = {}) {\n        this.data = data;\n        this.parentElement = options.parentElement;\n        this.desktop = options.desktop;\n        this.depth = options.depth;\n        this.options = options;\n    }\n\n    render(app = {}) {\n    \n        app = this.data;\n        // Create the shortcut element\n        const folderDiv = document.createElement('div');\n        folderDiv.className = `folder ${app.class || ''}`;\n\n        if (this.depth > 1) {\n            folderDiv.classList.add(`hidden`);\n        }\n        folderDiv.classList.add('icon', 'shortcut');   \n        const anchor = document.createElement('a');\n        // anchor.href = app.href || `#icon_dock_${app.name}`;\n\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = 'desktop/assets/images/icons/icon_folder_64.png';\n\n        const title = document.createElement('span');\n        title.className = 'title';\n        title.textContent = app.label || app.name || app.id;\n\n        anchor.appendChild(image);\n        anchor.appendChild(title);\n        folderDiv.appendChild(anchor);\n\n        // folderDiv.onclick = () => this.openFolder(); // Placeholder for folder opening logic\n\n        $(folderDiv).draggable({\n            containment: 'parent' // Confine dragging within the parent container\n        });\n\n        // folderDiv click handler\n        folderDiv.addEventListener('mousedown', (e) => {\n           this.options.onOpen();\n        });\n\n        this.parentElement.appendChild(folderDiv);\n\n        // Recursively render each child in this folder\n        // this.data.children.forEach(child => this.desktop.renderNode(child, folderDiv, this.depth + 1));\n    }\n\n    open () {\n        // Logic to open the folder\n           this.options.onOpen();\n    }\n}\n","export default function createShortcut() {\n    if (!this.createShortCutWindow) {\n        let shortCutHtml = `\n        <div class=\"bp-create-shortcut-container\">\n            <form id=\"create-shortcut-form\" action=\"#\" method=\"post\">\n                <div class=\"bp-form-group\">\n                    <label>Shortcut Type:</label>\n                    <div class=\"bp-shortcut-type\">\n                        <label><input type=\"radio\" name=\"shortcut-type\" value=\"url\" checked> URL</label>\n                        <label><input type=\"radio\" name=\"shortcut-type\" value=\"app\"> App</label>\n                        <label><input type=\"radio\" name=\"shortcut-type\" value=\"buddyscript\"> Buddyscript</label>\n                    </div>\n                </div>\n                <div class=\"bp-form-group bp-shortcut-examples\">\n                    <!-- radio group of examples -->\n                    <label>Examples:</label>\n                    <div class=\"bp-shortcut-examples-list\">\n                        <label><input type=\"radio\" name=\"shortcut-example\" value=\"url\" checked>Open a Website</label>\n                        <label><input type=\"radio\" name=\"shortcut-example\" value=\"app\">Open your own Pond</label>\n                        <label><input type=\"radio\" name=\"shortcut-example\" value=\"buddyscript\">Run a Buddyscript</label>\n                    </div>\n                </div>\n                <div class=\"bp-form-group\">\n                    <label for=\"shortcut-name\">Shortcut Name:</label>\n                    <input type=\"text\" id=\"shortcut-name\" name=\"shortcut-name\" required>\n                </div>\n                <div class=\"bp-form-group bp-app-select-group\" style=\"display: none;\">\n                    <label for=\"shortcut-apps\">Select App:</label>\n                    <select id=\"shortcut-apps\" name=\"shortcut-apps\">\n                        <option value=\"\">Select App</option>\n                        ${Object.keys(this.bp.apps.desktop.appList).map(appName => `<option value=\"${appName}\">${this.bp.apps.desktop.appList[appName].label || appName}</option>`).join('')}\n                    </select>\n                </div>\n                <div class=\"bp-form-group bp-app-select-group\">\n                    <!-- context input, type input, output input -->\n                    <label for=\"shortcut-context\">Context:</label>\n                    <input type=\"text\" id=\"shortcut-context\" name=\"shortcut-context\" placeholder=\"Optional, e.g. 'chatWindow'\" value=\"\">\n                    <label for=\"shortcut-type\">Type:</label>\n                    <input type=\"text\" id=\"shortcut-type\" name=\"shortcut-type\" placeholder=\"Optional, e.g. 'pond'\" value=\"pond\">\n                    <label for=\"shortcut-output\">Output:</label>\n                    <input type=\"text\" id=\"shortcut-output\" name=\"shortcut-output\" placeholder=\"Optional, e.g. 'chat'\" value=\"chat\">\n                </div>\n\n                <div class=\"bp-form-group bp-url-group\">\n                    <label for=\"shortcut-url\">URL:</label>\n                    <input type=\"text\" id=\"shortcut-url\" name=\"shortcut-url\" required>\n                </div>\n\n                <div class=\"bp-form-group bp-command-group\">\n                    <label for=\"shortcut-command\">Command:</label>\n                    <input type=\"text\" id=\"shortcut-command\" name=\"shortcut-command\" required>\n                </div>\n                <div class=\"bp-form-group\">\n                    <label for=\"shortcut-icon\">Icon URL:</label>\n                    <input type=\"text\" id=\"shortcut-icon\" name=\"shortcut-icon\" placeholder=\"Optional\">\n                </div>\n                <div class=\"bp-form-group\">\n                    <label for=\"shortcut-description\">Description:</label>\n                    <textarea id=\"shortcut-description\" name=\"shortcut-description\" placeholder=\"Optional\"></textarea>\n                </div>\n                <div class=\"bp-form-group bp-form-actions\">\n                    <button type=\"submit\" class=\"bp-btn bp-btn-primary bp-create-shortcut-btn\">Create Shortcut</button>\n                    <button type=\"button\" class=\"bp-btn bp-btn-secondary\" id=\"cancel-shortcut\">Cancel</button>\n                </div>\n            </form>\n        </div>`;\n\n        this.createShortCutWindow = this.bp.apps.ui.windowManager.createWindow({\n            id: 'create-shortcut',\n            title: 'Create Shortcut',\n            icon: 'desktop/assets/images/icons/icon_console_64.png',\n            x: 250,\n            y: 75,\n            width: 600,\n            height: 600,\n            minWidth: 400,\n            minHeight: 300,\n            parent: $('#desktop')[0],\n            content: shortCutHtml,\n            resizable: true,\n            minimizable: true,\n            maximizable: true,\n            closable: true,\n            focusable: true,\n            maximized: false,\n            minimized: false,\n            onClose: () => {\n                // Clean up if needed\n                this.createShortCutWindow = null; // Clear reference on close\n            }\n        });\n\n        // Toggle app dropdown visibility based on shortcut type\n        $('#create-shortcut-form input[name=\"shortcut-type\"]').on('change', (e) => {\n            const shortcutType = e.target.value;\n            const appSelectGroup = $('.bp-app-select-group');\n            const commandGroup = $('.bp-command-group');\n            const urlGroup = $('.bp-url-group');\n            if (shortcutType === 'app') {\n                appSelectGroup.show();\n                commandGroup.hide();\n                urlGroup.hide();\n                $('#shortcut-command').prop('required', false);\n                $('#shortcut-apps').prop('required', true);\n            }\n\n            if (shortcutType === 'buddyscript') {\n                appSelectGroup.hide();\n                commandGroup.show();\n                urlGroup.hide();\n                $('#shortcut-command').prop('required', true);\n                $('#shortcut-apps').prop('required', false);\n            }\n\n            if (shortcutType === 'url') {\n                urlGroup.show();\n                appSelectGroup.hide();\n                commandGroup.hide();\n                $('#shortcut-command').prop('required', false);\n                $('#shortcut-apps').prop('required', false);\n            }\n        });\n\n        $('#create-shortcut-form').on('submit', (e) => {\n            e.preventDefault();\n            return false;\n        });\n\n        $('.bp-create-shortcut-btn').on('click', async (e) => {\n            e.preventDefault();\n            const shortcutType = $('input[name=\"shortcut-type\"]:checked').val();\n            const name = $('#shortcut-name').val().trim();\n            const appName = $('#shortcut-apps').val();\n            const command = $('#shortcut-command').val().trim();\n            let icon = $('#shortcut-icon').val().trim();\n            const description = $('#shortcut-description').val().trim();\n\n            // Validation\n            if (!name) {\n                alert('Shortcut Name is required.');\n                return;\n            }\n            if (shortcutType === 'app' && !appName) {\n                alert('Please select an app.');\n                return;\n            }\n            if ((shortcutType === 'buddyscript') && !command) {\n                alert('Command is required for URL or Buddyscript shortcuts.');\n                return;\n            }\n            if (shortcutType === 'url' && !$('#shortcut-url').val().trim()) {\n                alert('URL is required for URL shortcuts.');\n                return;\n            }\n\n            let onClick = null;\n\n            if (shortcutType === 'app') {\n\n                let context = $('#shortcut-context').val().trim() || '';\n                console.log('appNameappName', appName)\n                if (!icon) {\n                    // attempt default app icon\n                    icon = this.bp.apps.desktop.appList[appName]?.icon || 'desktop/assets/images/icons/icon_default_64.png';    \n                }\n                onClick = () => {\n                    bp.open(appName, { context: context });\n                }\n            }\n\n            if (shortcutType === 'buddyscript') {\n\n\n                onClick = () => {\n                    if (command) {\n                        // Execute the Buddyscript command\n\n                        let bs = this.bp.apps.buddyscript.parseCommand(command);\n                        console.log('got back buddyscript command', bs);\n                        if (bs.pipe) {\n                        //if (now - messageTime < 10000) {\n                        // pipeable / immediate run commands should only persist for 10 seconds\n                            bs.pipe();\n                        }\n\n                    } else {\n                        alert('Please enter a valid Buddyscript command.');\n                    }\n                }\n\n            }\n\n            if (shortcutType === 'url') {\n                const url = $('#shortcut-url').val().trim();\n\n                /*\n                // going to be challeging to pull off with un-auth proxy\n                // proxy requires a valid session for security reasons\n                // fetch the .ico from url using proxy\n                let metadata = null;\n                try {\n                    metadata = await fetchProxy.call(this, url, true, true);\n                } catch (error) {\n                    console.error('Error fetching URL metadata:', error);\n                    alert('Failed to fetch URL metadata. Please check the console for details.');\n                    return;\n                }\n\n                console.log('Fetched metadata:', metadata);\n                */\n                \n                onClick = () => {\n                    if (url) {\n                        window.open(url, '_blank');\n                    } else {\n                        alert('Please enter a valid URL.');\n                    }\n                };\n            }\n\n            // Create the shortcut object\n            const shortcut = {\n                name: name,\n                label: name,\n                shortcutType: shortcutType,\n                icon: icon || 'desktop/assets/images/icons/icon_default_64.png', // Default icon if none provided\n                description: description || '',\n                target: shortcutType === 'app' ? this.bp.apps.desktop.appList[appName]?.onClick || `bp.open('${appName}')` : command,\n                onClick: onClick,\n                parameters: {\n                    icon: icon || '',\n                    description: description || ''\n                }\n            };\n\n            try {\n                saveShortCut.call(this, shortcut);\n            } catch (error) {\n                console.error('Error creating shortcut:', error);\n                alert('Failed to create shortcut. Please check the console for details.');\n            }\n            return false;\n        });\n\n        $('#cancel-shortcut').on('click', () => {\n            this.createShortCutWindow.close();\n        });\n    } else {\n        this.createShortCutWindow.focus();\n        this.createShortCutWindow.restore();\n    }\n}\n\nfunction saveShortCut(shortcut) {\n    console.log('Saving shortcut:', shortcut);\n    // Save to localStorage\n    const shortcuts = JSON.parse(localStorage.getItem('bp-shortcuts') || '{}');\n    shortcuts[shortcut.name] = {\n        label: shortcut.label,\n        shortcutType: shortcut.shortcutType,\n        target: shortcut.target,\n        icon: shortcut.icon,\n        description: shortcut.parameters.description\n    };\n    // TODO: use app API instead\n    // localStorage.setItem('bp-short', JSON.stringify(shortcuts));\n\n    // Call addShortCut to create the shortcut on the desktop\n    this.bp.apps.desktop.addShortCut({\n        name: shortcut.name,\n        label: shortcut.label,\n        icon: shortcut.icon,\n        description: shortcut.description,\n        textIcon: !shortcut.icon ? shortcut.label.charAt(0).toUpperCase() : null\n    }, {\n      onClick: shortcut.onClick,\n\n    });\n\n    this.arrangeShortcuts(2, {\n        rowWidth: 80,\n        rowHeight: 100,\n        x: 0, // TODO: we should start from the x and y position in our calculations\n        y: 0,\n        ignoreSavedPosition: false\n    });    // Close the window\n    this.createShortCutWindow.close();\n}\n\n\nasync function fetchProxy(url, parseMetadata, showError) {\n    //console.log('Fetching via proxy:', url);\n    let proxyUrl = `${buddypond.buddyProxy}/api/fetch-metadata?url=${encodeURIComponent(url)}`;\n    console.log('Proxy URL:', proxyUrl);\n\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 6000); // 6 seconds\n\n    try {\n        const response = await fetch(proxyUrl, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            'Authorization': `Bearer ${buddypond.qtokenid}`,\n            'x-me': buddypond.me\n            },\n            signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        if (!response.ok) {\n            throw new Error(`Proxy request failed: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        //console.log('Proxy response:', data);\n        if (parseMetadata) {\n            if (data.metadata) {\n                //console.log('Parsed metadata:', data.metadata);\n                return data.metadata;\n            } else {\n                throw new Error('No metadata found in proxy response');\n            }\n        }\n    }\n    catch (error) {\n        clearTimeout(timeoutId);\n        console.error('Error fetching via proxy:', error);\n        if (showError) {\n            alert(`Error fetching URL: ${error.message}`);\n        }\n        throw error; // Re-throw the error for further handling\n    }\n    return null; // Return null if no metadata is found\n                \n}","export default {\n  \"admin\": {\n    name: 'admin',\n    icon: `desktop/assets/images/icons/icon_profile_64.png`,\n    label: 'Admin',\n    \"onClick\": \"bp.open('admin')\",\n    adminOnly: true,\n  },\n  \"profile\": {\n    \"icon\": \"desktop/assets/images/icons/icon_myprofile_64.png\",\n    \"label\": \"My Profile\",\n    \"description\": \"Manage your profile and settings\",\n    \"onClick\": \"bp.open('profile')\",\n    \"categories\": [\"social\", \"productivity\"]\n  },\n  \"buddylist\": {\n    \"icon\": \"desktop/assets/images/icons/icon_profile_64.png\",\n    \"label\": \"BuddyList\",\n    \"description\": \"View and manage your contacts\",\n    \"onClick\": \"bp.open('buddylist')\",\n    \"categories\": [\"social\", \"community\"]\n  },\n  \"pad\": {\n    \"icon\": \"desktop/assets/images/icons/icon_pad_64.png\",\n    \"label\": \"Buddy Apps\",\n    \"description\": \"Create hosted Apps for Buddy Pond\",\n    \"onClick\": \"bp.open('pad')\",\n    \"categories\": [\"productivity\", \"creative\", \"community\"],\n    \"alias\": [\"buddy-apps\"]\n  },\n  \"pond\": {\n    \"icon\": \"desktop/assets/images/icons/icon_pond_64.png\",\n    \"label\": \"Ponds\",\n    \"description\": \"Explore shared content or communities\",\n    \"onClick\": \"bp.open('pond')\",\n    \"categories\": [\"community\", \"social\"]\n  },\n  \"file-explorer\": {\n    \"icon\": \"desktop/assets/images/icons/icon_file-explorer_64.png\",\n    \"label\": \"Buddy Files\",\n    \"description\": \"Browse and manage your files\",\n    \"onClick\": \"bp.open('file-explorer')\",\n    \"desktopOnly\": true,\n    \"categories\": [\"files\", \"productivity\"],\n    \"alias\": [\"buddy-files\", \"files\"]\n  },\n  \"plays-doodle-jump-extra\": {\n    \"icon\": \"desktop/assets/images/icons/icon_doodle-jump-extra_64.png\",\n    \"label\": \"Doodle Jump\",\n    \"description\": \"Play Doodle Jump Extra game\",\n    \"onClick\": \"bp.open('doodle-jump-extra')\",\n    \"categories\": [\"games\", \"entertainment\"],\n    \"author\": \"Plays.org\",\n    \"alias\": [\"doodle-jump\"],\n  },\n  \"plays-malpek\": {\n    \"icon\": \"desktop/assets/images/icons/icon_plays-malpek_64.png\",\n    \"label\": \"Malpek\",\n    \"description\": \"Play Malpek game\",\n    \"onClick\": \"bp.open('plays-malpek')\",\n    \"categories\": [\"games\", \"entertainment\"],\n    \"author\": \"Plays.org\",\n    \"alias\": [\"malpek\"],\n  },\n  \"frvr-kittenforce\": {\n    \"icon\": \"desktop/assets/images/icons/icon_kittenforce-frvr_64.png\",\n    \"label\": \"Kitten Force\",\n    \"description\": \"Play Kitten Force FRVR game\",\n    \"onClick\": \"bp.open('frvr-kittenforce')\",\n    \"categories\": [\"games\", \"entertainment\"],\n    \"author\": \"FRVR Games\",\n    \"alias\": [\"kittenforce\"]\n  },\n\n  \"marbleblast\": {\n    \"icon\": \"desktop/assets/images/icons/icon_marbleblast_64.png\",\n    \"label\": \"Marble Blast\",\n    \"description\": \"Play the Marble Blast game\",\n    \"onClick\": \"bp.open('marbleblast')\",\n    \"categories\": [\"games\", \"entertainment\"],\n    \"author\": \"Vanilagy\",\n    \"alias\": [\"marble-blast\"]\n  },\n  \"frvr-greed\": {\n    \"icon\": \"desktop/assets/images/icons/icon_frvr-greed_64.png\",\n    \"label\": \"Greed\",\n    \"description\": \"Play Greedy FRVR game\",\n    \"onClick\": \"bp.open('frvr-greed')\",\n    \"categories\": [\"games\", \"entertainment\"],\n    \"author\": \"FRVR Games\",\n    \"alias\": [\"greed\"]\n  },\n  'jutsu-caster': {\n    \"icon\": \"desktop/assets/images/icons/icon_jutsu_64.png\",\n    \"label\": \"Jutsu Caster\",\n    \"description\": \"Cast Jutsu spells using hand gestures\",\n    \"onClick\": \"bp.open('jutsu-caster')\",\n    \"categories\": [\"tools\", \"creative\", \"computer-vision\"],\n    \"author\": \"BuddyPond\",\n    \"alias\": [\"jutsu\"]\n  },\n  \"minipaint\": {\n    \"icon\": \"desktop/assets/images/icons/icon_minipaint_64.png\",\n    \"label\": \"miniPaint\",\n    \"author\": \"ViliusL\",\n    \"description\": \"Advanced image editor to create and edit images\",\n    \"onClick\": \"bp.open('minipaint')\",\n    \"categories\": [\"art\", \"creative\"]\n  },\n\n  \"patatap\": {\n    \"icon\": \"desktop/assets/images/icons/icon_patatap_64.png\",\n    \"label\": \"Patatap\",\n    \"description\": \"Create music and animations with touch and keyboard input\",\n    \"onClick\": \"bp.open('patatap')\",\n    \"categories\": [\"audio\", \"music\", \"creative\"],\n    \"author\": \"Jono Brandel\"\n  },\n  /*\n  \"sandspiel\": {\n    \"icon\": \"desktop/assets/images/icons/icon_sandspiel_64.png\",\n    \"label\": \"Sandspiel\",\n    \"description\": \"A creative sandbox game with sand and physics\",\n    \"onClick\": \"bp.open('sandspiel')\",\n    \"categories\": [\"games\", \"creative\"]\n  },\n  */\n  \"vision-harp\": {\n    \"icon\": \"desktop/assets/images/icons/icon_vision-harp_64.png\",\n    \"label\": \"Vision Harp\",\n    \"description\": \"Play music using hand gestures\",\n    \"onClick\": \"bp.open('vision-harp')\",\n    \"categories\": [\"audio\", \"computer-vision\", \"music\", \"creative\"],\n    \"author\": \"BuddyPond\",\n    \"alias\": [\"harp\"]\n  },\n  /*\n  \"fingerpaint\": {\n    \"icon\": \"desktop/assets/images/icons/icon_finger-paint_64.png\",\n    \"label\": \"Finger Paint\",\n    \"description\": \"Create art using hand gestures\",\n    \"onClick\": \"bp.open('fingerpaint')\",\n    \"categories\": [\"art\", \"creative\", \"computer-vision\"],\n    \"author\": \"BuddyPond\",\n    \"alias\": [\"hand-paint\", \"hand-art\"]\n  },\n  */\n  \"soundrecorder\": {\n    \"icon\": \"desktop/assets/images/icons/icon_soundrecorder_64.png\",\n    \"label\": \"Sound Recorder\",\n    \"author\": \"Isaiah Odhner\",\n    \"description\": \"Record and save audio clips\",\n    \"onClick\": \"bp.open('soundrecorder')\",\n    \"desktopOnly\": true,\n    \"categories\": [\"audio\", \"creative\"],\n    \"alias\": [\"recorder\"]\n  },\n  \"youtube\": {\n    \"icon\": \"desktop/assets/images/icons/icon_interdimensionalcable_64.png\",\n    \"label\": \"IDC Cable\",\n    \"description\": \"Watch and browse YouTube videos\",\n    \"onClick\": \"bp.open('youtube')\",\n    \"categories\": [\"entertainment\", \"media\"],\n    \"alias\": [\"idc\"]\n  },\n  \"camera\": {\n    \"icon\": \"desktop/assets/images/icons/icon_camera_64.png\",\n    \"label\": \"Camera\",\n    \"description\": \"Capture photos or videos\",\n    \"onClick\": \"bp.open('camera')\",\n    \"categories\": [\"media\", \"creative\"]\n  },\n\n  \"coin\": {\n    \"icon\": \"desktop/assets/images/icons/icon_coin_64.png\",\n    \"label\": \"Buddy Coins\",\n    \"description\": \"Manage your virtual currency\",\n    \"onClick\": \"bp.open('coin')\",\n    \"categories\": [\"finance\"]\n  },\n\n  \"fluid-simulation\": {\n    \"icon\": \"desktop/assets/images/icons/icon_fluidsimulation_64.png\",\n    \"author\": \"Pavel Dobryakov\",\n    \"label\": \"Fluid Simulation\",\n    \"description\": \"Interact with a fluid dynamics simulation\",\n    \"onClick\": \"bp.open('fluid-simulation')\",\n    \"categories\": [\"creative\", \"entertainment\"],\n    \"alias\": [\"fluids\"]\n  },\n  \"sampler\": {\n    \"icon\": \"desktop/assets/images/icons/icon_midifighter_64.png\",\n    \"label\": \"Sampler\",\n    \"description\": \"Create and mix audio samples\",\n    \"onClick\": \"bp.open('sampler')\",\n    \"categories\": [\"audio\", \"music\", \"creative\"]\n  },\n  \"audio-visual\": {\n    \"icon\": \"desktop/assets/images/icons/icon_visuals_64.png\",\n    \"author\": \"lachlanmaclean\",\n    \"label\": \"Audio Visuals\",\n    \"description\": \"Experience audio-responsive visuals\",\n    \"onClick\": \"bp.open('audio-visual')\",\n    \"categories\": [\"creative\", \"entertainment\", \"audio\"],\n    \"alias\": [\"av\"]\n  },\n  \"chalkboard\": {\n    \"icon\": \"desktop/assets/images/icons/icon_chalkboard_64.png\",\n    \"label\": \"Chalkboard\",\n    \"description\": \"Draw and write on a virtual chalkboard\",\n    \"onClick\": \"bp.open('chalkboard')\",\n    \"categories\": [\"art\", \"creative\"],\n    \"chatWindowButton\": ['buddy', 'pond'], // adds this app as a button in the chat window, array is types of windows to add it to\n    \"chatButton\": {\n      text: 'Chalkboard',\n      image: 'desktop/assets/images/icons/icon_chalkboard_64.png',\n      onclick: async (ev) => {\n        let context = ev.target.dataset.context;\n        let type = ev.target.dataset.type;\n        // Open the image search window\n        bp.open('chalkboard', {\n          output: type || 'buddy',\n          context: context,\n        });\n        return false;\n      }\n    }\n  },\n  \"piano\": {\n    \"icon\": \"desktop/assets/images/icons/icon_piano_64.png\",\n    \"label\": \"Piano\",\n    \"description\": \"Play a virtual piano keyboard\",\n    \"onClick\": \"bp.open('piano')\",\n    \"desktopOnly\": true,\n    \"categories\": [\"music\", \"creative\"]\n  },\n  \"bubblepop\": {\n    \"icon\": \"desktop/assets/images/icons/icon_bubblepop_64.png\",\n    \"label\": \"Bubble Pop\",\n    \"description\": \"Pop bubbles and enjoy the visuals\",\n    \"onClick\": \"bp.open('bubblepop')\",\n    \"categories\": [\"games\", \"entertainment\", \"computer-vision\"],\n    \"author\": \"BuddyPond\",\n    \"alias\": [\"bubblepop\"]\n  },\n\n  \"portfolio\": {\n    \"icon\": \"desktop/assets/images/icons/icon_portfolio_64.png\",\n    \"label\": \"Portfolio\",\n    \"description\": \"Track your investments and assets\",\n    \"onClick\": \"bp.open('portfolio')\",\n    \"categories\": [\"finance\"]\n  },\n  \"audio-player\": {\n    \"icon\": \"desktop/assets/images/icons/icon_audio-player_64.png\",\n    \"label\": \"Audio Player\",\n    \"description\": \"Play and manage audio files\",\n    \"onClick\": \"bp.open('audio-player')\",\n    \"categories\": [\"media\", \"audio\"]\n  },\n  \"paint\": {\n    \"icon\": \"desktop/assets/images/icons/icon_paint_64.png\",\n    \"label\": \"Paint\",\n    \"author\": \"Isaiah Odhner\",\n    \"description\": \"A Classic Retro Style Image Editor\",\n    \"onClick\": \"bp.open('paint')\",\n    \"categories\": [\"art\", \"creative\"],\n    \"chatWindowButton\": ['buddy', 'pond'] // adds this app as a button in the chat window, array is types of windows to add it to\n  },\n  \"painterro\": {\n    \"icon\": \"desktop/assets/images/icons/icon_painterro_64.png\",\n    \"label\": \"Painterro\",\n    \"author\": \"Ivan Borshchov\",\n    \"description\": \"Easy to use image editing tool\",\n    \"onClick\": \"bp.open('painterro')\",\n    \"categories\": [\"art\", \"creative\"]\n  },\n  /* FRVR Games */\n  \"frvr-basketball\": {\n    \"icon\": \"desktop/assets/images/icons/icon_basketball-frvr_64.png\",\n    \"label\": \"BasketBall\",\n    \"description\": \"Play Basketball game\",\n    \"onClick\": \"bp.open('frvr-basketball')\",\n    \"categories\": [\"games\", \"entertainment\"],\n    \"author\": \"FRVR Games\",\n    \"alias\": [\"basketball\"]\n  },\n  \"frvr-bowlingo\": {\n    \"icon\": \"desktop/assets/images/icons/icon_frvr-bowlingo_64.png\",\n    \"label\": \"Bowlingo\",\n    \"description\": \"Play Bowlingo game\",\n    \"onClick\": \"bp.open('frvr-bowlingo')\",\n    \"categories\": [\"games\", \"entertainment\"],\n    \"author\": \"FRVR Games\",\n    \"alias\": [\"bowling\"]\n  },\n  \"mantra\": {\n    \"icon\": \"desktop/assets/images/icons/icon_mantra_64.png\",\n    \"label\": \"Mantra\",\n    \"description\": \"Play the Mantra game\",\n    \"categories\": [\"games\"]\n  },\n  \"minesweeper\": {\n    \"icon\": \"desktop/assets/images/icons/icon_minesweeper_64.png\",\n    \"label\": \"Minesweeper\",\n    \"description\": \"Classic Minesweeper puzzle game\",\n    \"categories\": [\"games\"]\n  },\n  \"emulator-nes\": {\n    \"icon\": \"desktop/assets/images/icons/icon_nes_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'nes',\n    \"label\": \"NES\",\n    \"description\": \"Play Nintendo Entertainment System games\",\n    \"options\": { \"context\": \"nes\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"emulator-sega\": {\n    \"icon\": \"desktop/assets/images/icons/icon_sega_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'sega',\n    \"label\": \"Sega\",\n    \"description\": \"Play Sega console games\",\n    \"options\": { \"context\": \"sega\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"emulator-snes\": {\n    \"icon\": \"desktop/assets/images/icons/icon_snes_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'snes',\n    \"label\": \"SNES\",\n    \"description\": \"Play Super Nintendo games\",\n    \"options\": { \"context\": \"snes\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"emulator-atari2600\": {\n    \"icon\": \"desktop/assets/images/icons/icon_atari2600_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'atari2600',\n    \"label\": \"Atari 2600\",\n    \"description\": \"Play Atari 2600 games\",\n    \"options\": { \"context\": \"atari2600\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"emulator-n64\": {\n    \"icon\": \"desktop/assets/images/icons/icon_n64_64.png\",\n    \"app\": \"emulator\",\n    \"context\": 'n64',\n    \"label\": \"n64\",\n    \"description\": \"Play Nintendo 64 games\",\n    \"options\": { \"context\": \"n64\" },\n    \"categories\": [\"games\", \"emulators\"]\n  },\n  \"solitaire\": {\n    \"icon\": \"desktop/assets/images/icons/icon_solitaire_64.png\",\n    \"label\": \"Solitaire\",\n    \"description\": \"Classic Solitaire card game\",\n    \"categories\": [\"games\"]\n  },\n  \"stickman\": {\n    \"icon\": \"desktop/assets/images/icons/icon_stickman_64.png\",\n    \"label\": \"Stickman\",\n    \"description\": \"Control a stickman using body poses\",\n    \"onClick\": \"bp.open('stickman')\",\n    \"categories\": [\"creative\", \"computer-vision\", \"entertainment\"],\n    \"author\": \"BuddyPond\",\n    \"alias\": [\"stickman\"]\n  },\n\n  \"spellbook\": {\n    \"icon\": \"desktop/assets/images/icons/icon_spellbook_64.png\",\n    \"label\": \"Spellbook\",\n    \"description\": \"Manage scripts or commands\",\n    \"categories\": [\"tools\", \"productivity\"]\n  },\n\n  \"globe\": {\n    \"icon\": \"desktop/assets/images/icons/icon_globe_64.png\",\n    \"label\": \"Globe\",\n    \"description\": \"Visualize global network data\",\n    \"categories\": [\"tools\"]\n  },\n  \"file-viewer\": {\n    \"icon\": \"desktop/assets/images/icons/icon_file-viewer_64.png\",\n    \"label\": \"File Viewer\",\n    \"description\": \"View files in various formats\",\n    \"onClick\": \"bp.open('file-viewer')\",\n    \"categories\": [\"files\", \"productivity\"]\n  },\n  \"hacker-typer\": {\n    \"icon\": \"desktop/assets/images/icons/icon_hacker-typer_64.png\",\n    \"label\": \"Hack Typer\",\n    \"description\": \"Simulate hacking with a typing game\",\n    \"categories\": [\"tools\", \"games\"]\n  },\n  \"hex-editor\": {\n    \"icon\": \"desktop/assets/images/icons/icon_hex-editor_64.png\",\n    \"label\": \"Hex Editor\",\n    \"description\": \"Edit files in hexadecimal format\",\n    \"categories\": [\"tools\", \"productivity\"]\n  },\n  \"maps\": {\n    \"icon\": \"desktop/assets/images/icons/icon_maps_64.png\",\n    \"label\": \"Maps\",\n    \"description\": \"Access mapping and navigation tools\",\n    \"categories\": [\"tools\"]\n  },\n\n  \"aero-player\": {\n    \"icon\": \"desktop/assets/images/icons/icon_aero-player_64.png\",\n    \"label\": \"Aero Player\",\n    \"description\": \"Play music with Aero Player\",\n    \"onClick\": \"bp.open('aero-player')\",\n    \"categories\": [\"audio\", \"music\", \"entertainment\"],\n    \"author\": \"Swayam\",\n    \"authorUrl\": \"https://github.com/swayam25/Aero\",\n     adminOnly: true\n  },\n\n  \"motd\": {\n    \"icon\": \"desktop/assets/images/icons/icon_console_64.png\",\n    \"label\": \"MOTD\",\n    \"description\": \"Message of the Day\",\n    \"onClick\": \"bp.open('motd')\",\n    \"categories\": [\"social\", \"community\"],\n    \"chatWindowButton\": ['buddy', 'pond'] // adds this app as a button in the chat window, array is types of windows to add it to\n  }\n\n\n}","const client = {};\n\nclient.incrementAppInstallCount = async function (appName) {\n    if (!appName) {\n        console.error('No app name provided for incrementing install count');\n        return;\n    }\n\n    // if appName is not an array, wrap it in an array\n    if (!Array.isArray(appName)) {\n        appName = [appName];\n    }\n\n    // Simulate an API call to increment the install count\n    try {\n        await fetch(`${buddypond.appsEndpoint}/apps/install`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ appIds: appName }),\n        });\n        // console.log(`Install count for app ${appName} incremented successfully.`);\n    } catch (error) {\n        console.error(`Failed to increment install count for app ${appName}:`, error);\n    }\n}\n\nclient.getAppsStats = async function () {\n    try {\n        const response = await fetch(`${buddypond.appsEndpoint}/apps/stats`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Failed to fetch app stats:', error);\n        return null;\n    }\n}\n\nexport default client;","export default function defaultDesktopShortcuts() {\n\n    // check if we have default apps, if not initialize them\n    let installedApps = this.bp.settings.apps_installed || {};\n    let installedTaskBarApps = this.bp.settings.taskbar_apps || {};\n\n    // check for legacy v4 versions, may have malformed data for new UI\n    // best way to check is if all .icon fields are missing from every entry\n    let isLegacySettings = false;\n    if (Object.keys(installedApps).length > 0) {\n        // console.log('Checking for legacy settings...', installedApps);\n        isLegacySettings = Object.values(installedApps).every(app => !app.icon);\n    }\n    if (isLegacySettings) {\n        installedApps = {};\n    }\n\n    // console.log('installedTaskBarApps from settings', installedTaskBarApps)\n\n    if (Object.keys(installedTaskBarApps).length === 0) {\n        let defaultTaskBarApps = [\n            'file-explorer',\n            'pad',\n            'buddylist',\n            // 'pond',\n            'portfolio',\n        ];\n        defaultTaskBarApps.forEach(appName => {\n            let app = this.bp.apps.desktop.appList[appName];\n            if (app) {\n                // console.log(`Adding default taskbar app: ${appName}`);\n                installedTaskBarApps[appName] = {\n                    app: app.app || appName,\n                    context: app.context || 'default',\n                    label: app.label || appName,\n                    icon: app.icon || ''\n                };\n            } else {\n                console.warn(`App ${appName} not found in desktop app list.`);\n            }\n        });\n    }\n\n    Object.keys(installedTaskBarApps).forEach(appName => {\n        let savedApp = installedTaskBarApps[appName];\n        //console.log('Adding taskbar app', appName);\n        //console.log(this.bp.apps.desktop.appList)\n        // console.log('savedApp', appName, savedApp);\n        let app = this.bp.apps.desktop.appList[savedApp.id || appName];\n        if (!app) {\n            console.warn(`App ${appName} not found in desktop app list.`);\n            return;\n        }\n\n        app.id = appName; // ensure the app has an id for taskbar\n        app.app = app.app || appName; // ensure the app has an app property\n        // create new app object with necessary properties\n        let _app = {\n            ...app\n        }\n        if (_app) {\n            // console.log(`Adding default taskbar app: ${appName}`, _app);\n            this.bp.apps.ui.windowManager.taskBar.addItem(_app);\n        } else {\n            console.warn(`App ${appName} not found in desktop app list.`);\n        }\n    });\n\n    if (Object.keys(installedApps).length === 0) {\n        let defaultAppList = [\n            'profile',\n            'buddylist',\n            'pad',\n            'pond',\n            'file-explorer',\n            'youtube',\n            'fluid-simulation',\n            'coin',\n            'portfolio',\n        ];\n\n\n        defaultAppList.forEach(appName => {\n            let app = this.bp.apps.desktop.appList[appName];\n            if (app) {\n                console.log(`Adding default app shortcut: ${appName}`);\n                // console.log(app);\n                installedApps[appName] = app;\n\n                // this.bp.apps.desktop.addShortCut(app);\n            } else {\n                console.warn(`App ${appName} not found in desktop app list.`);\n            }\n        });\n\n        this.bp.set('apps_installed', installedApps);\n\n        // update the count of installed apps\n        this.client.incrementAppInstallCount(Object.keys(installedApps));\n\n    }\n\n    // let installedApps = bp.settings.apps_installed || {};\n    if (Object.keys(installedApps).length > 0) {\n        Object.keys(installedApps).forEach(appName => {\n            let app = installedApps[appName];\n            if (app) {\n                // console.log(`Adding shortcut for installed app: ${appName}`, app);\n                bp.apps.desktop.addShortCut({\n                    name: appName,\n                    ...app\n                }, {\n                    onClick: () => {\n                        bp.open(app.app || appName, { context: app.context });\n                    }\n                });\n            }\n        });\n\n    }\n\n}","/* Desktop.js - Buddy Pond - Marak Squires - 2023 */\n\n// import Folder from '../file-explorer/Folder/Folder.js';\nimport Folder from \"./lib/Folder.js\";\nimport BPFile from \"./lib/File.js\";\n\n// shortcuts\nimport addShortCut from \"./lib/shortcuts/addShortCut.js\";\nimport addFolder from \"./lib/addFolder.js\";\nimport removeShortCut from \"./lib/shortcuts/removeShortCut.js\";\nimport createShortCut from \"./lib/shortcuts/createShortCut.js\";\nimport renameShortCut from \"./lib/shortcuts/renameShortCut.js\";\nimport arrangeShortcuts from \"./lib/shortcuts/arrangeShortCuts.js\";\n\n// apps\nimport appList from \"./lib/appList.js\";\nimport addApp from \"./lib/apps/addApp.js\";\nimport removeApp from \"./lib/apps/removeApp.js\";\n\n\n// context menu(s)\nimport setupContextMenu from \"./lib/contextmenu/setupContextMenu.js\";\nimport showContextMenu from \"./lib/contextmenu/showContextMenu.js\";\n\nimport bindKeyboardShortcuts from \"./lib/bindKeyboardShortcuts.js\";\n\n// utils\nimport buildJsTreeData from \"../file-explorer/lib/buildJsTreeData.js\";\nimport viewSource from \"./lib/viewSource.js\";\n\nimport client from './lib/client.js'; // client api for desktop\n\n// default data\nimport defaultDesktopShortcuts from \"./lib/defaultDesktopShortcuts.js\";\n\nexport default class Desktop {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n\n        this.apps = {}; // registered apps\n\n        this.folders = [];\n\n        // Setup containers for the desktop and shortcuts\n        this.container = document.createElement('div');\n        this.container.id = 'desktop-container';\n        this.container.className = 'desktop-container';\n\n        this.shortCutsContainer = document.createElement('div');\n        this.shortCutsContainer.id = 'desktop-shortcuts-container';\n        this.shortCutsContainer.className = 'desktop-shortcuts-container';\n        this.container.appendChild(this.shortCutsContainer);\n\n        // Set parent container\n        this.parent = options.parent || document.body;\n        this.parent.appendChild(this.container);\n\n        this.enableShortcutDragging = true;\n\n        this.enabledChatWindowButtons = [];\n\n        if (typeof options.enableShortcutDragging === 'boolean') {\n            this.enableShortcutDragging = options.enableShortcutDragging;\n        }\n\n        // Context menu for desktop\n        this.setupContextMenu();\n    }\n\n    async init() {\n        await this.bp.load('/v5/apps/based/desktop/desktop.css');\n\n        // Used for parsing shortcuts, not needed ( for now )\n        //let yaml = await this.bp.importModule('/v5/apps/based/ui/vendor/js-yaml.min.js', {}, false);\n        //this.yaml = yaml.jsYamlDefault;\n\n        // Render the default shortcuts\n        defaultDesktopShortcuts.call(this);\n        // this.bindKeyboardShortcuts();\n\n        /*\n        if (this.bp.settings.wallpaper_url) {\n            // won't work unless desktop is already loaded\n            this.bp.apps.desktop.setWallpaper(this.bp.settings.wallpaper_url);\n        } else {\n            this.bp.apps.wallpaper.wallpaperManager.active = this.bp.settings.wallpaper_name || 'solid';\n            this.bp.apps.wallpaper.wallpaperManager.start();\n        }\n        */\n\n        // check if there is a wallpaper_url\n        /*\n        if (this.bp.settings.wallpaper_url) {\n            this.setWallpaper(this.bp.settings.wallpaper_url);\n        }\n        */\n\n        // console.log('this.bp.settings.active_theme', this.bp.settings.active_theme)\n        /*\n        if (this.bp.settings.active_theme) {\n            // alert(this.bp.settings.active_theme);\n            this.bp.apps.themes.applyTheme(this.bp.settings.active_theme);\n        }\n        */\n\n        //alert(`BroadcastChannel message received: ${event.data}`);\n\n\n\n        // if (this.bp.settings.wallpaper) {\n\n        // TODO: after launch, port legacy wallpaper app\n        // this.setupWallpaper(); // Set initial wallpaper\n        return 'loaded desktop';\n    }\n\n    async load() {\n        return;\n        // get file list from cdn\n        // returns cloudFiles.files ( a flat array of relative file and directory paths )\n        let cloudFiles = await this.bp.apps.client.api.listFiles('desktop', 6);\n\n        // converts the flat array of files and directories into a nested jsTree data structure\n        // this conforms to the jsTree data format\n        /*\n\n        // Expected format of the node (there are no required fields)\n            {\n            id          : \"string\" // will be autogenerated if omitted\n            text        : \"string\" // node text\n            icon        : \"string\" // string for custom\n            state       : {\n                opened    : boolean  // is the node open\n                disabled  : boolean  // is the node disabled\n                selected  : boolean  // is the node selected\n            },\n            children    : []  // array of strings or objects\n            li_attr     : {}  // attributes for the generated LI node\n            a_attr      : {}  // attributes for the generated A node\n            }\n        */\n\n        // TODO: which will be easier to write a renderer for? flat array or tree data?\n        // We believe tree data will be easier to write a renderer for\n        let treeData = buildJsTreeData(this.bp.me, cloudFiles.files);\n        console.log('treeData', treeData);\n\n        // example shortcut format\n        let yamlStr = `\n                type: Shortcut\n                target: /path/to/application.exe\n                parameters:\n                startIn: /path/to/\n                args: \"--example-arg\"\n                icon: /path/to/icon.png\n                hotkey: Ctrl+Alt+A\n                description: \"A shortcut to an application\"\n        `;\n        // load the yaml as json\n        let doc = this.yaml.load(yamlStr);\n        console.log(doc);\n\n        // we now have treeData which is the form of a jsTree data structure\n        let userRoot = treeData[0]; // the top node is the buddyname / user root / foldername on CDN\n        console.log('userRoot', userRoot) // the desktop folder itself ( since we query for it )\n        let desktopRoot = userRoot.children[0]; // the desktop folder itself ( since we query for it )\n\n        // the problem is now we intended to render the \"Desktop\" folder contents at the top-level\n        // ( such that all its children are visible on the desktop )\n        // however; with the current structure we see a \"desktop\" folder on the desktop\n        // TODO: we need a way to render the co ntents of a folder at a top-level\n        // or change the way folders are rendered\n        // render the userRoot\n        this.renderNode(desktopRoot, this.shortCutsContainer, 0, true);\n        // arrangeDesktop(); // global ( for now remove later )\n\n        return;\n\n\n\n    }\n\n    renderNode(node, parentElement, depth = 0, skipFolderUI = false) {\n        console.log('renderNode', node, parentElement, depth, skipFolderUI);\n        if (node.children && node.children.length > 0) {\n            // Check if we should skip rendering the folder UI (used for top-level folder)\n            if (skipFolderUI) {\n                // Directly render the children in the parent element\n                node.children.forEach(child => this.renderNode(child, parentElement, depth + 1));\n            } else {\n                // It's a folder and should be rendered as such\n                const folder = new Folder(node, parentElement, this, depth);\n                folder.render();\n            }\n        } else {\n            // It's a file or shortcut\n            if (node.text.endsWith('.yml')) {\n                const shortcut = new Shortcut(node, parentElement);\n                shortcut.render();\n            } else {\n                const file = new File(node, parentElement, this, depth);\n                file.render();\n            }\n        }\n    }\n\n    toggleMute() {\n        if (this.bp.settings.audio_enabled === false) {\n            this.bp.set('audio_enabled', true);\n            $('.volumeFull').show();\n            $('.volumeMuted').hide();\n            this.bp.play('desktop/assets/audio/VOLUME-ON.mp3', { tryHard: Infinity });\n        } else {\n            this.bp.set('audio_enabled', false);\n            $('.volumeFull').hide();\n            $('.volumeMuted').show();\n        }\n    }\n\n    openFolder(folderId) {\n        console.log('openFolder', folderId);\n        // Find the folder by ID\n        const folder = this.folders.find(f => f.data.name === folderId);\n        if (folder) {\n            // Open the folder (this could be a method in the Folder class)\n            folder.open();\n        } else {\n            console.error(`Folder with ID ${folderId} not found.`);\n        }\n    }\n\n}\n\nDesktop.prototype.Folder = Folder;\nDesktop.prototype.File = BPFile;\nDesktop.prototype.addShortCut = addShortCut;\nDesktop.prototype.addFolder = addFolder;\nDesktop.prototype.removeShortCut = removeShortCut;\nDesktop.prototype.arrangeShortcuts = arrangeShortcuts;\nDesktop.prototype.setupContextMenu = setupContextMenu;\nDesktop.prototype.showContextMenu = showContextMenu;\n// Desktop.prototype.buildJsTreeData = buildJsTreeData;\nDesktop.prototype.viewSource = viewSource;\n\nDesktop.prototype.showDesktopIcons = function showDesktopIcons() {\n    this.shortCutsContainer.style.display = 'flex';\n    if (this.bp.isMobile()) {\n        this.shortCutsContainer.style.position = 'absolute';\n        this.shortCutsContainer.style.left = '0px';\n        this.shortCutsContainer.style.bottom = '0px';\n    }\n}\n\nclass Shortcut {\n    constructor(data, parentElement) {\n        this.data = data;\n        this.parentElement = parentElement;\n    }\n\n    render() {\n        const shortcutElement = document.createElement('div');\n        shortcutElement.textContent = this.data.text || this.data.id;\n        shortcutElement.className = 'shortcut';\n\n        shortcutElement.classList.add('icon', 'shortcut', 'bp-desktop-iconp');\n\n        this.parentElement.appendChild(shortcutElement);\n    }\n}\n\nDesktop.prototype.appList = appList;\nDesktop.prototype.createShortCut = createShortCut;\nDesktop.prototype.renameShortCut = renameShortCut;\nDesktop.prototype.addApp = addApp;\nDesktop.prototype.removeApp = removeApp;\nDesktop.prototype.client = client; // client api for desktop\nDesktop.prototype.bindKeyboardShortcuts = bindKeyboardShortcuts;\n\n// Debounced pushState wrapper\n// This prevents rapid calls to history.pushState from flickering the URL\n// and allows for a delay before the state is actually pushed to the history stack.\n// This is useful for UX such that multiple rapid changes to the URL do not cause flickering\nconst DelayedPushState = (() => {\n  let timeout = null;\n  let latestState = null;\n\n  function push(stateObj, title, url, delay = 250) {\n    // Store the latest call\n    latestState = { stateObj, title, url };\n\n    // Clear any existing timer\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    // Set a new timer\n    timeout = setTimeout(() => {\n      const { stateObj, title, url } = latestState;\n      history.pushState(stateObj, title, url);\n      timeout = null;\n    }, delay);\n  }\n\n  return { push };\n})();\n\nwindow.DelayedPushState = DelayedPushState;","\n\nexport default class File {\n    constructor(data, parentElement, desktop, depth) {\n        this.data = data;\n        console.log(\"FIKLE DATA\", data);\n        this.parentElement = parentElement;\n        this.desktop = desktop;\n        this.options = {};\n        this.depth = depth;\n    }\n\n    render(app = {}) {\n\n        app = this.data;\n\n        // Create the shortcut element\n        const el = document.createElement('div');\n        el.className = `icon shortcut ${app.class || ''}`;\n\n        if (this.depth > 1) {\n            el.classList.add(`hidden`);\n        }\n\n        el.classList.add('icon', 'shortcut');   \n\n\n        const anchor = document.createElement('a');\n        // anchor.href = app.href || `#icon_dock_${app.name}`;\n\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = app.icon;\n\n        const title = document.createElement('span');\n        title.className = 'title';\n        title.textContent = app.label || app.name || app.id;\n\n        anchor.appendChild(image);\n        anchor.appendChild(title);\n        el.appendChild(anchor);\n\n        // Adding onClick event to the .icon container\n        el.addEventListener('click', this.options.onClick);\n\n\n\n\n        // Apply jQuery UI draggable if enabled\n        if (this.enableShortcutDragging) {\n            $(el).draggable({\n                containment: 'parent' // Confine dragging within the parent container\n            });\n        }\n\n\n        this.parentElement.appendChild(el);\n\n\n        // Recursively render each child in this folder\n    }\n}\n","export default function addShortCut(app, options = {}, parent) {\n    // Default onClick behavior if not provided\n    if (typeof options.onClick !== 'function') {\n        options.onClick = () => console.log('desktop app - Missing options.onClick function', app.name);\n    }\n\n    // console.log('Adding shortcut for app:', app, 'with options:', options);\n\n    // Create the shortcut element\n    const el = document.createElement('div');\n    el.className = `icon shortcut ${app.class || ''} bp-desktop-shortcut`;\n    el.setAttribute('data-app', app.name);\n    const anchor = document.createElement('a');\n    // anchor.href = app.href || `#${app.name}`;\n\n    if (!app.textIcon) {\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = app.icon;\n        if (options.imageStyle) {\n            Object.keys(options.imageStyle).forEach(key => {\n                image.style[key] = options.imageStyle[key];\n            });\n        }\n        anchor.appendChild(image);\n    } else {\n        const image = document.createElement('div');\n        image.textContent = app.textIcon;\n        image.style.fontSize = '32px';\n        image.style.position = 'relative';\n        image.style.bottom = '10px';\n        if (options.imageStyle) {\n            Object.keys(options.imageStyle).forEach(key => {\n                image.style[key] = options.imageStyle[key];\n            });\n        }\n        anchor.appendChild(image);\n    }\n\n    const title = document.createElement('span');\n    title.className = 'title';\n    title.textContent = app.label || app.name;\n    anchor.appendChild(title);\n    el.appendChild(anchor);\n\n    // Adding onClick event to the .icon container\n    // TODO: make this event only happen on touchend\n    // the idea here is that if the element was dragged, we don't want to trigger the click event\n    // but if it was tapped, we do want to trigger the click event \n    /*\n    el.addEventListener('click', (e) => {\n        alert()\n        e.preventDefault();\n        options.onClick(e, app);\n        return false;\n    });\n    */\n\n    let pointerDownPos = null;\n    let wasDragging = false;\n\n    el.addEventListener('pointerdown', (e) => {\n        pointerDownPos = { x: e.clientX, y: e.clientY };\n        wasDragging = false;\n    });\n\n    el.addEventListener('pointermove', (e) => {\n        if (!pointerDownPos) return;\n\n        const dx = e.clientX - pointerDownPos.x;\n        const dy = e.clientY - pointerDownPos.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        // If moved more than a threshold, consider it a drag\n        if (distance > 5) {\n            wasDragging = true;\n        }\n    });\n\n    el.addEventListener('pointerup', (e) => {\n        if (!wasDragging) {\n            e.preventDefault(); // Prevent default anchor behavior\n            options.onClick(e, app);\n        }\n\n        pointerDownPos = null;\n        wasDragging = false;\n\n        // update the x/y position of the app shortcut inside this.bp.settings.installed_apps\n        let appsInstalled = this.bp.settings.apps_installed || {};\n        appsInstalled[app.name] = appsInstalled[app.name] || app;\n\n        appsInstalled[app.name].position = {\n            x: el.offsetLeft,\n            y: el.offsetTop\n        }\n\n        this.bp.set('apps_installed', appsInstalled);\n\n        return false;\n\n    });\n\n    // remove all existing context menus to avoid duplicates\n    /*\n    const existingMenus = document.querySelectorAll('.desktop-context-menu');\n    existingMenus.forEach(menu => {\n        menu.remove();\n    });\n    */\n\n    // Context menu setup\n    const contextMenu = document.createElement('div');\n    contextMenu.className = 'desktop-context-menu';\n\n    let menuHTML = ``;\n\n    // don't allow pads / buddyapps to be deleted\n    if (app.name !== 'pad') {\n         menuHTML += `<div class=\"bp-context-menu-item\" data-action=\"delete\">Delete Shortcut</div>`;\n    }\n\n    menuHTML += `\n        <div class=\"bp-context-menu-item\" data-action=\"rename\">Rename Shortcut</div>\n        <div class=\"bp-context-menu-item\" data-action=\"add-taskbar\">Add to Taskbar</div>\n    `;\n\n    contextMenu.innerHTML = menuHTML;\n    document.body.appendChild(contextMenu); // Append to body for positioning\n\n    // Hide context menu on click elsewhere\n    document.addEventListener('click', () => {\n        contextMenu.style.display = 'none';\n    });\n\n    // Prevent default context menu and show custom menu\n    el.addEventListener('contextmenu', (e) => {\n\n        const existingMenu = $('.desktop-context-menu');\n        // existingMenu.hide();\n\n        e.preventDefault();\n        // Position menu near cursor, ensuring it stays within viewport\n        const menuWidth = 150; // Approximate width of context menu\n        const menuHeight = 80; // Approximate height of context menu\n        const posX = e.clientX;\n        const posY = e.clientY;\n        const maxX = window.innerWidth - menuWidth;\n        const maxY = window.innerHeight - menuHeight;\n        contextMenu.style.left = `${Math.min(posX, maxX)}px`;\n        contextMenu.style.top = `${Math.min(posY, maxY)}px`;\n        contextMenu.style.display = 'block';\n    });\n\n    // Handle context menu actions\n    contextMenu.addEventListener('click', (e) => {\n        const action = e.target.getAttribute('data-action');\n        if (action === 'delete') {\n            this.deleteShortcut(app.name, app, options.context);\n        } else if (action === 'rename') {\n            this.renameShortCut(app.name, title, options.context);\n        } else if (action === 'add-taskbar') {\n            // Add to taskbar logic\n            app.id = app.name; // ensure the app has an id for taskbar\n            this.bp.apps.ui.windowManager.taskBar.addItem(app);\n        }\n        contextMenu.style.display = 'none';\n    });\n\n    // Append the new shortcut to the container\n    let p = parent || this.shortCutsContainer;\n    p.appendChild(el);\n\n    // Apply jQuery UI draggable if enabled\n    if (this.enableShortcutDragging) {\n        $(el).draggable({\n            containment: 'parent' // Confine dragging within the parent container\n        });\n    }\n\n    // install app into chatWindow buttons if property exists\n    if (app.chatWindowButton) {\n        let chatWindows = this.bp.apps.ui.windowManager.findWindows({\n            app: 'buddylist',\n            type: app.chatWindowButton\n        });\n        // console.log('chatWindows', chatWindows);\n\n        // these may need to be custom based on the app itself...\n        /*\n        let chatButton = {\n            text: app.label || app.name,\n            image: app.icon || 'desktop/assets/images/icons/icon_console_64.png',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // Open the image search window\n                bp.open(app.name, {\n                    output: type || 'buddy',\n                    context: context,\n                });\n                return false;\n            }\n        };\n        */\n\n        let chatButton = app.chatButton;\n\n        if (!chatButton) {\n            console.warn('No chatButton defined for app:', app.name);\n            return;\n        }\n        chatButton.name = app.name; // add name to button for reference\n        // adds to default chat window buttons\n        if (this.bp.apps.desktop.enabledChatWindowButtons) {\n            // console.log('Adding chat button to desktop enabledChatWindowButtons', chatButton);\n            this.bp.apps.desktop.enabledChatWindowButtons.push(chatButton);\n        }\n        if (this.bp.apps.buddylist && this.bp.apps.buddylist.options.chatWindowButtons) {\n            this.bp.apps.buddylist.options.chatWindowButtons.push(chatButton);\n        }\n\n        // adds to any open windows\n        chatWindows.forEach((chatWindow) => {\n            if (chatWindow.buttonBar) {\n                chatWindow.buttonBar.addButton(chatButton);\n            } else {\n                console.warn('No buttonBar found for pond chat window', chatWindow);\n            }\n        });\n\n    }\n\n    // Register the app with desktop.apps\n    app.options = options;\n    const appKey = options && options.context ? `${app.name}-${options.context}` : app.name;\n    this.apps[appKey] = app;\n\n    // Stubbed functions for context menu actions\n    this.deleteShortcut = function (appName, app, context) {\n        console.log(`Stub: Deleting shortcut for ${appName}${context ? `-${context}` : ''}`);\n        // Call removeApp to align with App Store logic\n        this.removeApp(appName, app);\n    };\n\n}","import Folder from './Folder.js';\nimport arrangeShortcuts from '../lib/shortcuts/arrangeShortCuts.js';\nexport default function addFolder(metadata) {\n\n    let that = this;\n\n    function renderItem(_item, parent) {\n\n        let item = {};\n        if (typeof _item === 'string') {\n            item.id = _item;\n            item.name = _item;\n            item.label = _item;\n        } else {\n            item = _item;\n        }\n\n        if (!item.icon) {\n            item.icon = `/desktop/assets/images/icons/icon_${item.id}_64.png`;\n        }\n\n        item.options = item.options || {};\n        that.addShortCut({\n            name: item.id,\n            icon: item.icon,\n            label: item.label,\n        }, {\n            onClick: () => {\n                bp.open(item.id, item.options);\n            },\n            ...item.options\n        }, parent);\n\n    }\n\n    let folderHolder = document.createElement('div');\n    folderHolder.className = 'folder-holder';\n\n    metadata.items.forEach(item => {\n        renderItem(item, folderHolder);\n    });\n\n\n    const folder = new Folder(metadata, {\n        desktop: this,\n        parentElement: this.shortCutsContainer,\n        depth: 0,\n        onOpen: () => {\n\n            this.arrangeShortcuts(4, {\n                parent: folderHolder,\n                x: 0,\n                y: 20\n            })\n\n            console.log('Folder opened:', metadata.name);\n            this.bp.apps.ui.windowManager.createWindow({\n                id: metadata.name,\n                title: metadata.name,\n                icon: '/desktop/assets/images/icons/icon_folder.png',\n                width: metadata.width || 400,\n                height: metadata.height || 150,\n                parent: $('#desktop').get(0),\n                content: folderHolder\n            });\n\n        }\n    });\n    this.folders.push(folder);\n\n    folder.render()\n    //this.addShortCut(folder);\n    // this.shortCutsContainer.appendChild(folder.render());\n}","export default function removeShortCut(appName, app) {\n    console.log(`Removing shortcut for app: ${appName}`, app);\n    // Find and remove a shortcut based on the app name\n    const shortcuts = Array.from(this.shortCutsContainer.children);\n    const shortcut = shortcuts.find(el => $(el).data('app') === appName);\n    if (shortcut) {\n        this.shortCutsContainer.removeChild(shortcut);\n    }\n\n    // TODO: add config option when removing to either target desktop or chatWindowButtons, or both\n    // deleting a shortcut from the desktop should not remove it from chat windows\n    // deleting a shortcut from chat windows should not remove it from the desktop\n    // uninstalling from appstore should remove it from both\n    if (app.chatWindowButton) {\n        // removes the shortcut from chat windows\n        if (this.bp.apps.desktop.enabledChatWindowButtons) {\n            // iterate the enabledChatWindowButtons and remove any entries where app.label matches button.text\n            this.bp.apps.desktop.enabledChatWindowButtons = this.bp.apps.desktop.enabledChatWindowButtons.filter(button => button.text !== app.label);\n            //this.bp.apps.desktop.enabledChatWindowButtons.push(chatButton);\n        }\n        // removes the shortcut from buddylist chat windows\n        if (this.bp.apps.buddylist.options.chatWindowButtons) {\n            // iterate the chatWindowButtons and remove any entries where app.label matches button.text\n            this.bp.apps.buddylist.options.chatWindowButtons = this.bp.apps.buddylist.options.chatWindowButtons.filter(button => button.text !== app.label);\n            //this.bp.apps.buddylist.options.chatWindowButtons.push(chatButton);\n        }\n\n        let chatWindows = this.bp.apps.ui.windowManager.findWindows({\n            app: 'buddylist',\n            type: app.chatWindowButton\n        });\n\n        // removes from open windows\n        chatWindows.forEach((chatWindow) => {\n            if (chatWindow.buttonBar) {\n                chatWindow.buttonBar.removeButton(app.label);\n            } else {\n                console.warn('No buttonBar found for pond chat window', chatWindow);\n            }\n        });\n    }\n\n\n}","export default function arrangeShortcuts(cols = 2, options = {\n    rowWidth: 80,\n    rowHeight: 100,\n    x: 0,\n    y: 0,\n    ignoreSavedPosition: true\n}) {\n    let parent = options.parent || this.shortCutsContainer;\n\n    if (typeof options.rowWidth !== 'number') {\n        options.rowWidth = this.bp.isMobile() ? 256 : 74;\n    }\n\n    if (typeof options.rowHeight !== 'number') {\n        options.rowHeight = this.bp.isMobile() ? 256 : 100;\n    }\n\n    if (typeof options.x !== 'number') options.x = 0;\n    if (typeof options.y !== 'number') options.y = 0;\n\n    const containerHeight = parent.offsetHeight || 600;\n    // continerHeight might not yet be defined if the desktop is not visible\n    // alert(`Container height: ${containerHeight}`);\n    const maxRows = Math.floor(containerHeight / options.rowHeight);\n\n    let appsInstalled = this.bp.settings.apps_installed || {};\n    \n    let col = 0;\n    let row = 0;\n\n    Array.from(parent.children).forEach((icon, index) => {\n        const appName = icon.getAttribute('data-app');\n        const app = appsInstalled[appName] || {};\n\n        // Respect saved position if allowed\n        // console.log('Arranging shortcut:', options);\n        /* Removes saved shortcut positions ( for now )\n        if (app.position && !options.ignoreSavedPosition) {\n            console.log('using saved position for', appName, app.position);\n            icon.style.left = `${app.position.x}px`;\n            icon.style.top = `${app.position.y}px`;\n            return;\n        }\n        */\n\n        // Calculate position\n        let x = options.x + col * options.rowWidth + 15;\n        let y = options.y + row * options.rowHeight + (this.bp.isMobile() ? 100 : 0);\n\n        // Move to next column if exceeds height\n        if (y + options.rowHeight > containerHeight) {\n            col++;\n            row = 0;\n            x = options.x + col * options.rowWidth + 15;\n            y = options.y + row * options.rowHeight + (this.bp.isMobile() ? 100 : 0);\n        }\n\n        // Save back position\n        appsInstalled[appName] = appsInstalled[appName] || {};\n        appsInstalled[appName].position = { x, y };\n        // console.log('saving position for', appName, appsInstalled[appName].position);\n\n        // Apply styles\n        icon.style.position = 'absolute';\n        icon.style.left = `${x}px`;\n        icon.style.top = `${y}px`;\n\n        row++; // advance row counter\n    });\n\n    this.bp.set('apps_installed', appsInstalled);\n}\n","// TODO: implement context menu options for desktop itself\nexport default function setupContextMenu() {\n    this.container.oncontextmenu = (event) => {\n        // check if target has class \"bp-desktop-icon\"\n        if (event.target.classList.contains('bp-desktop-icon')) {\n            // If it does, prevent the default context menu\n            return;\n        }\n\n        // find any existing context menu and remove it\n        const existingMenu = $('.desktop-context-menu');\n        existingMenu.hide();\n\n        event.preventDefault();\n        this.showContextMenu(event.clientX, event.clientY);\n    };\n}","export default function  showContextMenu(x, y) {\n\n    const menu = document.createElement('div');\n    menu.className = 'desktop-context-menu';\n    menu.style.top = `${y}px`;\n    menu.style.left = `${x}px`;\n    menu.style.display = 'block';\n    // z-index is needed to display the menu on top of other elements\n    menu.style.zIndex = '9999';\n    menu.innerHTML = `\n        <ul>\n            <!-- <li onclick=\"bp.apps.desktop.createShortCut()\">New Shortcut...</li> -->\n            <li onclick=\"bp.apps.desktop.arrangeShortcuts(2, {\n    rowWidth: 80,\n    rowHeight: 100,\n    x: 0,\n    y: 0,\n    ignoreSavedPosition: true\n            })\">Arrange Icons</li>\n            <li onclick=\"bp.open('profile', { context: 'themes' })\">Desktop Settings</li>\n            <li onclick=\"bp.apps.wallpaper.removeWallpaper()\">Remove Wallpaper</li>\n            <li onclick=\"bp.apps.desktop.viewSource()\">View Source</li>\n        </ul>\n    `;\n    // clear the body before appending the menu\n    document.body.appendChild(menu);\n    // Hide menu on click anywhere\n    document.addEventListener('click', () => menu.remove(), { once: true });\n}","export default async function viewSource (url = 'https://raw.githubusercontent.com/Marak/buddypond/refs/heads/master/index.html') {\n    // fetch the content as text\n    const response = await fetch(url);\n    const content = await response.text();\n    await this.bp.load('editor-monaco', {\n        content: content\n    });\n    this.bp.apps['editor-monaco'].open();\n}","export default function renameShortCut(appName, titleElement) {\n    \n    const newName = prompt('Enter new shortcut name:', titleElement.textContent);\n\n    if (!newName || newName.trim() === '') {\n        // console.warn('Renaming cancelled or invalid name provided.');\n        return;\n    }\n\n    // TODO: forbidden Note check goes here ( no bad names in shortcuts )\n    let shortcut = $(`.bp-desktop-shortcut[data-app=\"${appName}\"]`);\n    console.log(`Renaming shortcut ${shortcut} to ${newName}`);\n    console.log(`Shortcut element:`, shortcut);\n\n    /*\n    // Update the shortcut name\n    shortcut.name = newName;\n    \n    // Update the label if it exists\n    if (shortcut.label) {\n        shortcut.label = newName;\n    }\n        */\n    \n    //let titleElement = shortcut.find('.title');\n    // Update the title element's text content\n    titleElement.textContent = newName;\n\n    let installed_apps = this.bp.get('apps_installed') || {};\n    // Update the app label in the installed apps\n    if (installed_apps[appName]) {\n        installed_apps[appName].label = newName;\n        this.bp.set('apps_installed', installed_apps);\n    } else {\n        console.warn(`App ${appName} not found in installed apps.`);\n    }\n\n    // Update the icon's title text\n    /*\n    const iconElement = document.querySelector(`.bp-desktop-shortcut[data-app=\"${shortcut.name}\"] .title`);\n    if (iconElement) {\n        iconElement.textContent = newName;\n    } else {\n        console.warn(`Shortcut element for ${shortcut.name} not found.`);\n    }\n    */\n    \n    // Optionally, you can also update the app settings or any other related data\n    //this.bp.set(`apps_installed.${shortcut.name}`, shortcut);\n    \n    // Play a sound effect for renaming\n    //this.bp.play('desktop/assets/audio/APP-RENAME.wav');\n    \n    // Optionally, you can rearrange shortcuts if needed\n    // this.bp.apps.desktop.arrangeShortcuts();\n    \n    console.log(`Shortcut renamed to ${newName}`);\n};","let sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default async function addApp(appName, app) {\n\n    if (!appName) {\n        console.error('No app name provided');\n        return;\n    }\n\n    if (!app) {\n        console.log('this.bp.apps.desktop', this.bp.apps.desktop)\n        // if no app is provided, look up the app in the appstore\n        app = this.bp.apps.desktop.appList[appName];\n    }\n\n    if (!app) {\n        console.error(`App ${appName} not found in appstore`);\n        return;\n    }\n\n    // perform a fire-and-forget operation to increment the app install count\n    this.client.incrementAppInstallCount(appName);\n\n    // update the local app count immediately\n    // find element with data-app attribute matching appName\n    this.bp.apps.pad.data.appStats[appName] = this.bp.apps.pad.data.appStats[appName] || {};\n    this.bp.apps.pad.data.appStats[appName].installCount = (this.bp.apps.pad.data.appStats[appName]?.installCount || 0) + 1;\n\n    // console.log(`Stub: Adding app ${app} to desktop`);\n    this.bp.play('desktop/assets/audio/APP-ADD.wav', { tryHard: 1 });\n    let installedApps = this.bp.settings.apps_installed || {};\n    // TODO: lookup actual app object from appstore.apps\n    installedApps[appName] = app;\n    this.bp.set('apps_installed', installedApps);\n    this.bp.apps.desktop.addShortCut({\n        name: appName,\n        ...app\n        //icon: app.icon,\n        //label: app.label || appName,\n    }, {\n        onClick: () => {\n            // console.log(`Opening app: ${appName}`, app);\n            this.bp.open(app.app || appName, { context: app.context });\n        }\n    });\n    // this.bp.apps.desktop.hideLoadingProgressIndicator();\n    this.bp.apps.desktop.arrangeShortcuts();\n    await sleep(777); // Simulate delay for UI update\n}\n","let sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default async function removeApp(appName, app) {\n\n    this.bp.play('desktop/assets/audio/APP-REMOVE.wav');\n\n    let installedApps = this.bp.settings.apps_installed || {};\n    delete installedApps[appName];\n    this.bp.set('apps_installed', installedApps);\n    //desktop.ui.renderDesktopShortCuts();\n\n    // alert('removing ' + appName);\n    this.bp.apps.desktop.removeShortCut(appName, app);\n\n    // desktop.ui.hideLoadingProgressIndicator();\n    this.bp.apps.desktop.arrangeShortcuts();\n    await sleep(777); // Simulate delay for UI update\n\n}","export default function bindKeyboardShortcuts () {\n\n    // add global keypress listener to document\n    document.addEventListener('keydown', (event) => {\n        // if key is 192 and shift is pressed, open the console\n        // check for the ` key\n        if (event.which === 192) {\n            // prevent default action\n            event.preventDefault();\n            // open the console\n            this.bp.open('console');\n            return false;\n        }\n    });\n};"],"names":["Folder","constructor","data","options","this","parentElement","desktop","depth","render","app","folderDiv","document","createElement","className","class","classList","add","anchor","image","loading","src","title","textContent","label","name","id","appendChild","$","draggable","containment","addEventListener","e","onOpen","open","saveShortCut","shortcut","console","log","JSON","parse","localStorage","getItem","shortcutType","target","icon","description","parameters","bp","apps","addShortCut","textIcon","charAt","toUpperCase","onClick","arrangeShortcuts","rowWidth","rowHeight","x","y","ignoreSavedPosition","createShortCutWindow","close","appList","admin","adminOnly","profile","categories","buddylist","pad","alias","pond","desktopOnly","author","marbleblast","minipaint","patatap","soundrecorder","youtube","camera","coin","sampler","chalkboard","chatWindowButton","chatButton","text","onclick","async","ev","context","dataset","type","output","piano","bubblepop","portfolio","paint","painterro","mantra","minesweeper","solitaire","stickman","spellbook","globe","maps","authorUrl","motd","client","defaultDesktopShortcuts","installedApps","settings","apps_installed","installedTaskBarApps","taskbar_apps","isLegacySettings","Object","keys","length","values","every","forEach","appName","warn","savedApp","_app","ui","windowManager","taskBar","addItem","set","incrementAppInstallCount","Array","isArray","fetch","buddypond","appsEndpoint","method","headers","body","stringify","appIds","error","getAppsStats","response","ok","Error","status","json","Desktop","folders","container","shortCutsContainer","parent","enableShortcutDragging","enabledChatWindowButtons","setupContextMenu","init","load","call","renderNode","node","skipFolderUI","children","child","endsWith","Shortcut","File","toggleMute","audio_enabled","show","hide","play","tryHard","Infinity","openFolder","folderId","folder","find","f","prototype","el","setAttribute","style","fontSize","position","bottom","imageStyle","key","pointerDownPos","wasDragging","clientX","clientY","dx","dy","Math","sqrt","preventDefault","appsInstalled","offsetLeft","offsetTop","contextMenu","menuHTML","innerHTML","display","posX","posY","maxX","window","innerWidth","maxY","innerHeight","left","min","top","action","getAttribute","deleteShortcut","renameShortCut","chatWindows","findWindows","push","chatWindowButtons","chatWindow","buttonBar","addButton","appKey","removeApp","addFolder","metadata","that","folderHolder","items","item","_item","renderItem","createWindow","width","height","get","content","removeShortCut","from","removeChild","filter","button","removeButton","cols","isMobile","containerHeight","offsetHeight","floor","col","row","index","oncontextmenu","event","contains","showContextMenu","menu","zIndex","remove","once","viewSource","url","showDesktopIcons","shortcutElement","createShortCut","focus","restore","shortCutHtml","map","join","minWidth","minHeight","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","on","value","appSelectGroup","commandGroup","urlGroup","prop","val","trim","command","alert","bs","buddyscript","parseCommand","pipe","titleElement","newName","prompt","installed_apps","addApp","appStats","installCount","ms","Promise","resolve","setTimeout","bindKeyboardShortcuts","which","DelayedPushState","timeout","latestState","stateObj","delay","clearTimeout","history","pushState"],"mappings":"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"}