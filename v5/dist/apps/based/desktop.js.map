{"version":3,"file":"desktop.js","sources":["../../../apps/based/desktop/lib/Folder.js","../../../apps/based/desktop/lib/File.js","../../../apps/based/desktop/desktop.js","../../../apps/based/desktop/lib/defaultDesktopShortcuts.js","../../../apps/based/desktop/lib/shortcuts/addShortCut.js","../../../apps/based/desktop/lib/addFolder.js","../../../apps/based/desktop/lib/shortcuts/removeShortCut.js","../../../apps/based/desktop/lib/shortcuts/arrangeShortCuts.js","../../../apps/based/desktop/lib/contextmenu/setupContextMenu.js","../../../apps/based/desktop/lib/contextmenu/showContextMenu.js","../../../apps/based/desktop/lib/viewSource.js"],"sourcesContent":["export default class Folder {\n    constructor(data, options = {}) {\n        this.data = data;\n        this.parentElement = options.parentElement;\n        this.desktop = options.desktop;\n        this.depth = options.depth;\n        this.options = options;\n    }\n\n    render(app = {}) {\n    \n        app = this.data;\n        // Create the shortcut element\n        const folderDiv = document.createElement('div');\n        folderDiv.className = `folder ${app.class || ''}`;\n\n        if (this.depth > 1) {\n            folderDiv.classList.add(`hidden`);\n        }\n        folderDiv.classList.add('icon', 'shortcut');   \n        const anchor = document.createElement('a');\n        // anchor.href = app.href || `#icon_dock_${app.name}`;\n\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = 'desktop/assets/images/icons/icon_folder_64.png';\n\n        const title = document.createElement('span');\n        title.className = 'title';\n        title.textContent = app.label || app.name || app.id;\n\n        anchor.appendChild(image);\n        anchor.appendChild(title);\n        folderDiv.appendChild(anchor);\n\n        // folderDiv.onclick = () => this.openFolder(); // Placeholder for folder opening logic\n\n        $(folderDiv).draggable({\n            containment: 'parent' // Confine dragging within the parent container\n        });\n\n        // folderDiv click handler\n        folderDiv.addEventListener('mousedown', (e) => {\n           this.options.onOpen();\n        });\n\n        this.parentElement.appendChild(folderDiv);\n\n        // Recursively render each child in this folder\n        // this.data.children.forEach(child => this.desktop.renderNode(child, folderDiv, this.depth + 1));\n    }\n\n    open () {\n        // Logic to open the folder\n           this.options.onOpen();\n    }\n}\n","\n\nexport default class File {\n    constructor(data, parentElement, desktop, depth) {\n        this.data = data;\n        console.log(\"FIKLE DATA\", data);\n        this.parentElement = parentElement;\n        this.desktop = desktop;\n        this.options = {};\n        this.depth = depth;\n    }\n\n    render(app = {}) {\n\n        app = this.data;\n\n        // Create the shortcut element\n        const el = document.createElement('div');\n        el.className = `icon shortcut ${app.class || ''}`;\n\n        if (this.depth > 1) {\n            el.classList.add(`hidden`);\n        }\n\n        el.classList.add('icon', 'shortcut');   \n\n\n        const anchor = document.createElement('a');\n        // anchor.href = app.href || `#icon_dock_${app.name}`;\n\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = app.icon;\n\n        const title = document.createElement('span');\n        title.className = 'title';\n        title.textContent = app.label || app.name || app.id;\n\n        anchor.appendChild(image);\n        anchor.appendChild(title);\n        el.appendChild(anchor);\n\n        // Adding onClick event to the .icon container\n        el.addEventListener('click', this.options.onClick);\n\n\n\n\n        // Apply jQuery UI draggable if enabled\n        if (this.enableShortcutDragging) {\n            $(el).draggable({\n                containment: 'parent' // Confine dragging within the parent container\n            });\n        }\n\n\n        this.parentElement.appendChild(el);\n\n\n        // Recursively render each child in this folder\n    }\n}\n","/* Desktop.js - Buddy Pond - Marak Squires - 2023 */\n\n// import Folder from '../file-explorer/Folder/Folder.js';\nimport Folder from \"./lib/Folder.js\";\nimport File from \"./lib/File.js\";\n\n// shortcuts\nimport addShortCut from \"./lib/shortcuts/addShortCut.js\";\nimport addFolder from \"./lib/addFolder.js\";\nimport removeShortCut from \"./lib/shortcuts/removeShortCut.js\";\nimport arrangeShortcuts from \"./lib/shortcuts/arrangeShortCuts.js\";\n\n// context menu(s)\nimport setupContextMenu from \"./lib/contextmenu/setupContextMenu.js\";\nimport showContextMenu from \"./lib/contextmenu/showContextMenu.js\";\n\n// utils\nimport buildJsTreeData from \"../file-explorer/lib/buildJsTreeData.js\";\nimport viewSource from \"./lib/viewSource.js\";\n\n\n// default data\nimport defaultDesktopShortcuts from \"./lib/defaultDesktopShortcuts.js\";\n\nexport default class Desktop {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n\n        this.apps = {}; // registered apps\n\n        this.folders = [];\n\n        // Setup containers for the desktop and shortcuts\n        this.container = document.createElement('div');\n        this.container.id = 'desktop-container';\n        this.container.className = 'desktop-container';\n\n        this.shortCutsContainer = document.createElement('div');\n        this.shortCutsContainer.id = 'desktop-shortcuts-container';\n        this.shortCutsContainer.className = 'desktop-shortcuts-container';\n        this.container.appendChild(this.shortCutsContainer);\n\n\n\n        // Set parent container\n        this.parent = options.parent || document.body;\n        this.parent.appendChild(this.container);\n\n        this.enableShortcutDragging = true;\n\n        if (typeof options.enableShortcutDragging === 'boolean') {\n            this.enableShortcutDragging = options.enableShortcutDragging;\n        }\n\n        // Context menu for desktop\n        this.setupContextMenu();\n    }\n\n    async init() {\n        await this.bp.load('/v5/apps/based/desktop/desktop.css');\n\n        // Used for parsing shortcuts, not needed ( for now )\n        //let yaml = await this.bp.importModule('/v5/apps/based/ui/vendor/js-yaml.min.js', {}, false);\n        //this.yaml = yaml.jsYamlDefault;\n\n        // Render the default shortcuts\n        defaultDesktopShortcuts();\n\n        /*\n        if (this.bp.settings.wallpaper_url) {\n            // won't work unless desktop is already loaded\n            this.bp.apps.desktop.setWallpaper(this.bp.settings.wallpaper_url);\n        } else {\n            this.bp.apps.wallpaper.wallpaperManager.active = this.bp.settings.wallpaper_name || 'solid';\n            this.bp.apps.wallpaper.wallpaperManager.start();\n        }\n        */\n\n        // check if there is a wallpaper_url\n        /*\n        if (this.bp.settings.wallpaper_url) {\n            this.setWallpaper(this.bp.settings.wallpaper_url);\n        }\n        */\n\n        // console.log('this.bp.settings.active_theme', this.bp.settings.active_theme)\n        /*\n        if (this.bp.settings.active_theme) {\n            // alert(this.bp.settings.active_theme);\n            this.bp.apps.themes.applyTheme(this.bp.settings.active_theme);\n        }\n        */\n\n\n\n        // if (this.bp.settings.wallpaper) {\n\n        // TODO: after launch, port legacy wallpaper app\n        // this.setupWallpaper(); // Set initial wallpaper\n        return 'loaded desktop';\n    }\n\n    async load() {\n        return;\n        // get file list from cdn\n        // returns cloudFiles.files ( a flat array of relative file and directory paths )\n        let cloudFiles = await this.bp.apps.client.api.listFiles('desktop', 6);\n\n        // converts the flat array of files and directories into a nested jsTree data structure\n        // this conforms to the jsTree data format\n        /*\n\n        // Expected format of the node (there are no required fields)\n            {\n            id          : \"string\" // will be autogenerated if omitted\n            text        : \"string\" // node text\n            icon        : \"string\" // string for custom\n            state       : {\n                opened    : boolean  // is the node open\n                disabled  : boolean  // is the node disabled\n                selected  : boolean  // is the node selected\n            },\n            children    : []  // array of strings or objects\n            li_attr     : {}  // attributes for the generated LI node\n            a_attr      : {}  // attributes for the generated A node\n            }\n        */\n\n        // TODO: which will be easier to write a renderer for? flat array or tree data?\n        // We believe tree data will be easier to write a renderer for\n        let treeData = buildJsTreeData(this.bp.me, cloudFiles.files);\n        console.log('treeData', treeData);\n\n        // example shortcut format\n        let yamlStr = `\n                type: Shortcut\n                target: /path/to/application.exe\n                parameters:\n                startIn: /path/to/\n                args: \"--example-arg\"\n                icon: /path/to/icon.png\n                hotkey: Ctrl+Alt+A\n                description: \"A shortcut to an application\"\n        `;\n        // load the yaml as json\n        let doc = this.yaml.load(yamlStr);\n        console.log(doc);\n\n        // we now have treeData which is the form of a jsTree data structure\n        let userRoot = treeData[0]; // the top node is the buddyname / user root / foldername on CDN\n        console.log('userRoot', userRoot) // the desktop folder itself ( since we query for it )\n        let desktopRoot = userRoot.children[0]; // the desktop folder itself ( since we query for it )\n\n        // the problem is now we intended to render the \"Desktop\" folder contents at the top-level\n        // ( such that all its children are visible on the desktop )\n        // however; with the current structure we see a \"desktop\" folder on the desktop\n        // TODO: we need a way to render the co ntents of a folder at a top-level\n        // or change the way folders are rendered\n        // render the userRoot\n        this.renderNode(desktopRoot, this.shortCutsContainer, 0, true);\n       // arrangeDesktop(); // global ( for now remove later )\n\n        return;\n\n\n\n    }\n\n    renderNode(node, parentElement, depth = 0, skipFolderUI = false) {\n        console.log('renderNode', node, parentElement, depth, skipFolderUI);\n        if (node.children && node.children.length > 0) {\n            // Check if we should skip rendering the folder UI (used for top-level folder)\n            if (skipFolderUI) {\n                // Directly render the children in the parent element\n                node.children.forEach(child => this.renderNode(child, parentElement, depth + 1));\n            } else {\n                // It's a folder and should be rendered as such\n                const folder = new Folder(node, parentElement, this, depth);\n                folder.render();\n            }\n        } else {\n            // It's a file or shortcut\n            if (node.text.endsWith('.yml')) {\n                const shortcut = new Shortcut(node, parentElement);\n                shortcut.render();\n            } else {\n                const file = new File(node, parentElement, this, depth);\n                file.render();\n            }\n        }\n    }\n\n    toggleMute () {\n        if (this.bp.settings.audio_enabled === false) {\n          this.bp.set('audio_enabled', true);\n          $('.volumeFull').show();\n          $('.volumeMuted').hide();\n          this.bp.play('desktop/assets/audio/VOLUME-ON.mp3', { tryHard: Infinity });\n        } else {\n          this.bp.set('audio_enabled', false);\n          $('.volumeFull').hide();\n          $('.volumeMuted').show();\n        }\n    }\n\n    openFolder(folderId) {\n        console.log('openFolder', folderId);\n        // Find the folder by ID\n        const folder = this.folders.find(f => f.data.name === folderId);\n        if (folder) {\n            // Open the folder (this could be a method in the Folder class)\n            folder.open();\n        } else {\n            console.error(`Folder with ID ${folderId} not found.`);\n        }\n    }\n\n}\n\nDesktop.prototype.Folder = Folder;\nDesktop.prototype.File = File;\nDesktop.prototype.addShortCut = addShortCut;\nDesktop.prototype.addFolder = addFolder;\nDesktop.prototype.removeShortCut = removeShortCut;\nDesktop.prototype.arrangeShortcuts = arrangeShortcuts;\nDesktop.prototype.setupContextMenu = setupContextMenu;\nDesktop.prototype.showContextMenu = showContextMenu;\n// Desktop.prototype.buildJsTreeData = buildJsTreeData;\nDesktop.prototype.viewSource = viewSource;\n\nDesktop.prototype.showDesktopIcons = function showDesktopIcons() {\n    this.shortCutsContainer.style.display = 'flex';\n    if (this.bp.isMobile()) {\n        this.shortCutsContainer.style.position = 'absolute';\n        this.shortCutsContainer.style.left = '0px';\n        this.shortCutsContainer.style.bottom = '0px';\n    }\n}\n\nclass Shortcut {\n    constructor(data, parentElement) {\n        this.data = data;\n        this.parentElement = parentElement;\n    }\n\n    render() {\n        const shortcutElement = document.createElement('div');\n        shortcutElement.textContent = this.data.text || this.data.id;\n        shortcutElement.className = 'shortcut';\n\n        shortcutElement.classList.add('icon', 'shortcut', 'bp-desktop-iconp');   \n\n        this.parentElement.appendChild(shortcutElement);\n    }\n}","export default function defaultDesktopShortcuts() {\n\n    bp.apps.desktop.addShortCut({\n        name: 'profile',\n        icon: `desktop/assets/images/icons/icon_profile_64.png`,\n        label: 'My Profile',\n        description: 'Manage your profile and settings'\n    }, {\n        onClick: () => {\n            bp.open('profile');\n        }\n    });\n\n    bp.apps.desktop.addShortCut({\n        name: 'buddylist',\n        icon: `desktop/assets/images/icons/icon_profile_64.png`,\n        label: 'BuddyList',\n        description: 'View and manage your contacts'\n    }, {\n        onClick: () => {\n            bp.open('buddylist');\n        }\n    });\n\n    bp.apps.desktop.addShortCut({\n        name: 'pad',\n        icon: `desktop/assets/images/icons/icon_pad_64.png`,\n        label: 'Pads',\n        description: 'Create hosted Apps for Buddy Pond'\n    }, {\n        onClick: () => {\n            bp.open('pad');\n        }\n    });\n\n    bp.apps.desktop.addShortCut({\n        name: 'pond',\n        icon: `desktop/assets/images/icons/icon_pond_64.png`,\n        label: 'Ponds',\n        description: 'Explore shared content or communities'\n    }, {\n        onClick: () => {\n            bp.open('pond');\n        }\n    });\n\n    if (!bp.isMobile()) {\n\n    bp.apps.desktop.addShortCut({\n        name: 'file-explorer',\n        icon: `desktop/assets/images/icons/icon_file-explorer_64.png`,\n        label: 'Buddy Files',\n        description: 'Browse and manage your files'\n    }, {\n        onClick: () => {\n            bp.open('file-explorer');\n        }\n    });\n}\n\n    bp.apps.desktop.addShortCut({\n        name: 'paint',\n        icon: `desktop/assets/images/icons/icon_paint_64.png`,\n        label: 'Paint',\n        description: 'Create and edit digital artwork'\n    }, {\n        onClick: () => {\n            bp.open('paint');\n        }\n    });\n\n    if (!bp.isMobile()) {\n\n        bp.apps.desktop.addShortCut({\n            name: 'soundrecorder',\n            icon: `desktop/assets/images/icons/icon_soundrecorder_64.png`,\n            label: 'Sound Recorder',\n            description: 'Record and save audio clips'\n        }, {\n            onClick: () => {\n                bp.open('soundrecorder');\n            }\n        });\n    }\n\n    bp.apps.desktop.addShortCut({\n        name: 'youtube',\n        icon: `desktop/assets/images/icons/icon_interdimensionalcable_64.png`,\n        label: 'Youtube',\n        description: 'Watch and browse YouTube videos'\n    }, {\n        onClick: () => {\n            bp.open('youtube');\n        }\n    });\n\n    bp.apps.desktop.addShortCut({\n        name: 'camera',\n        icon: `desktop/assets/images/icons/icon_camera_64.png`,\n        label: 'Camera',\n        description: 'Capture photos or videos'\n    }, {\n        onClick: () => {\n            bp.open('camera');\n        },\n    });\n\n    if (!bp.isMobile()) {\n        bp.apps.desktop.addShortCut({\n            name: 'piano',\n            icon: `desktop/assets/images/icons/icon_piano_64.png`,\n            label: 'Piano',\n            description: 'Play a virtual piano keyboard'\n        }, {\n            onClick: () => {\n                bp.open('piano');\n            }\n        });\n    }\n\n    bp.apps.desktop.addShortCut({\n        name: 'fluid-simulation',\n        icon: `desktop/assets/images/icons/icon_fluidsimulation_64.png`,\n        label: 'Fluid Simulation',\n        description: 'Interact with a fluid dynamics simulation'\n    }, {\n        onClick: () => {\n            bp.open('fluid-simulation');\n        }\n    });\n\n    bp.apps.desktop.addShortCut({\n        name: 'sampler',\n        icon: `desktop/assets/images/icons/icon_midifighter_64.png`,\n        label: 'Sampler',\n        description: 'Create and mix audio samples'\n    }, {\n        onClick: () => {\n            bp.open('sampler');\n        }\n    });\n\n    bp.apps.desktop.addShortCut({\n        name: 'audio-visual',\n        icon: `desktop/assets/images/icons/icon_visuals_64.png`,\n        label: 'Audio Visuals',\n        description: 'Experience audio-responsive visuals'\n    }, {\n        onClick: () => {\n            bp.open('audio-visual');\n        }\n    });\n\n    function coinBeta() {\n        /*\n        bp.apps.desktop.addShortCut({\n            name: 'orderbook',\n            icon: `desktop/assets/images/icons/icon_orderbook_64.png`,\n            label: 'Orderbook',\n            description: 'View trading order book data'\n        }, {\n            onClick: () => {\n                bp.open('orderbook');\n            }\n        });\n        */\n        bp.apps.desktop.addShortCut({\n            name: 'coin',\n            icon: `desktop/assets/images/icons/icon_coin_64.png`,\n            label: 'Buddy Coins',\n            description: 'Manage your virtual currency'\n        }, {\n            onClick: () => {\n                bp.open('coin');\n            }\n        });\n\n\n        bp.apps.desktop.addShortCut({\n            name: 'portfolio',\n            icon: `desktop/assets/images/icons/icon_portfolio_64.png`,\n            label: 'Portfolio',\n            description: 'Track your investments and assets'\n        }, {\n            onClick: () => {\n                bp.open('portfolio');\n            }\n        });\n\n        /*\n        bp.apps.desktop.addShortCut({\n            name: 'buddybux',\n            icon: `desktop/assets/images/icons/icon_buddybux_64.png`,\n            label: 'BuddyBux',\n            description: 'Manage BuddyBux currency'\n        }, {\n            onClick: () => {\n                bp.open('buddybux');\n            }\n        });\n        */\n\n        bp.apps.desktop.arrangeShortcuts(3);\n    }\n\n    window.coinBeta = coinBeta;\n\n    /*\n    bp.apps.desktop.addShortCut({\n        name: 'Merlin',\n        icon: `desktop/assets/images/icons/icon_merlin_64.png`,\n        label: 'Merlin Automated Assistant',\n        description: 'Access your AI assistant'\n    }, {\n        onClick: () => {\n            desktop.ui.openWindow('merlin');\n        }\n    });\n    */\n\n    bp.apps.desktop.addFolder({\n        name: 'Games',\n        height: 250,\n        items: [\n            {\n                id: 'mantra',\n                label: 'Mantra',\n                description: 'Play the Mantra game'\n            },\n            {\n                id: 'minesweeper',\n                label: 'Minesweeper',\n                description: 'Classic Minesweeper puzzle game'\n            },\n            {\n                id: 'emulator',\n                label: 'NES',\n                options: {\n                    context: 'nes',\n                },\n                icon: 'desktop/assets/images/icons/icon_nes_64.png',\n                description: 'Play Nintendo Entertainment System games'\n            },\n            {\n                id: 'emulator',\n                label: 'Sega',\n                options: {\n                    context: 'sega',\n                },\n                icon: 'desktop/assets/images/icons/icon_sega_64.png',\n                description: 'Play Sega console games'\n            },\n            {\n                id: 'emulator',\n                label: 'SNES',\n                options: {\n                    context: 'snes',\n                },\n                icon: 'desktop/assets/images/icons/icon_snes_64.png',\n                description: 'Play Super Nintendo games'\n            },\n            {\n                id: 'emulator',\n                label: 'Atari 2600',\n                options: {\n                    context: 'atari2600',\n                },\n                icon: 'desktop/assets/images/icons/icon_atari2600_64.png',\n                description: 'Play Atari 2600 games'\n            },\n            {\n                id: 'emulator',\n                label: 'n64',\n                options: {\n                    context: 'n64',\n                },\n                icon: 'desktop/assets/images/icons/icon_n64_64.png',\n                description: 'Play Nintendo 64 games'\n            },\n            {\n                id: 'solitaire',\n                label: 'Solitaire',\n                description: 'Classic Solitaire card game'\n            }\n        ]\n    });\n\n    bp.apps.desktop.addFolder({\n        name: 'Hacking Tools',\n        width: 320,\n        height: 220,\n        items: [\n            {\n                id: 'globe',\n                label: 'Globe',\n                description: 'Visualize global network data'\n            },\n            {\n                id: 'hacker-typer',\n                label: 'Hack Typer',\n                description: 'Simulate hacking with a typing game'\n            },\n            {\n                id: 'hex-editor',\n                label: 'Hex Editor',\n                description: 'Edit files in hexadecimal format'\n            },\n            {\n                id: 'maps',\n                label: 'Maps',\n                description: 'Access mapping and navigation tools'\n            },\n            {\n                id: 'spellbook',\n                label: 'Spellbook',\n                description: 'Manage scripts or commands'\n            }\n        ],\n    });\n\n    bp.apps.desktop.addShortCut({\n        name: 'audio-player',\n        icon: `desktop/assets/images/icons/icon_audio-player_64.png`,\n        label: 'Audio Player',\n        description: 'Play and manage audio files'\n    }, {\n        onClick: () => {\n            bp.open('audio-player');\n        }\n    });\n\n    coinBeta();\n\n}","export default function addShortCut(app, options = {}, parent) {\n    // Default onClick behavior if not provided\n    if (typeof options.onClick !== 'function') {\n        options.onClick = () => console.log('desktop app - Missing options.onClick function', app.name);\n    }\n\n    // Create the shortcut element\n    const el = document.createElement('div');\n    el.className = `icon shortcut ${app.class || ''} bp-desktop-shortcut`;\n\n    const anchor = document.createElement('a');\n    anchor.href = app.href || `#icon_dock_${app.name}`;\n\n    if (!app.textIcon) {\n        const image = document.createElement('img');\n        image.className = 'bp-desktop-icon';\n        image.loading = 'lazy';\n        image.src = app.icon;\n        if (options.imageStyle) {\n            Object.keys(options.imageStyle).forEach(key => {\n                image.style[key] = options.imageStyle[key];\n            });\n        }\n        anchor.appendChild(image);\n\n    } else {\n        const image = document.createElement('div');\n        // image.className = 'bp-desktop-icon';\n        image.textContent = app.textIcon;\n        image.style.fontSize = '32px';\n        //image.style.paddingLeft = '20px';\n        image.style.position = 'relative';\n        image.style.bottom = '10px';\n        if (options.imageStyle) {\n            Object.keys(options.imageStyle).forEach(key => {\n                image.style[key] = options.imageStyle[key];\n            });\n        }    anchor.appendChild(image);\n\n    }\n\n    const title = document.createElement('span');\n    title.className = 'title';\n    title.textContent = app.label || app.name;\n\n    anchor.appendChild(title);\n    el.appendChild(anchor);\n\n    // Adding onClick event to the .icon container\n    el.addEventListener('click', (e) => {\n        e.preventDefault();\n        options.onClick(e, app);\n        return false;\n    });\n\n    // Append the new shortcut to the container\n    let p = parent || this.shortCutsContainer;\n\n    p.appendChild(el);\n\n    // Apply jQuery UI draggable if enabled\n    if (this.enableShortcutDragging) {\n        $(el).draggable({\n            containment: 'parent' // Confine dragging within the parent container\n        });\n    }\n\n    // register the app with desktop.apps\n    // console.log('ADDING APP', app.name, app, options);\n    app.options = options;\n    if (options && options.context) {\n        this.apps[app.name + '-' + options.context] = app;\n\n    } else {\n        this.apps[app.name] = app;\n\n    }\n\n}\n\n/*\n\nexport default function addShortCut(container, app, options = {}) {\n    if (typeof options.onClick !== 'function') {\n        options.onClick = () => console.log('desktop app - Missing options.onClick function', app.name);\n    }\n\n    const el = document.createElement('div');\n    el.className = `icon shortcut ${app.class || ''}`;\n\n    const anchor = document.createElement('a');\n    anchor.href = app.href || `#icon_dock_${app.name}`;\n\n    const image = document.createElement('img');\n    image.className = 'bp-desktop-icon';\n    image.loading = 'lazy';\n    image.src = app.icon;\n\n    const title = document.createElement('span');\n    title.className = 'title';\n    title.textContent = app.label || app.name;\n\n    anchor.appendChild(image);\n    anchor.appendChild(title);\n    el.appendChild(anchor);\n\n    el.addEventListener('click', options.onClick);\n\n    container.appendChild(el);\n\n    if (this.enableShortcutDragging) {\n        $(el).draggable({\n            containment: 'parent'\n        });\n    }\n}\n\n*/","import Folder from './Folder.js';\nimport arrangeShortcuts from '../lib/shortcuts/arrangeShortCuts.js';\nexport default function addFolder(metadata) {\n\n    let that = this;\n\n    function renderItem(_item, parent) {\n\n        let item = {};\n        if (typeof _item === 'string') {\n            item.id = _item;\n            item.name = _item;\n            item.label = _item;\n        } else {\n            item = _item;\n        }\n\n        if (!item.icon) {\n            item.icon = `/desktop/assets/images/icons/icon_${item.id}_64.png`;\n        }\n\n        item.options = item.options || {};\n        that.addShortCut({\n            name: item.id,\n            icon: item.icon,\n            label: item.label,\n        }, {\n            onClick: () => {\n                bp.open(item.id, item.options);\n            },\n            ...item.options\n        }, parent);\n\n    }\n\n    let folderHolder = document.createElement('div');\n    folderHolder.className = 'folder-holder';\n\n    metadata.items.forEach(item => {\n        renderItem(item, folderHolder);\n    });\n\n\n    const folder = new Folder(metadata, {\n        desktop: this,\n        parentElement: this.shortCutsContainer,\n        depth: 0,\n        onOpen: () => {\n\n            this.arrangeShortcuts(4, {\n                parent: folderHolder,\n                x: 0,\n                y: 20\n            })\n\n            console.log('Folder opened:', metadata.name);\n            this.bp.apps.ui.windowManager.createWindow({\n                id: metadata.name,\n                title: metadata.name,\n                icon: '/desktop/assets/images/icons/icon_folder.png',\n                width: metadata.width || 400,\n                height: metadata.height || 150,\n                parent: $('#desktop').get(0),\n                content: folderHolder\n            });\n\n        }\n    });\n    this.folders.push(folder);\n\n    folder.render()\n    //this.addShortCut(folder);\n    // this.shortCutsContainer.appendChild(folder.render());\n}","export default function removeShortCut(appName) {\n    // Find and remove a shortcut based on the app name\n    const shortcuts = Array.from(this.shortCutsContainer.children);\n    const shortcut = shortcuts.find(el => el.querySelector('.title').textContent === appName);\n    if (shortcut) {\n        this.shortCutsContainer.removeChild(shortcut);\n    }\n}","export default function arrangeShortcuts(cols = 4, options = {\n    rowWidth: 74,\n    rowHeight: 100,\n    x: 0, // TODO: we should start from the x and y position in our calculations\n    y: 0\n}) {\n    let parent;\n    if (typeof options.parent !== 'undefined') {\n        parent = options.parent;\n    } else {\n        parent = this.shortCutsContainer;\n    }\n\n    if (typeof options.rowWidth !== 'number') {\n        options.rowWidth = 74;\n        if (this.bp.isMobile()) {\n            options.rowWidth = 256;\n        }\n    }\n\n    if (typeof options.rowHeight !== 'number') {\n        options.rowHeight = 100;\n        if (this.bp.isMobile()) {\n            options.rowHeight = 256;\n        }\n    }\n\n    if (typeof options.x !== 'number') {\n        options.x = 0;\n    }\n\n    if (typeof options.y !== 'number') {\n        options.y = 0;\n    }\n\n\n    const containerWidth = parent.offsetWidth || 800; // Get the container's width\n    const maxCols = Math.floor(containerWidth / options.rowWidth); // Calculate the maximum number of columns\n    const actualCols = cols < maxCols ? cols : maxCols; // Choose the lesser to avoid overflow\n\n    Array.from(parent.children).forEach((icon, index) => {\n        let x = (index % actualCols) * options.rowWidth; // Calculate x position\n        let y = Math.floor(index / actualCols) * options.rowHeight; // Calculate y position\n\n        let offSetY = 100;\n        if (this.bp.isMobile()) { // TODO: remove\n            y += offSetY; // Add an offset to the y position\n\n        }\n        let offsetX = 15;\n        x += offsetX; // Add an offset to the x position\n\n        x += options.x;\n        y += options.y;\n        // console.log('x:', x, 'y:', y);\n        icon.style.position = 'absolute'; // Corrected typo here\n        icon.style.left = `${x}px`; // Set left position\n        icon.style.top = `${y}px`; // Set top position\n    });\n}","// TODO: implement context menu options for desktop itself\nexport default function setupContextMenu() {\n    this.container.oncontextmenu = (event) => {\n        event.preventDefault();\n        this.showContextMenu(event.clientX, event.clientY);\n    };\n}\n","export default function  showContextMenu(x, y) {\n    const menu = document.createElement('div');\n    menu.className = 'desktop-context-menu';\n    menu.style.top = `${y}px`;\n    menu.style.left = `${x}px`;\n    menu.style.display = 'block';\n    // z-index is needed to display the menu on top of other elements\n    menu.style.zIndex = '9999';\n    menu.innerHTML = `\n        <ul>\n            <li onclick=\"bp.apps.wallpaper.setWallpaper()\">Set Wallpaper to Url</li>\n            <li onclick=\"bp.apps.wallpaper.removeWallpaper()\">Remove Wallpaper</li>\n            <li onclick=\"bp.apps.desktop.viewSource()\">View Source</li>\n        </ul>\n    `;\n    // clear the body before appending the menu\n    document.body.appendChild(menu);\n    // Hide menu on click anywhere\n    document.addEventListener('click', () => menu.remove(), { once: true });\n}","export default async function viewSource (url = 'https://raw.githubusercontent.com/Marak/buddypond/refs/heads/master/index.html') {\n    // fetch the content as text\n    const response = await fetch(url);\n    const content = await response.text();\n    await this.bp.load('editor-monaco', {\n        content: content\n    });\n    this.bp.apps['editor-monaco'].open();\n}"],"names":["Folder","constructor","data","options","this","parentElement","desktop","depth","render","app","folderDiv","document","createElement","className","class","classList","add","anchor","image","loading","src","title","textContent","label","name","id","appendChild","$","draggable","containment","addEventListener","e","onOpen","open","File","console","log","el","icon","onClick","enableShortcutDragging","Desktop","bp","apps","folders","container","shortCutsContainer","parent","body","setupContextMenu","init","load","coinBeta","addShortCut","description","arrangeShortcuts","isMobile","window","addFolder","height","items","context","width","defaultDesktopShortcuts","renderNode","node","skipFolderUI","children","length","forEach","child","text","endsWith","Shortcut","toggleMute","settings","audio_enabled","set","show","hide","play","tryHard","Infinity","openFolder","folderId","folder","find","f","error","prototype","href","textIcon","style","fontSize","position","bottom","imageStyle","Object","keys","key","preventDefault","metadata","that","folderHolder","item","_item","renderItem","x","y","ui","windowManager","createWindow","get","content","push","removeShortCut","appName","shortcut","Array","from","querySelector","removeChild","cols","rowWidth","rowHeight","containerWidth","offsetWidth","maxCols","Math","floor","actualCols","index","left","top","oncontextmenu","event","showContextMenu","clientX","clientY","menu","display","zIndex","innerHTML","remove","once","viewSource","async","url","response","fetch","showDesktopIcons","shortcutElement"],"mappings":"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"}