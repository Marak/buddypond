{"version":3,"file":"profile.js","sources":["../../../apps/based/profile/lib/wallpapers.js","../../../apps/based/profile/lib/theme-editor.js","../../../apps/based/profile/lib/api-keys.js","../../../apps/based/profile/profile.js","../../../apps/based/profile/lib/bindUIEvents.js","../../../apps/based/profile/lib/user-settings.js"],"sourcesContent":["const wallpapers = {};\n\nwallpapers.legacyWallpapers = function (bp) {\n\n\n  if (bp.apps.wallpaper) {\n    renderWallpaperTypes($('.wallpaperTypes'));\n    bp.on('settings::wallpaper_color', 'update-wallpaper-color-picker', function(color){\n      $('.wallpaperOptionColor').setColor(color)\n      $('.simpleColorDisplay').html(color)\n\n      // update the color of the active wallpaper\n      let activeName = bp.apps.wallpaper.wallpaperManager.active;\n      let active = bp.apps.wallpaper.wallpaperManager.wallpapers[activeName];\n      if (active) {\n        active.changeColor(color);\n      } else {\n        console.log('cannot change color, active wallpaper not found', activeName)\n      }\n    });\n\n    function onSelect (context, hex) {\n      bp.set('wallpaper_color', '#' + hex);\n    }\n\n    function onCellEnter (context, hex) {\n      bp.set('wallpaper_color', '#' + hex);\n    }\n\n    $('.wallpaperOptionColor').simpleColor({\n      boxHeight: 20,\n      cellWidth: 16,\n      cellHeight: 16,\n      defaultColor: desktop.settings.wallpaper_color || '#008F11',\n      inputCSS: { 'border-radius': '4px', 'font-size': '4px', 'width': '10px' },\n      chooserCSS: { 'border': '1px solid #660033', 'top': '20px' },\n      displayCSS: {  },\n      displayColorCode: true,\n      livePreview: true,\n      insert: 'before',\n      onSelect: function (hex, element) {\n        onSelect(bp.apps.wallpaper.active, hex);\n      },\n      onCellEnter: function (hex, element) {\n        onCellEnter(bp.apps.wallpaper.active, hex);\n      },\n      onClose: function (element) {\n      }\n    });\n\n\n    $('input[name=wallpaper_opt]').on('input', function () {\n      let radioValue = $('input[name=wallpaper_opt]:checked').val();\n      // update desktop.settings.wallpaper_name\n      bp.set('wallpaper_name', radioValue);\n    });\n\n\n  }\n\n}\n\nfunction renderWallpaperTypes (el) {\n    for (let w in bp.apps.wallpaper.wallpaperManager._wallpapers) {\n      let _wallpaper = bp.apps.wallpaper.wallpaperManager._wallpapers[w];\n      let checked = '';\n      if (w === desktop.settings.wallpaper_name) {\n        checked = 'checked';\n      }\n      let str = `\n      <input type=\"radio\" id=\"wallPaperRadio${w}\" name=\"wallpaper_opt\" class=\"wallpaper_opt\" value=\"${w}\" ${checked}>\n      <label for=\"wallPaperRadio${w}\">${_wallpaper.label}</label>\n      <br>\n      `;\n      el.append(str);\n    }\n  }\n\n  export default wallpapers;","export default function themeEditor(themeName) {\n    let themeData = this.bp.apps.themes.themes[themeName];\n    let themeStyles = themeData.styles || {};\n    let themeStylesTable = $('.theme-styles', this.profileWindow.content);\n    themeStylesTable.html(''); // clear table\n\n    // Create a deep copy so edits don't mutate original\n    let editableTheme = JSON.parse(JSON.stringify(themeData));\n\n    for (let styleName in themeStyles) {\n        let styleValue = themeStyles[styleName];\n        let row = $('<tr></tr>');\n        let propsCell = $('<td colspan=\"2\"></td>');\n\n        propsCell.append(`<div class=\"style-block\"><div class=\"style-title\">${styleName}</div>`);\n\n        for (let prop in styleValue) {\n            let val = styleValue[prop];\n            let inputId = `input_${styleName}_${prop}`.replace(/\\W+/g, '_');\n\n            let colorInput = '';\n            if (isColorProperty(prop, val)) {\n                let safeColor = val.startsWith('#') ? val : '#ffffff';\n                colorInput = `<input type=\"color\" value=\"${safeColor}\" data-style=\"${styleName}\" data-prop=\"${prop}\" class=\"color-picker\" />`;\n            }\n\n            propsCell.append(`\n        <div class=\"prop-row\">\n            <label class=\"prop-name\">${prop}:</label>\n            <input type=\"text\" id=\"${inputId}\" value=\"${val}\" data-style=\"${styleName}\" data-prop=\"${prop}\" />\n            ${colorInput}\n        </div>\n    `);\n            //  <button class=\"remove-prop-btn\" data-style=\"${styleName}\" data-prop=\"${prop}\">✕</button>\n\n        }\n\n        /*\n        propsCell.append(`\n            <div class=\"prop-row\">\n                <label class=\"prop-name\">+</label>\n                <input type=\"text\" class=\"new-prop-name\" placeholder=\"property\" data-style=\"${styleName}\" />\n                <input type=\"text\" class=\"new-prop-value\" placeholder=\"value\" data-style=\"${styleName}\" />\n                <button class=\"add-prop-btn\" data-style=\"${styleName}\">Add</button>\n            </div>\n        </div>`);\n        */\n\n\n        row.append(propsCell);\n        themeStylesTable.append(row);\n    }\n\n    // 🔁 Listen to changes and update theme live\n    themeStylesTable.on('input', 'input[type=\"text\"], input.color-picker', function (e) {\n        // set dropdown to Custom\n        $('.themeSelect', this.profileWindow.content).val('Custom');\n        let style = $(e.target).data('style');\n        let prop = $(e.target).data('prop');\n        console.log('style', style, 'prop', prop);\n        if (!style || !prop) return;\n\n        let newValue = $(e.target).val();\n        // find the closest text input and set its value\n        if ($(e.target).hasClass('color-picker')) {\n            let closestTextInput = $(e.target).closest('.prop-row').find('input[type=\"text\"]');\n            closestTextInput.val(newValue);\n            // newValue = $(e.target).val();\n        }\n        editableTheme.styles[style][prop] = newValue;\n        console.log('editableTheme.styles', editableTheme);\n        editableTheme.name = 'Custom';\n        this.bp.apps.themes.applyTheme(editableTheme); // re-apply updated theme\n    }.bind(this));\n\n    // ➕ Add new property\n    themeStylesTable.on('click', '.add-prop-btn', function (e) {\n        let style = $(e.target).data('style');\n        let row = $(e.target).closest('div');\n        let propInput = row.find('.new-prop-name');\n        let valInput = row.find('.new-prop-value');\n\n        let newProp = propInput.val().trim();\n        let newVal = valInput.val().trim();\n\n        if (newProp && newVal) {\n            editableTheme.styles[style][newProp] = newVal;\n            $('.themeSelect', this.profileWindow.content).trigger('change'); // re-render\n        }\n    }.bind(this));\n\n    // ❌ Remove property\n    themeStylesTable.on('click', '.remove-prop-btn', function (e) {\n        let style = $(e.target).data('style');\n        let prop = $(e.target).data('prop');\n        delete editableTheme.styles[style][prop];\n        $('.themeSelect', this.profileWindow.content).trigger('change'); // re-render\n    }.bind(this));\n\n    console.log('themeData', themeData);\n}\n\nfunction isColorProperty(prop, value) {\n    const colorProps = [\n        'color', 'background', 'background-color', 'border-color',\n        'outline-color', 'text-decoration-color', 'column-rule-color',\n        'fill', 'stroke'\n    ];\n\n    const isColorKey = colorProps.includes(prop.toLowerCase());\n\n    const colorRegex = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i\n        || /^rgba?\\(.+\\)$/i\n        || /^hsla?\\(.+\\)$/i\n        || /^[a-z]+$/i; // named colors\n\n    const isColorValue = colorRegex.test(value);\n\n    return isColorKey || isColorValue;\n}\n","export default async function apiKeys() {\n    let roles = ['deploy', 'read', 'write', 'admin'];\n\n    // Populate role checkboxes\n    const roleBox = $('#bp-api-keys-roles');\n    roles.forEach(role => {\n        const id = `bp-api-role-${role}`;\n        let checked = '';\n\n        if (role === 'deploy') {\n            checked = 'checked'; // Default to deploy role being checked\n        }\n\n        roleBox.append(`\n      <label for=\"${id}\" class=\"bp-api-keys-role-label\">\n        <input type=\"checkbox\" name=\"roles\" value=\"${role}\" id=\"${id}\" ${checked} />\n        ${role}\n      </label>\n    `);\n    });\n\n    // Handle form submission\n    $('.bp-api-keys-form').on('submit', async function (e) {\n        e.preventDefault();\n        const form = $(this);\n        const name = form.find('input[name=\"name\"]').val();\n        const expiry = form.find('input[name=\"expiry\"]').val();\n        const roles = form.find('input[name=\"roles\"]:checked')\n            .map(function () { return this.value; })\n            .get();\n\n        if (!name || roles.length === 0) {\n            alert('Please provide a name and at least one role.');\n            return false;\n        }\n\n        try {\n            const newKey = await client.addApiKey(name, roles, expiry || null);\n\n            console.log('New API key created:', newKey);\n            renderApiKeys(); // Refresh key list\n        } catch (err) {\n            alert('Failed to create API key');\n            console.error(err);\n        }\n        return false;\n    });\n\n    async function renderApiKeys() {\n        const list = $('#bp-api-keys-list');\n        list.empty();\n        const apiKeys = await client.getApiKeys();\n\n        apiKeys.forEach((key) => {\n            const keyPrefix = 'Hidden, click \"Reveal\" to show API Key';\n            const roles = Array.isArray(key.roles) ? key.roles : (key.role ? [key.role] : []);\n            const created = new Date(key.ctime || key.created_at).toLocaleString();\n            const expiry = key.expiry ? new Date(key.expiry).toLocaleDateString() : 'Never';\n            const usage = key.usage ? `${key.usage} times` : 'Not used yet';\n\n           const li = $(`\n  <li class=\"bp-api-keys-list-item\">\n    <div class=\"bp-api-keys-card\">\n      <div class=\"bp-api-keys-header\">\n        <strong class=\"bp-api-keys-name\">${key.name}</strong>\n        <button class=\"bp-api-keys-revoke\" data-id=\"${key.id}\">Revoke</button>\n      </div>\n\n      <div class=\"bp-api-keys-keybox\" data-full=\"${key.key || key.id}\">\n        <code class=\"bp-api-keys-code\">${keyPrefix}</code>\n        <div class=\"bp-api-keys-buttons\">\n          <button class=\"bp-api-keys-reveal\">Reveal</button>\n          <button class=\"bp-api-keys-copy\">Copy</button>\n          <button class=\"bp-api-keys-verify\">Verify</button>\n        </div>\n        <div class=\"bp-api-keys-status\"></div>\n      </div>\n\n      <div class=\"bp-api-keys-meta\">\n        <div><strong>Roles:</strong> ${roles.join(', ')}</div>\n        <div><strong>Created:</strong> ${created}</div>\n        <div><strong>Expiry:</strong> ${expiry}</div>\n        <div><strong>Used:</strong> <span class=\"usage-count\">${usage}</span></div>\n\n      </div>\n    </div>\n  </li>\n`);\n\n\n            list.append(li);\n        });\n\n        // Handle key reveal\n        $('.bp-api-keys-reveal').on('click', function () {\n            const box = $(this).closest('.bp-api-keys-keybox');\n            const fullKey = box.data('full');\n            box.find('code').text(fullKey);\n            $(this).remove(); // Remove the button after revealing\n        });\n\n        // Handle copy to clipboard\n        $('.bp-api-keys-copy').on('click', function () {\n            const box = $(this).closest('.bp-api-keys-keybox');\n            const fullKey = box.data('full');\n            if (navigator.clipboard) {\n                navigator.clipboard.writeText(fullKey).then(() => {\n                    $(this).text('Copied!');\n                    setTimeout(() => $(this).text('Copy'), 1500);\n                });\n            } else {\n                alert('Clipboard API not supported in this browser.');\n            }\n        });\n\n        // Handle API key verification\n$('.bp-api-keys-verify').on('click', async function () {\n  const box = $(this).closest('.bp-api-keys-keybox');\n  const fullKey = box.data('full');\n  const statusBox = box.find('.bp-api-keys-status');\n\n  // Get roles from meta block\n  const rolesText = box.closest('.bp-api-keys-card').find('.bp-api-keys-meta')\n    .find('div:contains(\"Roles:\")').text().replace('Roles:', '').trim();\n  const roles = rolesText.split(',').map(r => r.trim()).filter(Boolean);\n\n  statusBox.text('Verifying…');\n\n  try {\n    const result = await client.validateApiKey(fullKey, roles);\n    if (result.valid) {\n      statusBox.text('✅ Valid').css('color', 'green');\n      // update usage count\n      const usageCount = box.closest('.bp-api-keys-card').find('.usage-count');\n      usageCount.text(result.usage  + ' times'|| '0 times');\n    } else {\n      statusBox.text(`❌ Invalid (${result.reason || 'unknown'})`).css('color', 'red');\n    }\n  } catch (err) {\n    console.error('Validation failed', err);\n    statusBox.text('❌ Error validating key').css('color', 'red');\n  }\n});\n\n\n        // Handle revoke\n        $('.bp-api-keys-revoke').on('click', async function () {\n            const keyId = $(this).data('id');\n            if (!confirm('Are you sure you want to revoke this API key?')) return;\n            await client.revokeApiKey(keyId);\n            renderApiKeys(); // Refresh list\n        });\n    }\n\n\n    renderApiKeys(); // Initial load\n}\n\n\nconst client = {};\n\nclient.endpoint = buddypond.apiKeysEndpoint;\n\nclient.addApiKey = async function (name, roles, expiry) {\n    return await client.apiRequest('/api-keys', 'POST', {\n        name,\n        roles,\n        expiry\n    });\n};\n\nclient.revokeApiKey = async function (keyId) {\n    return await client.apiRequest(`/api-keys/${keyId}`, 'DELETE');\n};\n\nclient.getApiKeys = async function () {\n    const keys = await client.apiRequest('/api-keys', 'GET');\n    if (Array.isArray(keys)) return keys;\n    throw new Error('Invalid API key list');\n};\n\nclient.validateApiKey = async function (key, requireRole) {\n    if (!key || !requireRole || !Array.isArray(requireRole) || requireRole.length === 0) {\n        throw new Error('Invalid key or requireRole parameter');\n    }\n    return await client.apiRequest('/api-keys/validate', 'POST', {\n        key,\n        requireRole\n    });\n};\n\n\nclient.apiRequest = async (uri, method = 'GET', data = null) => {\n\n    const options = {\n        method: method\n    };\n\n    let headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"X-Me\": buddypond.me\n    };\n    if (buddypond.qtokenid) {\n        headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n    }\n\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    options.headers = headers;\n\n    let url = `${client.endpoint}${uri}`;\n    console.log('admin client making api request', url, options);\n\n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error in API request:', error);\n        throw error;\n    }\n\n};","import wallpapers from './lib/wallpapers.js';\nimport themeEditor from './lib/theme-editor.js';\nimport apiKeys from './lib/api-keys.js';\nimport bindUIEvents from './lib/bindUIEvents.js';\n// import LoadingContainer from '../ui/LoadingContainer/LoadingContainer.js';\nimport updateProfilePicture from './lib/updateProfilePicture.js';\nlet defaultFileContent = {};\n\n\nexport default class Profile {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        return this;\n    }\n\n    async init() {\n\n        // injects CSS link tag into the head of document\n        await this.bp.load('/v5/apps/based/profile/profile.css');\n        // await this.bp.load('/v5/apps/based/ui/LoadingContainer/LoadingContainer.css');\n        await this.bp.load('browser');\n        await this.bp.appendScript('/desktop/assets/js/jquery.simple-color.js');\n\n        // fetches html from the fragment and returns it as a string\n        this.html = await this.bp.load('/v5/apps/based/profile/profile.html');\n\n        return 'loaded Profile';\n    }\n\n    async open(options = {}) {\n\n        let buddyname = this.bp.me || options.context;\n        buddyname = buddyname.replace(\":\", \"\"); // remove any colons for now\n        buddyname = buddyname.replace(\" \", \"\"); // remove any spaces for now\n\n        // Create main content div and setup for tabs\n        let contentDiv = document.createElement('div');\n        contentDiv.classList.add('customProfile');\n\n        // create a new element from the html string\n        let profileContent = document.createElement('div');\n        profileContent.innerHTML = this.html;\n        //contentDiv.append($(buddyProfilePad.content).html());\n        //$(contentDiv).html(buddyProfilePad.content);\n        // $('.myProfile', profileContent).html(contentDiv);\n        //profileContent.append(contentDiv);\n\n        // Initialize tabs\n        if (!this.profileWindow) {\n            this.profileWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'profile',\n                title: 'Profile - ' + buddyname,\n                x: 50,\n                y: 100,\n                width: 800,\n                height: 500,\n                minWidth: 200,\n                minHeight: 200,\n                parent: $('#desktop')[0],\n                icon: '/desktop/assets/images/icons/icon_profile_64.png',\n                context: buddyname || 'default',\n                content: profileContent,\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                    this.profileWindow = null;\n                }\n            });\n            this.profileWindow.loggedIn = true;\n            this.tabs = new this.bp.apps.ui.Tabs('.tabs-container', '#' + this.profileWindow.id); // Initialize the tab functionality\n\n            this.tabs.onTab(async (tabId) => {\n                if (this.bp.me !== 'Guest') {\n                    $('.loggedIn', this.profileWindow.content).flexShow();\n                    $('.loggedOut', this.profileWindow.content).flexHide();\n\n                } else {\n                    $('.loggedIn', this.profileWindow.content).flexHide();\n                    $('.loggedOut', this.profileWindow.content).flexShow();\n\n                }\n            });\n\n            wallpapers.legacyWallpapers(bp);\n\n            this.bindUIEvents(options);\n\n\n            if (this.bp.me !== 'Guest') {\n                $('.loggedIn', this.profileWindow.content).flexShow();\n                $('.loggedOut', this.profileWindow.content).flexHide();\n\n            } else {\n                $('.loggedIn', this.profileWindow.content).flexHide();\n                $('.loggedOut', this.profileWindow.content).flexShow();\n                // navigate to themes tag by default if not logged in\n                this.tabs.showTab('#tab-themes');\n            }\n\n\n        } else {\n            // this.profileWindow.content.innerHTML = '';\n            // If the window exists and the context has changed, re-render the content\n            this.profileWindow.content = contentDiv;\n            if (this.profileWindow.context !== buddyname) {\n                this.profileWindow.context = buddyname;\n                $(this.profileWindow.content).html(contentDiv.innerHTML);\n                this.profileWindow.setTitle('Profile - ' + buddyname);\n                new this.bp.apps.ui.Tabs('#' + this.profileWindow.id); // Re-initialize the tab functionality\n                // this.profileWindow.render(); Uncomment if there's a render method to refresh the window\n            }\n        }\n\n        $('.yourApps tbody', this.profileWindow.content).html('');\n        for (let appName in bp.settings.apps_installed) {\n            // renderProfileApp(appName, $('.yourApps')[0]);\n        }\n\n        //$('.profileContent .ctime', this.profileWindow.content).html(buddyProfile.ctime);\n        //console.log('buddyProfile', buddyProfile);\n        //$('.buddyname', this.profileWindow.content).html(buddyProfile.buddyProfile.me);\n\n        // set the liveProfileLink\n        let liveLink = this.bp.config.host + '/' + this.bp.me\n        $('.liveProfileLink', this.profileWindow.content).attr('href', liveLink);\n        $('.liveProfileLink', this.profileWindow.content).html(liveLink);\n\n        $('.loggedIn', this.profileWindow).hide();\n        // $('.loggedIn').hide();\n\n\n        return this.profileWindow;\n\n    }\n}\n\nfunction renderProfileApp(appName, container) {\n    //app = desktop.app.appstore.apps[appName]\n    let app = bp.apps.desktop.appsList[appName];\n    //console.log('renderProfileApp', appName, app);\n\n    //console.log('renderProfileApp', appName, app);\n    // don't show Profile App itself in Profile App List\n    if (appName === 'profile') {\n        return;\n    }\n    let str = `\n      <tr class=\"open-app\" data-app=\"${appName}\">\n        <td>\n          <img class=\"appStoreIcon float-left\" src=\"desktop/assets/images/icons/icon_${app.icon || appName}_64.png\" />\n        </td>\n        <td>\n         ${app.description || app.label || appName}\n        </td>\n    </tr>`;\n    let el = document.createElement('tr');\n    el.classList.add('open-app');\n    el.setAttribute('data-app', appName);\n    el.innerHTML = str;\n    container.append(el);\n    return str;\n}\n\nProfile.prototype.bindUIEvents = bindUIEvents;\nProfile.prototype.themeEditor = themeEditor;\nProfile.prototype.apiKeys = apiKeys;","import userSettings from './user-settings.js';\n//import audioSettings from './audio-settings.js';\n//import PadEditor from '../../pad/PadEditor.js';\n\nexport default function bindUIEvents(options = {}) {\n\n    const profilePictureInput = document.getElementById('profile-picture-input');\n    const profilePictureImg = document.querySelector('.aim-profile-picture-img');\n    // const removeButton = document.querySelector('.aim-profile-picture-remove');\n\n    $('.aim-set-password-email').on('click', (e) => {\n        this.tabs.navigateToTab('#tabs-3');\n    });\n\n    // Handle file selection\n    profilePictureInput.addEventListener('change', async (event) => {\n        updateProfilePicture.call(this, event, profilePictureImg);\n    });\n    /*\n    // Handle remove button click\n    removeButton.addEventListener('click', () => {\n        // Reset to default avatar\n\n        // This is done by calling setStatus profile.profilePicture = '';\n        // await this.bp.apps.client.api.uploadProfilePicture(resizedFile);\n\n        // profilePictureImg.src = '/default-avatar.png';\n\n        // Stub for removing profile picture API call\n        // TODO: Replace with actual API call\n        console.log('Removing profile picture');\n        // Example: removeProfilePicture().then(() => {\n        //     profilePictureImg.src = '/default-avatar.png';\n        // }).catch(error => {\n        //     console.error('Remove failed:', error);\n        // });\n    });\n    */\n\n    // check if user profile has a profilePicture\n    let profilePicture = this.bp.apps.buddylist.data.profileState.profilePicture;\n    let profilePicturePreview = $('.aim-profile-picture-preview');\n\n    if (profilePicture) {\n\n        // profilePicture is a url, set the profilePicturePreview to the url\n        // create a new img element inside .aim-profile-picture-preview\n        let img = document.createElement('img');\n        img.src = profilePicture;\n        img.classList.add('aim-profile-picture-img');\n        profilePicturePreview.append(img);\n\n\n    } else {\n        const avatar = this.bp.vendor.dicebear.createAvatar(this.bp.vendor.dicebearAvatars, {\n            seed: this.bp.me, // Username as seed for consistent avatar\n            size: 128, // Avatar size in pixels\n            backgroundColor: [\"#f0f0f0\"], // Optional: Customize background\n        });\n\n        // Convert avatar to SVG string\n        const svg = avatar.toString();\n        console.log('Avatar SVG:', svg);\n\n        profilePicturePreview.html(svg);\n\n    }\n\n    $('.editProfileButton', this.profileWindow.content).on('click', () => {\n        // show the profile editor\n        $('.profileEditor', this.profileWindow.content).flexShow();\n        // hide the profile content\n        $('.customProfile', this.profileWindow.content).flexHide();\n        $('.updateProfileHtml', this.profileWindow.content).flexShow();\n        $('.cancelProfileEdit', this.profileWindow.content).flexShow();\n    });\n\n    //        $('.profileEditor', this.profileWindow.content).appendTo(this.profileWindow.content);\n\n    // $('.profileHtml', this.profileWindow.content).val(buddyProfilePad.content);\n\n    $('.cancelProfileEdit', this.profileWindow.content).on('click', () => {\n        // hide the profile editor\n        $('.profileEditor', this.profileWindow.content).flexHide();\n        // show the profile content\n        $('.customProfile', this.profileWindow.content).flexShow();\n        $('.updateProfileHtml', this.profileWindow.content).flexHide();\n        $('.cancelProfileEdit', this.profileWindow.content).flexHide();\n    });\n\n    $('.updateProfileHtml').flexHide();\n    $('.cancelProfileEdit').flexHide();\n\n    // TODO: add these back\n    //audioSettings(bp);\n    userSettings(bp);\n\n\n    let padEditorHolder = $('.pad-editor-holder', this.profileWindow.content)[0];\n    // padEditorHolder.className = 'pad-editor-holder';\n\n    /*\n    let fileExplorer = await this.bp.apps['file-explorer'].create();\n    console.log('fffff', fileExplorer.fileExplorer.container)\n    padEditorHolder.append(fileExplorer.fileExplorer.container);\n    profileContent.append(padEditorHolder);\n    */\n\n    let profileUrl = this.bp.config.host + '/' + this.bp.me;\n    // check if this.bp.config.host contains buddypond.com, if not append /index.html\n    if (this.bp.config.host.indexOf('buddypond.com') === -1) {\n        profileUrl = profileUrl + '/index.html';\n    }\n\n    if (!this.browser) {\n        this.browser = new this.bp.apps.browser.BrowserWindow(this.bp, padEditorHolder, profileUrl);\n\n    }\n\n    let yourProfile = $('#your-profile', this.profileWindow.content);\n    this.bp.on('file-explorer::update', 'update-profile-preview-if-profile-index', (data) => {\n        // check if data.path is /index.html\n        // if so, we wish to reload the browser window\n        this.browser.navigate(profileUrl);\n    });\n\n    yourProfile.append(padEditorHolder);\n\n    // TODO: navigate to tabs? this.tabs.showTab(options.context);\n    if (options.context && options.context === 'themes') {\n        $('.themesLink').click();\n    }\n\n    $('.me').html(this.bp.me);\n\n    if (options && options.type === 'settings') {\n        // if type is user-settings, show the user settings tab\n        this.tabs.showTab('#tabs-3');\n    }\n\n    if (options && options.type === 'themes') {\n        // if type is user-settings, show the user settings tab\n        this.tabs.showTab('#tabs-2');\n    }\n\n    $('.themeSelect', this.profileWindow.content).on('change', (e) => {\n        let val = $(e.target).val();\n        if (val === 'Custom') {\n            // get the custom theme styles\n            //let customTheme = this.bp.settings.custom_theme;\n            //this.bp.apps.themes.applyTheme(customTheme); // Apply selected theme\n            // do nothing\n            return;\n        }\n        this.bp.apps.themes.applyTheme(val); // Apply selected theme\n        this.themeEditor(val);\n    });\n\n    // set value of themeSelect to current theme\n    let currentTheme = this.bp.get('active_theme') || 'Light';\n    $('.themeSelect', this.profileWindow.content).val(currentTheme);\n    // trigger change to apply the theme\n    $('.themeSelect', this.profileWindow.content).trigger('change');\n\n    this.bp.on('settings::active_theme', 'update-dropdown', (data) => {\n        // Update the dropdown to reflect the new active theme\n        let activeTheme = this.bp.get('active_theme') || 'Light';\n        //$('.themeSelect', this.profileWindow.content).val(activeTheme);\n        //$('.themeSelect', this.profileWindow.content).trigger('change');\n    });\n\n    this.apiKeys();\n\n    $('.loggedIn', this.profileWindow).hide();\n    // $('.loggedIn').hide();\n\n\n\n\n}","export default async function legacyUserSettings(bp) {\n    $('.updateProfileButton').on('click', async function () {\n        let updates = {};\n        updates.email = $('.buddy_email').val();\n        updates.password = $('.buddy_password').val();\n        updates.confirmPassword = $('.confirm_buddy_password').val();\n        $('.updateProfileResponse').html('');\n        if (updates.password) {\n            if (!updates.confirmPassword || (updates.password !== updates.confirmPassword)) {\n                $('.updateProfileResponse').addClass('error');\n                $('.updateProfileResponse').html('Passwords do not match');\n                return;\n            }\n        }\n        console.log('Updating profile with', updates);\n        $('.updateProfileResponse').removeClass('error');\n        try {\n            let passwordChanged = await buddypond.updateAccount({ buddyname: bp.me, password: updates.password, email: updates.email });\n            console.log('password changed', passwordChanged);\n            // update successful\n            if (passwordChanged) {\n                $('.updateProfileResponse').html('Account updated successfully');\n            }\n        } catch (e) {\n            $('.updateProfileResponse').addClass('error');\n            $('.updateProfileResponse').html('Error: ' + e.message);\n            return;\n        }\n\n        /*\n        buddypond.updateBuddyProfile({ updates: updates }, function (err, res) {\n            if (res.error) {\n                alert(res.message);\n                return;\n            }\n            $('.updateProfileResponse').html('Updated!');\n        });\n        */\n    });\n\n    if (bp.apps.buddylist && bp.apps.buddylist.data.profileState && bp.apps.buddylist.data.profileState.email) {\n        $('.buddy_email').val(bp.apps.buddylist.data.profileState.email);\n    }\n    if (bp.apps.buddylist && bp.apps.buddylist.data.profileState && typeof bp.apps.buddylist.data.profileState.emailVerified === 'boolean') {\n        if (bp.apps.buddylist.data.profileState.emailVerified) {\n            $('.buddy_email_verified_text').html('Email Verified');\n            // $('.buddy_email_verify_button').hide();\n        } else {\n            $('.buddy_email_verified_text').html('Email Not Verified');\n            // $('.buddy_email_verify_button').show();\n        }\n    }\n\n    $('.updateProfileForm').on('submit', function (e) {\n        e.preventDefault();\n        // clear out local profile cache, this will trigger a re-render from next server update\n        // desktop.app.profileCache = {};\n        return false;\n    });\n\n    if (bp.apps.say) {\n        let voices = bp.apps.say.voices;\n        voices.forEach(function (v) {\n            $('.ttsVoice').append(`<option value=\"${v.voiceURI}\">${v.name} ${v.lang}</option>`);\n        });\n    \n    }\n\n    if (desktop.settings.tts_voice_index) {\n        $('.ttsVoice').prop('selectedIndex', desktop.settings.tts_voice_index);\n    }\n\n    $('.ttsVoice').on('change', function () {\n        //desktop.app.tts.voice = voices[$(this).prop('selectedIndex')];\n        let voice = voices[$(this).prop('selectedIndex')];\n        bp.apps.say.setVoice($(this).prop('selectedIndex'));\n        desktop.set('tts_voice', voice);\n        desktop.set('tts_voice_index', $(this).prop('selectedIndex'));\n        bp.say('Hello Beautiful');\n    });\n\n\n    $('.hideFlag').on('click', function () {\n        if ($(this).prop('checked')) {\n            desktop.set('geo_flag_hidden', true);\n        } else {\n            desktop.set('geo_flag_hidden', false);\n        }\n    });\n\n\n\n}"],"names":["wallpapers","renderWallpaperTypes","el","w","bp","apps","wallpaper","wallpaperManager","_wallpapers","_wallpaper","checked","desktop","settings","wallpaper_name","str","label","append","isColorProperty","prop","value","isColorKey","includes","toLowerCase","isColorValue","test","legacyWallpapers","onSelect","context","hex","set","onCellEnter","$","on","color","setColor","html","activeName","active","changeColor","console","log","simpleColor","boxHeight","cellWidth","cellHeight","defaultColor","wallpaper_color","inputCSS","width","chooserCSS","border","top","displayCSS","displayColorCode","livePreview","insert","element","onClose","radioValue","val","client","endpoint","buddypond","apiKeysEndpoint","addApiKey","async","name","roles","expiry","apiRequest","revokeApiKey","keyId","getApiKeys","keys","Array","isArray","Error","validateApiKey","key","requireRole","length","uri","method","data","options","headers","Accept","me","qtokenid","body","JSON","stringify","url","response","fetch","ok","status","json","error","Profile","constructor","this","init","load","appendScript","open","buddyname","replace","contentDiv","document","createElement","classList","add","profileContent","innerHTML","profileWindow","content","setTitle","ui","Tabs","id","windowManager","createWindow","title","x","y","height","minWidth","minHeight","parent","icon","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","loggedIn","tabs","onTab","tabId","flexShow","flexHide","bindUIEvents","showTab","appName","apps_installed","liveLink","config","host","attr","hide","prototype","profilePictureInput","getElementById","profilePictureImg","querySelector","e","navigateToTab","addEventListener","event","updateProfilePicture","call","profilePicture","buddylist","profileState","profilePicturePreview","img","src","svg","vendor","dicebear","createAvatar","dicebearAvatars","seed","size","backgroundColor","toString","updates","email","password","confirmPassword","addClass","removeClass","passwordChanged","updateAccount","message","emailVerified","preventDefault","say","voices","forEach","v","voiceURI","lang","tts_voice_index","voice","setVoice","userSettings","padEditorHolder","profileUrl","indexOf","browser","BrowserWindow","yourProfile","navigate","click","type","target","themes","applyTheme","themeEditor","currentTheme","get","trigger","apiKeys","themeName","themeData","themeStyles","styles","themeStylesTable","editableTheme","parse","styleName","styleValue","row","propsCell","inputId","colorInput","startsWith","style","newValue","hasClass","closest","find","bind","propInput","valInput","newProp","trim","newVal","roleBox","renderApiKeys","list","empty","role","created","Date","ctime","created_at","toLocaleString","toLocaleDateString","usage","li","join","box","fullKey","text","remove","navigator","clipboard","writeText","then","setTimeout","alert","statusBox","split","map","r","filter","Boolean","result","valid","css","reason","err","confirm","form","newKey"],"mappings":"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"}