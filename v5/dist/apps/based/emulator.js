class e{constructor(e,t={}){return this.bp=e,this.emulator=null,this.romData=null,this.emulatorWindows={},this.emulatorIcons={nes:"/desktop/assets/images/icons/icon_nes_64.png",sega:"/desktop/assets/images/icons/icon_sega_64.png",snes:"/desktop/assets/images/icons/icon_snes_64.png",atari2600:"/desktop/assets/images/icons/icon_atari2600_64.png",n64:"/desktop/assets/images/icons/icon_n64_64.png"},this}async open({context:e="nes"}){this.emulatorWindows[e]||(this.emulatorWindows[e]=[]);const t=`emulators-${e}-${this.emulatorWindows[e].length+1}`;if(this.emulatorWindows[e].some((e=>e.id===t)))return void console.log(`Emulator window already exists: ${t}`);const o=this.createEmulatorWindow(e,t);this.emulatorWindows[e].push({id:t,win:o});const s=o.content,n=document.createElement("img");n.id=`emulator-logo-${e}`,n.src=this.emulatorIcons[e]||this.emulatorIcons.nes,n.style.position="absolute",n.style.top="50%",n.style.left="50%",n.style.transform="translate(-50%, -50%)",n.style.zIndex="1000",n.style.opacity="0.8",n.style.maxWidth="50%",n.style.maxHeight="50%",n.onclick=()=>{o.randomGameButton?(o.randomGameButton.click(),n.style.display="none"):console.warn("Random game button not found")},n.style.cursor="pointer",console.log("Adding logo to emulator window:",n),o.logo=n,s.parentNode.appendChild(o.logo);const l=await this.bp.load(`${a}/${e}.json`);this.setupGameSelector(o,l,e),this.setupSearchInput(o,l,e),this.setupRandomGameButton(o,l,e)}createEmulatorWindow(e,t){return this.bp.apps.ui.windowManager.createWindow({id:t,title:{nes:"NES",sega:"Sega Genesis",n64:"Nintendo 64",snes:"Super Nintendo",atari2600:"Atari 2600"}[e]||"Emulator",x:50,y:100,width:600,height:500,minWidth:600,minHeight:500,parent:$("#desktop")[0],iframeContent:"/v5/apps/based/emulator/emulator-js/index.html",icon:this.emulatorIcons[e]||this.emulatorIcons.nes,resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,onClose:()=>{this.emulatorWindows[e]=this.emulatorWindows[e].filter((e=>e.id!==t))},onMessage:e=>{console.log("Emulator Message:",e),"ready"===e.event&&console.log("Emulator is ready")},onLoad:t=>{t.gameUrl&&(t.sendMessage({event:"startGame",message:"Hello from Emulator",gameSystem:e,gameUrl:t.gameUrl}),t.gameIsRunning=!0,t.logo.style.display="none")}})}setupGameSelector(e,t,o){const s=e.content,n=document.createElement("div");n.classList.add("menu-bars"),n.innerHTML='<select id="loadROM">Load ROM</select>',s.parentNode.insertBefore(n,s),t.forEach((e=>{"sega"===o?$("#loadROM").append(`<option value="${a}/${o}/${e}">${e}</option>`):$("#loadROM").append(`<option value="${a}/${o}/roms/${e}">${e}</option>`)})),$(n).hide(),$("#loadROM").on("change",(t=>{e.sendMessage({event:"unloadGame",gameSystem:o,gameUrl:t.target.value}),e.gameUrl=t.target.value,e.gameIsRunning=!1}))}setupSearchInput(e,t,a){const o=e.content,s=document.createElement("input");s.type="text",s.id="searchInput",s.placeholder=`Search for a ${a.toUpperCase()} game`,s.style="font-size: 2.5em; background-color: black; color: white;",o.parentNode.insertBefore(s,o),$(s).autocomplete({source:t,select:(t,o)=>this.handleGameSelection(o.item.value,e,a)}).data("ui-autocomplete")._renderItem=(e,t)=>{const a=t.label.replace(/_/g," ").replace(/\.(nes|zip|smd|bin)/,"");return $("<li>").attr("data-value",t.value).append($("<div>").text(a)).appendTo(e)}}setupRandomGameButton(e,t,a){const o=e.content,s=document.createElement("button");s.innerHTML="Random Game",s.classList.add("button"),s.style.width="100%",s.onclick=()=>this.handleRandomGame(t,e,a),e.randomGameButton=s,o.parentNode.insertBefore(s,o)}handleGameSelection(e,t,o){let s=`${a}/${o}/roms/${e}`;"sega"===o&&(s=`${a}/${o}/${e}`),t.gameUrl=s,t.gameIsRunning=!1,t.sendMessage({event:"unloadGame",gameSystem:o,gameUrl:s}),t.logo.style.display="block",setTimeout((()=>{t.sendMessage({event:"startGame",message:"Hello from Emulator",gameSystem:o,gameUrl:t.gameUrl}),t.gameIsRunning=!0}),200),this.logo.style.display="none"}handleRandomGame(e,t,a){const o=e[Math.floor(Math.random()*e.length)];t.logo.style.display="none",this.handleGameSelection(o,t,a)}async loadROM(e){try{const t=await fetch(e);this.romData=new Uint8Array(await t.arrayBuffer()),this.bp.log("ROM loaded successfully")}catch(e){this.bp.log("Error loading ROM:",e)}}startEmulator(){this.romData?(this.emulator.loadROM(this.romData),this.emulator.start(),this.bp.log("Emulator started")):this.bp.log("No ROM loaded")}stopEmulator(){this.emulator&&(this.emulator.stop(),this.bp.log("Emulator stopped"))}}let t="aHR0cDovL2tyYW1lcmljYS1pbmR1c3RyaWVzLmItY2RuLm5ldA==";t="aHR0cHM6Ly9rcmFtZXJpY2EtaW5kdXN0cmllcy5iLWNkbi5uZXQ=";const a=atob("aHR0cHM6Ly9rcmFtZXJpY2EtaW5kdXN0cmllcy5iLWNkbi5uZXQ=");export{e as default};
//# sourceMappingURL=emulator.js.map
