let t=class{constructor(t,a,e,s){this.bp=t,this.cardType=a,this.cardData=e,this.parent=s,this.htmlContent="",this.cssContent="",this.applyData=null}async load(){if(!this.cardType)return void console.error("Card type is not defined");const t=`/v5/apps/based/card/cards/${this.cardType}/${this.cardType}-card.html`,a=`/v5/apps/based/card/cards/${this.cardType}/${this.cardType}-card.css`,e=`/v5/apps/based/card/cards/${this.cardType}/${this.cardType}-card.js`;this.htmlContent=await this.bp.load(t),this.cssContent=await this.bp.load(a);const s=await this.bp.importModule(e,{},!1);s&&"function"==typeof s.default&&(this.applyData=s.default.bind(this)),this.htmlContent||(this.htmlContent=`<div class="card">${JSON.stringify(this.cardData)}</div>`),this.cssContent||(this.cssContent=".card { border: 1px solid black; padding: 1em; }"),this.applyData||(this.applyData=(t,a)=>{a.message&&delete a.message,t.querySelector(".card").textContent=JSON.stringify(a)})}render(t,a){const e=document.createElement("style");e.textContent=this.cssContent,t.appendChild(e);const s=document.createElement("div");if(s.style.position="relative",s.innerHTML=this.htmlContent,t.appendChild(s),this.applyData&&"function"==typeof this.applyData)try{return this.applyData(s,this.cardData,this,this.parent)}catch(t){console.error("Error in applyData function:",t)}}addReactionsUI(t){const a=document.createElement("div");a.classList.add("reaction-container"),["👍","❤️","😂","😮","😢","🔥"].forEach((t=>{const e=document.createElement("button");e.textContent=t,e.classList.add("reaction-button"),e.addEventListener("click",(()=>this.handleReaction(t))),a.appendChild(e)})),t.appendChild(a)}handleReaction(t){const a={uuid:this.cardData.message.uuid,reaction:t,user:this.bp.me};this.renderReaction(a)}renderReaction(t){console.log("Reaction added:",t);const a=$(`.chatMessage[data-uuid='${t.uuid}']`);if(console.log("`found message:",a),!a)return;let e=a.find(".cardContainer");console.log("found card:",e);let s=e.find(".reaction-summary");s.length||(console.log("did not find reaction summary"),s=document.createElement("div"),s.classList.add("reaction-summary"),console.log("created reaction summary:",s),e.append(s)),console.log("appending reaction",t.reaction),s.textContent+=` ${t.reaction}`}};class a{constructor(t){this.bp=t,this.cards=[]}async loadCard(a,e,s){const n=new t(this.bp,a,e,s);return await n.load(),this.cards.push(n),n}renderAll(t){this.cards.forEach((a=>{"function"==typeof a.render&&a.render(t)}))}}class e{constructor(t){this.bp=t}async init(){this.cardManager=new a(this.bp)}}export{e as default};
//# sourceMappingURL=card.js.map
