{"version":3,"file":"error-tracker.js","sources":["../../../apps/based/error-tracker/error-tracker.js"],"sourcesContent":["/* error-tracker.js - Marak Squires 2025 - BuddyPond */\nexport default class ErrorTracker {\n    constructor(bp, config = {}) {\n        this.bp = bp;\n        if (!config.apiEndpoint) throw new Error(\"API endpoint is required\");\n        this.apiEndpoint = config.apiEndpoint;\n        // Flag to disable reporting after a stack overflow\n        this.isReportingDisabled = false;\n        this.init();\n    }\n\n    init() {\n        // Attach reportError to bp\n        this.bp.reportError = (error) => {\n            if (this.isReportingDisabled) return;\n            this.sendError({\n                type: \"error\",\n                message: error.message,\n                stack: error.stack || \"No stack trace\",\n            });\n        };\n\n        // Global error handler\n        window.onerror = (message, source, lineno, colno, error) => {\n            // Skip if reporting is disabled\n            if (this.isReportingDisabled) return;\n            // Skip errors marked as originating from ErrorTracker\n            if (error?.isFromErrorTracker) return;\n\n            // Check for stack overflow\n            const isStackOverflow = message.includes(\"Maximum call stack size exceeded\") ||\n                                   error?.message.includes(\"Maximum call stack size exceeded\");\n\n            this.sendError({\n                type: \"error\",\n                message,\n                source,\n                lineno,\n                colno,\n                stack: error?.stack || \"No stack trace\",\n            });\n\n            // Disable reporting after a stack overflow\n            if (isStackOverflow) {\n                console.warn(\"Stack overflow detected; disabling error reporting.\");\n                this.isReportingDisabled = true;\n            }\n        };\n\n        // Unhandled promise rejection handler\n        window.onunhandledrejection = (event) => {\n            // Skip if reporting is disabled\n            if (this.isReportingDisabled) return;\n            // Skip errors marked as originating from ErrorTracker\n            if (event.reason?.isFromErrorTracker) return;\n\n            // Check for stack overflow\n            const isStackOverflow = event.reason?.message.includes(\"Maximum call stack size exceeded\");\n\n            this.sendError({\n                type: \"promise_rejection\",\n                message: event.reason?.message || \"Unhandled Promise Rejection\",\n                stack: event.reason?.stack || \"No stack trace\",\n            });\n\n            // Disable reporting after a stack overflow\n            if (isStackOverflow) {\n                console.warn(\"Stack overflow detected; disabling error reporting.\");\n                this.isReportingDisabled = true;\n            }\n        };\n    }\n\n    async sendError(errorData) {\n        // Skip if reporting is disabled\n        if (this.isReportingDisabled) return;\n\n        console.log('sendError', errorData);\n        try {\n            await fetch(this.apiEndpoint, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(errorData),\n            });\n        } catch (err) {\n            // Mark the error as originating from ErrorTracker\n            err.isFromErrorTracker = true;\n            console.warn(\"Failed to send error:\", err);\n            // Do not rethrow or report this error\n        }\n    }\n}"],"names":["ErrorTracker","constructor","bp","config","this","apiEndpoint","Error","isReportingDisabled","init","reportError","error","sendError","type","message","stack","window","onerror","source","lineno","colno","isFromErrorTracker","isStackOverflow","includes","console","warn","onunhandledrejection","event","reason","errorData","log","fetch","method","headers","body","JSON","stringify","err"],"mappings":"AACe,MAAMA,EACjB,WAAAC,CAAYC,EAAIC,EAAS,IAErB,GADAC,KAAKF,GAAKA,GACLC,EAAOE,YAAa,MAAM,IAAIC,MAAM,4BACzCF,KAAKC,YAAcF,EAAOE,YAE1BD,KAAKG,qBAAsB,EAC3BH,KAAKI,MACb,CAEI,IAAAA,GAEIJ,KAAKF,GAAGO,YAAeC,IACfN,KAAKG,qBACTH,KAAKO,UAAU,CACXC,KAAM,QACNC,QAASH,EAAMG,QACfC,MAAOJ,EAAMI,OAAS,oBAK9BC,OAAOC,QAAU,CAACH,EAASI,EAAQC,EAAQC,EAAOT,KAE9C,GAAIN,KAAKG,oBAAqB,OAE9B,GAAIG,GAAOU,mBAAoB,OAG/B,MAAMC,EAAkBR,EAAQS,SAAS,qCAClBZ,GAAOG,QAAQS,SAAS,oCAE/ClB,KAAKO,UAAU,CACXC,KAAM,QACNC,UACAI,SACAC,SACAC,QACAL,MAAOJ,GAAOI,OAAS,mBAIvBO,IACAE,QAAQC,KAAK,uDACbpB,KAAKG,qBAAsB,IAKnCQ,OAAOU,qBAAwBC,IAE3B,GAAItB,KAAKG,oBAAqB,OAE9B,GAAImB,EAAMC,QAAQP,mBAAoB,OAGtC,MAAMC,EAAkBK,EAAMC,QAAQd,QAAQS,SAAS,oCAEvDlB,KAAKO,UAAU,CACXC,KAAM,oBACNC,QAASa,EAAMC,QAAQd,SAAW,8BAClCC,MAAOY,EAAMC,QAAQb,OAAS,mBAI9BO,IACAE,QAAQC,KAAK,uDACbpB,KAAKG,qBAAsB,GAG3C,CAEI,eAAMI,CAAUiB,GAEZ,IAAIxB,KAAKG,oBAAT,CAEAgB,QAAQM,IAAI,YAAaD,GACzB,UACUE,MAAM1B,KAAKC,YAAa,CAC1B0B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUP,IAE5B,CAAC,MAAOQ,GAELA,EAAIhB,oBAAqB,EACzBG,QAAQC,KAAK,wBAAyBY,EAElD,CAdsC,CAetC"}