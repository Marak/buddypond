{"version":3,"file":"screen-recorder.js","sources":["../../../apps/based/screen-recorder/screen-recorder.js"],"sourcesContent":["export default class ScreenRecorder {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n        this.recorder = null;\n        this.recordedChunks = [];\n        this.stream = null;\n        this.videoBlob = null;\n        this.videoURL = null;\n        this.timerInterval = null;\n        this.secondsElapsed = 0;\n    }\n\n    async init() {\n        this.html = await this.bp.load('/v5/apps/based/screen-recorder/screen-recorder.html');\n        await this.bp.load('/v5/apps/based/screen-recorder/screen-recorder.css');\n        return 'loaded ScreenRecorder';\n    }\n\n    async open() {\n        this.win = this.bp.apps.ui.windowManager.createWindow({\n            id: 'screen-recorder',\n            title: 'Screen Recorder',\n            icon: 'desktop/assets/images/icons/icon_console_64.png',\n            x: 100,\n            y: 75,\n            width: 600,\n            height: 550,\n            minWidth: 400,\n            minHeight: 300,\n            parent: $('#desktop')[0],\n            content: this.html,\n            resizable: true,\n            minimizable: true,\n            maximizable: true,\n            closable: true,\n            focusable: true,\n            maximized: false,\n            minimized: false,\n            onclose: () => this.cleanup()\n        });\n\n        this.bindUI();\n        return this.win;\n    }\n\n    bindUI() {\n        // TODO: use jQuery to bind events\n        // use this jQuery pattern $('#screen-recorder-start', this.win.content) to bind events\n        $('#screen-recorder-start', this.win.content).on('click', () => this.startRecording());\n        document.getElementById('screen-recorder-preview').onclick = () => this.startPreview();\n        //document.getElementById('screen-recorder-start').onclick = () => this.startRecording();\n        document.getElementById('screen-recorder-stop').onclick = () => this.stopRecording();\n        document.getElementById('screen-recorder-download').onclick = () => this.downloadRecording();\n        document.getElementById('screen-recorder-screenshot').onclick = () => this.takeScreenshot();\n        document.getElementById('screen-recorder-preview-stop').onclick = () => this.stopPreview();\n    }\n\n    async startPreview() {\n        try {\n            if (!this.stream) {\n                this.stream = await navigator.mediaDevices.getDisplayMedia({ video: true, audio: true });\n\n                const liveVideo = document.getElementById('screen-recorder-live-video');\n                liveVideo.srcObject = this.stream;\n                liveVideo.play();\n\n                this.togglePreviewUI(true);\n            }\n        } catch (err) {\n            console.error('Error starting screen preview:', err);\n        }\n    }\n\n    stopPreview() {\n        const liveVideo = document.getElementById('screen-recorder-live-video');\n        liveVideo.pause();\n        liveVideo.srcObject = null;\n\n        if (this.stream) {\n            this.stream.getTracks().forEach(track => track.stop());\n            this.stream = null;\n        }\n\n        this.togglePreviewUI(false);\n    }\n\n    startRecording() {\n        if (!this.stream) {\n            console.warn('Stream not initialized. Please start preview first.');\n            return;\n        }\n\n        this.recordedChunks = [];\n        this.videoBlob = null;\n        this.videoURL = null;\n\n        this.recorder = new MediaRecorder(this.stream);\n        this.recorder.ondataavailable = (e) => {\n            if (e.data.size > 0) this.recordedChunks.push(e.data);\n        };\n\n        this.recorder.onstop = () => {\n            this.generatePreview();\n            this.stopTimer();\n        };\n\n        this.recorder.start();\n        this.startTimer();\n        this.toggleRecordingUI(true);\n\n        console.log('Recording started');\n    }\n\n    stopRecording() {\n        if (this.recorder && this.recorder.state !== 'inactive') {\n            this.recorder.stop();\n            console.log('Recording stopped');\n            this.toggleRecordingUI(false);\n        }\n    }\n\n    generatePreview() {\n        this.videoBlob = new Blob(this.recordedChunks, { type: 'video/webm' });\n        this.videoURL = URL.createObjectURL(this.videoBlob);\n\n        const container = document.getElementById('screen-recorder-preview-video');\n        container.innerHTML = '';\n\n        const video = document.createElement('video');\n        video.src = this.videoURL;\n        video.controls = true;\n        video.style.width = '100%';\n        container.appendChild(video);\n    }\n\n    togglePreviewUI(isPreviewing) {\n        document.getElementById('screen-recorder-preview').disabled = isPreviewing;\n        document.getElementById('screen-recorder-preview-stop').disabled = !isPreviewing;\n        document.getElementById('screen-recorder-screenshot').disabled = !isPreviewing;\n    }\n\n\n    downloadRecording() {\n        if (!this.videoBlob) return;\n\n        const a = document.createElement('a');\n        a.href = this.videoURL;\n        a.download = `buddypond-screen-${Date.now()}.webm`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    async takeScreenshot() {\n        try {\n            // Prompt user for screen capture if stream doesn't exist\n            if (!this.stream) {\n                this.stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n            }\n\n            const videoTrack = this.stream.getVideoTracks()[0];\n            const imageCapture = new ImageCapture(videoTrack);\n\n            const bitmap = await imageCapture.grabFrame();\n            const canvas = document.createElement('canvas');\n            canvas.width = bitmap.width;\n            canvas.height = bitmap.height;\n            canvas.getContext('2d').drawImage(bitmap, 0, 0);\n\n            canvas.toBlob(blob => {\n                const url = URL.createObjectURL(blob);\n                const img = document.createElement('img');\n                img.src = url;\n                img.alt = 'Screenshot';\n                img.className = 'screen-recorder-screenshot';\n\n                const container = document.getElementById('screen-recorder-preview-screenshots');\n                container.appendChild(img);\n            }, 'image/png');\n        } catch (err) {\n            console.error('Screenshot error:', err);\n        }\n    }\n\n\n    startTimer() {\n        alert('Starting timer');\n        const indicator = document.getElementById('screen-recorder-indicator');\n        const timer = document.getElementById('screen-recorder-timer');\n        this.secondsElapsed = 0;\n\n        this.timerInterval = setInterval(() => {\n            this.secondsElapsed++;\n            const min = String(Math.floor(this.secondsElapsed / 60)).padStart(2, '0');\n            const sec = String(this.secondsElapsed % 60).padStart(2, '0');\n            timer.textContent = `${min}:${sec}`;\n        }, 1000);\n\n        indicator.classList.add('recording');\n    }\n\n    stopTimer() {\n        clearInterval(this.timerInterval);\n        document.getElementById('screen-recorder-indicator').classList.remove('recording');\n        document.getElementById('screen-recorder-timer').textContent = '00:00';\n    }\n\n    toggleRecordingUI(isRecording) {\n        //document.getElementById('screen-recorder-start').disabled = isRecording;\n        //document.getElementById('screen-recorder-stop').disabled = !isRecording;\n        //document.getElementById('screen-recorder-screenshot').disabled = !isRecording;\n    }\n\n    cleanup() {\n        this.stopTimer();\n        if (this.stream) {\n            this.stream.getTracks().forEach(track => track.stop());\n        }\n    }\n}\n"],"names":["ScreenRecorder","constructor","bp","options","this","recorder","recordedChunks","stream","videoBlob","videoURL","timerInterval","secondsElapsed","init","html","load","open","win","apps","ui","windowManager","createWindow","id","title","icon","x","y","width","height","minWidth","minHeight","parent","$","content","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onclose","cleanup","bindUI","on","startRecording","document","getElementById","onclick","startPreview","stopRecording","downloadRecording","takeScreenshot","stopPreview","navigator","mediaDevices","getDisplayMedia","video","audio","liveVideo","srcObject","play","togglePreviewUI","err","console","error","pause","getTracks","forEach","track","stop","MediaRecorder","ondataavailable","e","data","size","push","onstop","generatePreview","stopTimer","start","startTimer","toggleRecordingUI","log","warn","state","Blob","type","URL","createObjectURL","container","innerHTML","createElement","src","controls","style","appendChild","isPreviewing","disabled","a","href","download","Date","now","body","click","removeChild","videoTrack","getVideoTracks","imageCapture","ImageCapture","bitmap","grabFrame","canvas","getContext","drawImage","toBlob","blob","url","img","alt","className","alert","indicator","timer","setInterval","min","String","Math","floor","padStart","sec","textContent","classList","add","clearInterval","remove","isRecording"],"mappings":"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"}