class t{constructor(t,n={}){return this.bp=t,n.window=n.window||{},this.options=n,this}async init(){return await this.bp.load("/v5/apps/based/pond/pond.css"),this.html=await this.bp.load("/v5/apps/based/pond/pond.html"),"loaded pond"}updateHotPonds(t){let n=t;const o=$(".joinPondTable");o.empty(),n.sort(((t,n)=>n.connection_count-t.connection_count));for(let t=0;t<n.length;t++){let e=n[t],i=o.find(`tr[data-pond="${e.value}"]`);if(i.length>0)i.find("td").eq(1).text(e.connection_count);else{let t=e.pond_id.replace("pond/","");o.append(`<tr data-pond="${e.pond_id}"><td>#${t}</td><td>${e.connection_count}</td><td><button class="joinPondButton open-app" data-app="buddylist" data-type="pond" data-context="${t}">Join</button></td></tr>`)}}$(".pond-list",this.pondWindow.content).html("")}open(){if(!this.pondWindow){function n(){let t=$("#customPondName").val();t&&this.bp.apps.buddylist.openChatWindow({pondname:t,type:"pond",context:t})}this.pondWindow=this.bp.apps.ui.windowManager.createWindow({id:"pond",title:"Ponds",app:"pond",icon:"desktop/assets/images/icons/icon_pond_64.png",x:100,y:100,width:400,height:470,minWidth:200,minHeight:200,parent:$("#desktop")[0],content:this.html,resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,preventOverlap:this.options.window.preventOverlap,onClose:()=>{console.log("pond window closed"),this.pondWindow=null,clearInterval(this.updatePondsTimer)}}),$(".loggedIn",this.pondWindow.content).show(),$(".loggedOut",this.pondWindow.content).hide(),$(".joinPondForm").on("submit",(t=>(t.preventDefault(),n.call(this),!1))),$(".joinPond").on("click",(t=>(t.preventDefault(),n.call(this),!1)))}function t(){let t=buddypond.messagesApiEndpoint+"/hotponds";fetch(t,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.bp.qtokenid}`,"x-me":this.bp.me}}).then((t=>{if(t.ok)return t.json();throw new Error("Failed to fetch hot ponds")})).then((t=>{this.updateHotPonds(t)})).catch((t=>{console.error("Error fetching hot ponds:",t)}))}return t.call(this),this.updatePondsTimer=setInterval((()=>{t.call(this)}),5e3),this.pondWindow}}export{t as default};
//# sourceMappingURL=pond.js.map
