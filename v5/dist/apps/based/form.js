let t=class{constructor(t,s,o){this.bp=t,this.formType=s,this.formData=o,this.htmlContent="",this.cssContent="",this.applyData=null}async load(){const t=`/v5/apps/based/form/forms/${this.formType}/${this.formType}-form.html`,s=`/v5/apps/based/form/forms/${this.formType}/${this.formType}-form.css`,o=`/v5/apps/based/form/forms/${this.formType}/${this.formType}-form.js`;this.htmlContent=await this.bp.load(t),this.cssContent=await this.bp.load(s);const a=await this.bp.importModule(o,{},!1);this.applyData=a.default.bind(this),this.htmlContent||(this.htmlContent=`<div class="form">${JSON.stringify(this.formData)}</div>`),this.cssContent||(this.cssContent=".form { border: 1px solid black; padding: 1em; }"),this.applyData||(this.applyData=(t,s)=>{t.querySelector(".form").textContent=JSON.stringify(s)})}render(t){const s=document.createElement("style");s.textContent=this.cssContent,t.appendChild(s);const o=document.createElement("div");o.innerHTML=this.htmlContent,t.appendChild(o),this.applyData&&"function"==typeof this.applyData&&this.applyData(o,this.formData)}};class s{constructor(t){this.bp=t,this.forms=[]}async loadForm(s,o){const a=new t(this.bp,s,o);return await a.load(),this.forms.push(a),a}renderAll(t){this.forms.forEach((s=>s.render(t)))}}class o{constructor(t){this.bp=t}async init(){this.formManager=new s(this.bp)}}export{o as default};
//# sourceMappingURL=form.js.map
