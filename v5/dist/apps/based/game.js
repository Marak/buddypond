async function getWorkerClass(){if("undefined"==typeof window){const{Worker:t}=await import("worker_threads");return t}return window.Worker}class GameLoop{constructor(t,e){this.snapshots=[],this.game=t.game,this.bp=e,this.started=!1,this.lastRenderedSnapshotId=null,this.hzMS=t.hzMS||16.666,this.accumulator=0,this.lastGameTick=Date.now(),this.lastDelta=0,this.lastFPS=0,this.fpsMeasurements=[],this.fpsReportFrequency=t.fpsReportFrequency||60,this.frameCount=0,this.tickCount=0,this.config=t,this.init()}async init(){const t=await getWorkerClass();this.worker=new t(this.config.gameWorker||"gameWorker.js",{type:"module"}),console.log("fuuudge",this.worker),this.setupWorkerListeners()}start(){this.lastGameTick=Date.now(),this.loop()}stop(){this.game.onlineGameLoopRunning=!1}setupWorkerListeners(){this.worker.onmessage=t=>{const{type:e,payload:i}=t.data;if("updateState"===e)this.snapshots.push(i),this.tickCount++,this.bp.emit("game::loop",this.tickCount,i,{fps:this.lastFPS,frameCount:this.frameCount,lastDelta:this.lastDelta});else console.error("Unhandled message type from worker:",e)}}loop(){if(!this.game.onlineGameLoopRunning)return;let t=Date.now(),e=(t-this.lastGameTick)/1e3;for(this.lastDelta=e,this.calculateFPS(e),this.lastGameTick=t,this.worker.postMessage({type:"gameTick",payload:{deltaTime:e}});this.snapshots.length>0;)this.snapshots.shift();this.renderGraphics(),requestAnimationFrame(this.loop.bind(this))}processWorkerUpdates(t){}renderGraphics(){this.accumulator,this.hzMS,this.game.graphics.forEach((t=>{}))}calculateFPS(t){if(t>0){let e=1/t;if(this.fpsMeasurements.push(e),this.fpsMeasurements.length>this.fpsReportFrequency&&this.fpsMeasurements.shift(),this.frameCount++,this.frameCount%this.fpsReportFrequency===0){let t=this.fpsMeasurements.reduce(((t,e)=>t+e),0)/this.fpsMeasurements.length;this.lastFPS=t,this.fpsMeasurements=[]}}}}function ensureColorInt(t){if(!t)return t;const e={red:"#FF0000",green:"#00FF00",blue:"#0000FF",black:"#000000",white:"#FFFFFF",yellow:"#FFFF00",purple:"#800080",orange:"#FFA500",pink:"#FFC0CB",indigo:"#4B0082",violet:"#EE82EE"};return"number"==typeof t?t:"string"==typeof t&&t.startsWith("#")?parseInt(t.replace("#",""),16):"string"==typeof t&&e[t.toLowerCase()]?parseInt(e[t.toLowerCase()].replace("#",""),16):(console.error("Unrecognized color format:",t),parseInt("000000",16))}function layoutEntity(t,e){let i=this.game.findEntity(t);if(!i)throw new Error("Container not found: "+t);let n=i.position||{x:0,y:0,z:0},o="none",s="center";if(i.style&&i.style.layout&&(o=i.style.layout),i.style&&i.style.origin&&(s=i.style.origin),i.meta&&i.meta.layout&&(o=i.meta.layout),i.items||(i.items=[]),i.items.push(e),"flex"===o){const t=i.meta.flex||i.style.flex,e=i.items.map((t=>this.game.getEntity(t)));applyFlexLayout.call(this,i,e,t)}else if("grid"===o){const t=i.meta.grid||i.style.grid,e=i.items.map((t=>this.game.getEntity(t)));applyGridLayout.call(this,i,e,t)}if("none"===o){let t=this.game.getEntity(e);if(!t)return void console.error("Entity not found: "+e);let o=t.position.x,a=t.position.y;"top-left"===s?(o=-t.size.width/2,a=-t.size.height/2):(o-=t.size.width/2,a-=t.size.height/2);let r=i.position,p={x:r.x+-t.size.width/2,y:r.y+-t.size.height/2,z:n.z};p.x=n.x+o,p.y=n.y+a,this.game.updateEntity({id:e,position:p})}if("grid"===o){let t=i.meta.grid.columns||1,e=i.meta.grid.rows||1;if(i.style&&i.style.grid&&(t=i.style.grid.columns||t,e=i.style.grid.rows||e),"number"!=typeof t||"number"!=typeof e)throw console.log("containerEnt.layout",i.layout),new Error("Grid layout requires cols and rows to be numbers");let o=i.items||[];o=o.map((t=>this.game.getEntity(t)));let s=i.size,a=s.width/t,r=s.height/e;o.forEach(((e,i)=>{let o=Math.floor(i/t),p=i%t;if(!e)return void console.log("warning: item not found in container",i,e);let l=n.x-s.width/2+0,h=n.y-s.height/2+0;n.z;let d={x:l+p*a+a/2,y:h+o*r+r/2,z:e.position.z};this.game.updateEntity({id:e.id,position:d},{skipAfterUpdateEntity:!0})}))}if("stack"===o){let t=0,o=5,s=this.game.getEntity(e);if(!s)return void console.error("Entity not found: "+e);o=s.size.height+5;let a=i.items.length-1,r={x:n.x+a*t,y:n.y+a*o,z:n.z};this.game.updateEntity({id:e,position:r}),console.log(`Entity ${e} stacked at index ${a} with position (${r.x}, ${r.y}, ${r.z}) relative to container`)}if("function"==typeof o)throw console.log("adding item to container using custom layout algorithm"),new Error("Custom layout algorithm functions are yet implemented!")}function applyFlexLayout(t,e,i){const{flexDirection:n="row",justifyContent:o="flex-start",alignItems:s="center"}=i,a=n.includes("row"),r=a?"width":"height",p=a?"height":"width",l=a?"x":"y",h=a?"y":"x";let d=0;for(const i of e){switch(i.position[l]=d,d+=i.size[r],s){case"flex-start":i.position[h]=0;break;case"flex-end":i.position[h]=t.size[p]-i.size[p];break;default:i.position[h]=(t.size[p]-i.size[p])/2}this.game.updateEntity({id:i.id,position:i.position})}}function applyGridLayout(t,e,i){const{gridTemplateColumns:n="1fr",gridTemplateRows:o="1fr"}=i,s=n.split(" ").length,a=Math.ceil(e.length/s),r=t.size.width/s,p=t.size.height/a;e.forEach(((t,e)=>{const i=e%s,n=Math.floor(e/s);t.position.x=i*r,t.position.y=n*p,this.game.updateEntity({id:t.id,position:t.position})}))}function createEntity(t={},e=!1){let i;if(!e){i=this._generateId();let e={id:i,name:null,kind:null,body:!0,shape:"triangle",color:null,position:{x:0,y:0,z:0},startingPosition:null,velocity:{x:0,y:0,z:0},rotation:0,mass:100,density:100,health:1/0,score:0,height:16,width:16,depth:16,size:{width:100,height:100,depth:16},lifetime:null,maxSpeed:100,isStatic:!1,isSensor:!1,restitution:0,container:null,items:null,sutra:null,scene:[],meta:null,collectable:!1,hasInventory:!0,owner:0,source:null,inputs:null,value:null,destroyed:!1,type:"NONE",friction:.1,frictionAir:.01,frictionStatic:.5,lockedProperties:null,actionRateLimiter:null,timers:null,yCraft:null,text:null,style:null,texture:null,collisionStart:!0,collisionActive:!1,collisionEnd:!1,pointerdown:!1,pointerup:!1,pointermove:!1,pointerover:!1,pointerout:!1,pointerenter:!1,pointerleave:!1,onDrop:null,afterItemCollected:null,afterRemoveEntity:null,afterCreateEntity:null,afterUpdate:null,update:null,exit:null,ctick:this.bp.tick,utick:this.bp.tick};if("object"==typeof t.size?(t.width=t.size.width,t.height=t.size.height,t.depth=t.size.depth):t.size={width:t.width,height:t.height,depth:t.depth},(t={...e,...t}).position&&("number"!=typeof t.position.x||isNaN(t.position.x)||"number"!=typeof t.position.y||isNaN(t.position.y)))throw console.log("Entity.createEntity could not create with data",t),new Error("Invalid position for entity")}i=t.id,t.startingPosition||(t.startingPosition=t.position);const{name:n,type:o,kind:s,position:a,rotation:r,startingPosition:p,body:l,mass:h,density:d,velocity:m,isSensor:c,isStatic:u,lockedProperties:y,width:g,height:f,depth:b,size:E,radius:C,shape:v,color:w,maxSpeed:k,health:x,score:z,items:S,container:A,sutra:F,scene:R,meta:P,collectable:D,hasInventory:L,owner:I,source:G,inputs:N,value:M,lifetime:B,yCraft:U,text:W,style:T,texture:_,collisionActive:$,collisionStart:j,collisionEnd:O,pointerdown:q,pointerup:H,pointermove:Y,pointerenter:V,pointerleave:K,pointerover:J,pointerout:Q,onDrop:X,afterRemoveEntity:Z,afterCreateEntity:tt,afterUpdateEntity:et,afterItemCollected:it,update:nt,exit:ot,ctick:st,utick:at}=t;let rt,{x:pt,y:lt}=a,ht=ensureColorInt(w);this.bp.addComponent(i,"type",o||"PLAYER"),this.bp.addComponent(i,"name",n||null),this.bp.addComponent(i,"kind",s),this.bp.addComponent(i,"position",a),this.bp.addComponent(i,"startingPosition",p),this.bp.addComponent(i,"velocity",m),this.bp.addComponent(i,"rotation",r),this.bp.addComponent(i,"mass",h),this.bp.addComponent(i,"density",d),this.bp.addComponent(i,"health",x),this.bp.addComponent(i,"score",z),this.bp.addComponent(i,"width",g),this.bp.addComponent(i,"height",f),this.bp.addComponent(i,"depth",b),this.bp.addComponent(i,"size",E),this.bp.addComponent(i,"radius",C),this.bp.addComponent(i,"shape",v),this.bp.addComponent(i,"color",ht),this.bp.addComponent(i,"maxSpeed",k),this.bp.addComponent(i,"owner",I),this.bp.addComponent(G,"source",G+"_"+i),this.bp.addComponent(i,"items",S),this.bp.addComponent(i,"scene",R),this.bp.addComponent(i,"meta",P),this.bp.addComponent(i,"collectable",D),this.bp.addComponent(i,"hasInventory",L),this.bp.addComponent(i,"value",M),this.bp.addComponent(i,"inputs",N),this.bp.addComponent(i,"lifetime",B),this.bp.addComponent(i,"destroyed",!1),this.bp.addComponent(i,"creationTime",Date.now()),this.bp.addComponent(i,"isSensor",c),this.bp.addComponent(i,"isStatic",u),this.bp.addComponent(i,"lockedProperties",y),this.bp.addComponent(i,"actionRateLimiter",{}),this.bp.addComponent(i,"yCraft",U),this.bp.addComponent(i,"text",W),this.bp.addComponent(i,"style",T),this.bp.addComponent(i,"texture",_),this.bp.addComponent(i,"afterItemCollected",it),this.bp.addComponent(i,"afterRemoveEntity",Z),this.bp.addComponent(i,"afterCreateEntity",Z),this.bp.addComponent(i,"afterUpdateEntity",et),this.bp.addComponent(i,"collisionActive",$),this.bp.addComponent(i,"collisionStart",j),this.bp.addComponent(i,"collisionEnd",O),this.bp.addComponent(i,"pointerdown",q),this.bp.addComponent(i,"pointerup",H),this.bp.addComponent(i,"pointermove",Y),this.bp.addComponent(i,"pointerenter",V),this.bp.addComponent(i,"pointerleave",K),this.bp.addComponent(i,"pointerover",J),this.bp.addComponent(i,"pointerout",Q),this.bp.addComponent(i,"onDrop",X),this.bp.addComponent(i,"update",nt),this.bp.addComponent(i,"exit",ot),this.bp.addComponent(i,"ctick",st),this.bp.addComponent(i,"utick",at),"object"==typeof F&&null!==F&&"function"==typeof F.rules?("object"!=typeof F.config&&(F.config={}),rt=F.rules(this.bp,i,F.config)):rt=F,this.bp.addComponent(i,"sutra",rt),l&&(t.restitution,t.friction,t.frictionAir,t.frictionStatic),this.bp.entities.set(i,{id:i});let dt,mt=this.bp.getEntity(i);if(void 0===mt.pendingRender&&(mt.pendingRender={}),this.bp.entities.set(i,mt),A&&this.layoutEntity(A,i),this.bp.data.ents=this.bp.data.ents||{},this.bp.data.ents._=this.bp.data.ents._||{},this.bp.data.ents._[i]=mt,this.bp.data.ents[mt.type]=this.bp.data.ents[mt.type]||[],this.bp.data.ents[mt.type].push(mt),"PLAYER"===mt.type&&this.bp.data.ents.PLAYER){Object.keys(this.bp.data.ents.PLAYER).length<1&&this.bp.setPlayerId(i)}return"function"==typeof t.afterCreateEntity&&(dt=t.afterCreateEntity),dt&&dt(t),mt}function getEntity(t){if("string"==typeof t&&(t=parseInt(t)),!this.bp.entities.has(t))return null;const e={};for(const i in this.bp.components){let n=this.bp.getComponent(t,i);null!=n&&(e[i]=n)}return 0===Object.keys(e).length?null:(e.id=t,e)}function inflateEntity(t){let e=this.game;if(!0===t.destroyed)return e.removeGraphic(t.id),void e.removeEntity(t.id);if(!e.removedEntities.has(t.id)){if(null!=t.source){if(e.components.source.get(t.source+"-"+t.id))return t.id=t.source.split("_")[1],updateOrCreate(e,t);{delete t.id;let i=t.type;if(i){i=i.toLowerCase(),i=i.charAt(0).toUpperCase()+i.slice(1);try{let e=this.game.make();e[i](t);let n=e.build();for(let e in n)t[e]=n[e];for(let e in t)void 0!==t[e]&&null!==t[e]||delete t[e]}catch(i){defaultBuild(e,t)}}else defaultBuild(e,t);return updateOrCreate(e,t)}}return updateOrCreate(e,t)}console.log("Skipping update for locally removed entity:",t.id)}function defaultBuild(game,entityData){let defaultConfig=game.make().build();for(let t in defaultConfig)void 0!==entityData[t]&&null!==entityData[t]||(entityData[t]=defaultConfig[t]);let supportedSerializedEvents=["collisionStart"];for(let p in entityData){if(supportedSerializedEvents.includes(p))try{entityData[p]=eval("("+entityData[p]+")")}catch(t){console.log("Failed to inflate serialized function",entityData.type,entityData[p],entityData,t)}void 0!==entityData[p]&&null!==entityData[p]||delete entityData[p]}}function updateOrCreate(t,e){return t.entities.get(e.id)?t.updateEntity(e):t.createEntity(e)}function removeEntity(t,e=!0){let i,n=this.game.entities.get(t);if(n&&("function"==typeof n.afterRemoveEntity&&(i=n.afterRemoveEntity),!1!==this.game.lifecycle.triggerHook("before.removeEntity",n))){if(n&&this.game.systems.graphics&&n.graphics&&this.game.systems.graphics.removeGraphic(t),n){if(this.game.components.destroyed.set(t,!0),this.game.components.timers.get(t)){let e=this.game.components.timers.get(t);for(let t in e.timers)e.removeTimer(t)}let i=this.game.getEntity(t);this.game.entities.set(t,i),i&&e&&(this.game.systems.rbush&&this.game.systems.rbush.removeEntity(i),delete this.game.deferredEntities[t])}i&&i(n),this.game.lifecycle.triggerHook("after.removeEntity",n)}}function updateEntity(t,e,i={}){if(e="string"==typeof t||"number"==typeof t?{id:t,...e}:t,null==(e=this.game.lifecycle.triggerHook("before.updateEntity",e)))return console.warn("updateEntity was not provided a valid entityData",e),void console.warn("This is most likely the result of passing invalid data to updateEntity()");let n=e.id;if(void 0===n&&e.name){let t=this.game.getEntityByName(e.name);t&&(n=t.id)}if(void 0===n)return console.log("Error: updateEntity was not provided a valid entity.id or entity.name",e),void console.log("This is most likely the result of passing invalid data to updateEntity()");let o=this.game.getEntity(n);if(!o)return;if(e.destroyed)return void this.removeEntity(n);if(o.pendingRender={},this.game.graphics.forEach((function(t){o.pendingRender[t.id]=!0})),e.color){let t=ensureColorInt(e.color);this.game.components.color.set(n,t)}let s=!1;if(e.height&&(s=!0,this.game.components.height.set(n,e.height)),e.width&&(s=!0,this.game.components.width.set(n,e.width)),e.radius&&(s=!0),e.size&&(s=!0,this.game.components.size.set(n,e.size)),s&&this.game.physics.setBodySize(n,e),e.position&&(this.game.components.position.set(n,e.position),this.game.physics.setPosition(n,e.position)),e.velocity&&this.game.physics.setVelocity(n,e.velocity),e.health&&this.game.components.health.set(n,e.health),void 0!==e.thickness&&null!==e.thickness&&this.game.components.width.set(n,e.thickness),void 0!==e.update){let t=this.game.components.update.get(n);if(this.game.data.ents._[n])if(null===e.update)this.game.components.update.set(n,null);else{let i=this.game.make();i.onUpdate(e.update),t&&t.handlers&&t.handlers.length&&t.handlers.forEach((function(t){i.onUpdate(t)})),o.update=i.config.update,this.game.components.update.set(n,i.config.update)}}if(void 0!==e.value&&this.game.components.value.set(n,e.value),void 0!==e.meta){let t={},i=this.game.components.meta.get(n);t=i?{...i,...e.meta}:e.meta,this.game.components.meta.set(n,t)}if(void 0!==e.score&&null!==e.score&&this.game.components.score.set(n,e.score),void 0!==e.rotation&&(this.game.physics&&this.game.physics.setRotation?this.game.physics.setRotation(n,e.rotation):console.log("WARNING: physics.setRotation is not defined")),void 0!==e.text&&this.game.components.text.set(n,e.text),void 0!==e.items&&this.game.components.items.set(n,e.items),void 0!==e.sutra&&this.game.components.sutra.set(n,e.sutra),void 0!==e.items&&this.game.components.items.set(n,e.items),void 0!==e.style&&this.game.components.style.set(n,e.style),void 0!==e.texture){let t,i=this.game.components.texture.get(n);t="string"==typeof e.texture?e.texture:{...i,...e.texture},this.game.components.texture.set(n,t)}this.game.systems.rbush,this.game.components.utick.set(n,this.game.tick);let a=this.game.getEntity(n);if(!0!==i.skipAfterUpdateEntity){let t;"function"==typeof a.afterUpdateEntity&&(t=a.afterUpdateEntity),t&&t(a)}return a=this.game.lifecycle.triggerHook("after.updateEntity",a),a}function removeAllEntities(t){let e=!1,i=[];if("boolean"==typeof t&&(e=t),"object"==typeof t&&Array.isArray(t.excludeByName)&&(i=t.excludeByName),this.game.data.ents){for(let t in this.game.data.ents._){let n=this.game.data.ents._[t];(n.id!==this.game.currentPlayerId||e)&&(i.includes(n.name)||(n&&n.yCraft&&n.yCraft.part&&n.yCraft.part.unload&&n.yCraft.part.unload(),this.game.removeEntity(n.id)))}e&&(this.game.currentPlayerId=null)}}let Entity$1=class t{static id="entity";static removable=!1;constructor(){this.id=t.id,this.nextEntityId=1}init(t){this.bp=t,t.entities=new Map,this.bp.createEntity=createEntity.bind(this),this.bp.getEntity=getEntity.bind(this),this.bp.removeEntity=removeEntity.bind(this),this.bp.getEntityByName=this.getEntityByName.bind(this),this.bp.getEntities=this.allEntities.bind(this),this.bp.updateEntity=updateEntity.bind(this),this.bp.inflateEntity=inflateEntity.bind(this),this.bp.hasEntity=this.hasEntity.bind(this),this.bp.findEntity=this.findEntity.bind(this),this.bp.removeAllEntities=removeAllEntities.bind(this),this.removeAllEntities=removeAllEntities.bind(this),this.layoutEntity=layoutEntity.bind(this)}hasEntity(t){return this.bp.entities.has(t)}findEntity(t){"string"==typeof t&&(t={name:t});for(let[e,i]of this.bp.entities){let e=!0;for(let n in t)if(i[n]!==t[n]){e=!1;break}if(e)return i}}getEntityByName(t){for(let[e,i]of this.bp.entities)if(i.name===t)return i}_generateId(){return this.nextEntityId++}cleanupDestroyedEntities(){this.bp.lifecycle.triggerHook("before.cleanupRemovedEntities");const t=this.bp.components.destroyed.data;for(let e in t){"string"==typeof e&&(e=parseInt(e));const i=this.bp.components.type.get(e);if(t[e]){"function"==typeof this.bp.physics.removeBody&&this.bp.physics.removeBody(e);for(let t in this.bp.components)this.bp.components[t].remove(e);this.bp.entities.delete(e),delete this.bp.data.ents._[e],this.bp.data.ents[i]&&(this.bp.data.ents[i]=this.bp.data.ents[i].filter((t=>Number(t.id)!==Number(e))))}}this.bp.lifecycle.triggerHook("after.cleanupRemovedEntities")}allEntities(){return this.bp.entities}applyLockedProperties(t,e){if(e){console.log("Processing lockedProperties properties");for(let i in e){let n=this.bp.components[i].get(t);if(console.log("currentVal",n,"key",i,e),null!=n)if("object"!=typeof e[i]||Array.isArray(e[i]))!0===e[i]&&(console.log("Setting lockedProperties property",i,"to",n),this.bp.components.lockedProperties.set(t,{[i]:n}));else{console.log("lockedProperties[key]",e[i]);for(let o in e[i])if(console.log("subKey",o,e[i][o]),!0===e[i][o]){let e=n[o];null!=e?(console.log("Setting lockedProperties property",`${i}.${o}`,"to",e),this.bp.components.lockedProperties.set(t,{[i]:{[o]:e}})):console.log("Error: No such component or invalid value for",`${i}.${o}`)}}else console.log("Error: No such component or invalid value for",i)}}}};class Component{constructor(t,e){this.name=t,this.data={},this.game=e}set(t,e){const i=Array.isArray(t)?t[0]:t;if(this.game,Array.isArray(t)){let i=this.data;for(let e=0;e<t.length-1;e++)i[t[e]]||(i[t[e]]={}),i=i[t[e]];i[t[t.length-1]]=e}else this.data[t]=e;if(this.game&&this.game.entities&&this.game.entities.has(i)){this.game.entities.get(i)[this.name]=this.get(i)}}get(t){if(Array.isArray(t)){let e=this.data;for(let i=0;i<t.length;i++){if(void 0===e[t[i]])return null;e=e[t[i]]}return e}return void 0===this.data[t]||null===this.data[t]?null:this.data[t]}remove(t){if(Array.isArray(t)){let e=this.data;for(let i=0;i<t.length-1;i++){if(void 0===e[t[i]])return;e=e[t[i]]}delete e[t[t.length-1]]}else delete this.data[t]}isLocked(t,e){if(!t)return!1;if(Array.isArray(e)){let i=t;for(let t=0;t<e.length;t++){if(void 0===i[e[t]])return!1;i=i[e[t]]}return!0}return void 0!==t[e]}}class Entity{constructor(t,e={}){this.bp=t,this.bp.components={},this.bp.addComponent=this.addComponent.bind(this),this.bp.getComponent=this.getComponent.bind(this);let i=new Entity$1(t,e);return i.init(t),console.log("Entity created",i),this}async init(){return"loaded entity"}addComponent(t,e,i){this.bp.components[e]||(this.bp.components[e]=new Component(e,this.bp)),"actionRateLimiter"===e&&(i=new Map),null!=i&&this.bp.components[e].set(t,i)}getComponent(t,e){return this.bp.components.hasOwnProperty(e)?this.bp.components[e].get(t):null}}class Game{constructor(t,e={}){this.bp=t,new Entity(t).init();let i={onlineGameLoopRunning:!0,graphics:["css"],physics:{},systems:{},entities:{},ents:{},data:{},tick:0,removedEntities:new Set,changedEntities:new Set,currentPlayerId:null},n=null;t.apps&&t.apps.ui&&(n=t.apps.ui.parent),this.config={parent:n,game:i,hzMS:16.666,fpsReportFrequency:60,gameWorker:"/v5/apps/based/game/gameWorker.js",inflateSnapshot:function(){},graphicsRender:function(){}}}async init(){return this.gameLoop=new GameLoop(this.config,this.bp),await this.gameLoop.init(),this}start(){this.gameLoop.start()}stop(){this.gameLoop.stop()}}export{Game as default};
//# sourceMappingURL=game.js.map
