const e="0xF1648f8547De4d7BF563A4230bD3B058F367D15b",t={},n={AYYO:{symbol:"AYYO",address:"0xb2e05a88559425d5668686c81ab00dd35f1b7676",decimals:18},USDC:{symbol:"USDC",address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",decimals:6}};t.miniBip=["crouch","slogan","embody","tiger","pistol","raccoon","enhance","field","daring","air","spatial","ecology","verify","rural","donor","drastic","scare","romance","evoke","choice","enact","tortoise","hover","circle","gospel","mentor","absorb","viable","youth","isolate","cactus","employ","banana","brisk","gravity","portion","dilemma","scheme","deny","diamond","fringe","practice","anchor","walnut","south","glance","diary","noble","adapt","prosper","shrimp","exact","exchange","surge","butter","absent","afford","lounge","canyon","unfold","matrix","frequent","shove","rhythm"],t.verifyIdentity=async function(){if(void 0===window.ethereum)return alert("Please install MetaMask to use this feature"),!1;let e,n,o,a=new window.Web3(window.ethereum),r=!1;try{e=await window.ethereum.request({method:"eth_requestAccounts"})}catch(e){if(-32002===e.code)throw new Error("Metamask needs unlock");return console.error("User rejected MetaMask login:",e),!1}if(0===e.length)return alert("Please login to MetaMask to continue"),!1;n=e[0];const i="Signing this message will verify your Identity.\nThe following is a random nonce: "+function(e,t){let n=[],o=e.slice();for(let e=0;e<t;e++){let e=Math.floor(Math.random()*o.length);n.push(o.splice(e,1)[0])}return n}(t.miniBip,5).join("-")+"\nThank you for playing AYYO!";try{o=await a.eth.personal.sign(i,n),r=!0}catch(e){return console.error("user rejected signature request or signature request error",e),!1}return r&&(localStorage.setItem("ayyo-dev-auth","metamask"),localStorage.setItem("ayyo-dev-address",n)),r},t.mintAyyoColorKey=async function(n){if(void 0===window.ethereum)return alert("Please install MetaMask to use this feature"),!1;"number"!=typeof n&&(n=1);let o=await window.ethereum.request({method:"eth_accounts"});if(0===o.length){if(!await t.verifyIdentity())return!1}o=await window.ethereum.request({method:"eth_accounts"});let a=o[0],r=new window.Web3(window.ethereum),i=e;console.log("sending eth to contract",a,i,n);let s,c=r.utils.toWei((.5*n).toString(),"ether"),u=new r.eth.Contract([{constant:!1,inputs:[{name:"amount",type:"uint256"}],name:"mintAyyoColorKey",outputs:[{name:"",type:"uint256[]"}],payable:!0,stateMutability:"payable",type:"function"}],i),l=game.scene.getScene("HUD");try{let e=await u.methods.mintAyyoColorKey(n).send({from:a,value:c});console.log("rrrr",e),console.log("mintAyyoColorKey success",s),l.mintPanel.mintSuccess()}catch(e){return console.error("mintAyyoColorKey error",e),l.mintPanel.mintFailed(),!1}return s},window.mint=async function(e){if(void 0!==window.ethereum)await t.mintAyyoColorKey(e);else{game.scene.getScene("HUD").mintPanel.metaMaskMissing()}},t.redeemPuzzle=async function(n){if(void 0===window.ethereum)return alert("Please install MetaMask to use this feature"),!1;let o=await window.ethereum.request({method:"eth_accounts"});if(0===o.length){if(!await t.verifyIdentity())return!1}o=await window.ethereum.request({method:"eth_accounts"});let a=o[0],r=a;const i=new window.Web3(window.ethereum),s=e,c=new i.eth.Contract([{constant:!1,inputs:[{name:"owner",type:"address"},{name:"secret",type:"string"}],name:"redeemPuzzle",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}],s);let u;console.log("owner",r,"secret",n);try{u=await c.methods.redeemPuzzle(r,n).send({from:a,gas:6e6}),console.log("redeemPuzzle success")}catch(e){throw console.error("redeemPuzzle error",e),e}return u},window.redeem=t.redeemPuzzle,t.getOwnedTokens=async function(){if(void 0===window.ethereum)return!1;let n=await window.ethereum.request({method:"eth_accounts"});if(console.log("getOwnedTokens found accounts ",n),0===n.length){if(!await t.verifyIdentity())return!1}n=await window.ethereum.request({method:"eth_accounts"});const o=n[0];console.log("what is my walletAddress",o);const a=new window.Web3(window.ethereum),r=e,i=new a.eth.Contract([{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}],r);console.log("contract",i);const s=await i.methods.balanceOf(o).call();console.log("my balance",s);const c=[];for(let e=0;e<s;e++){const t=await i.methods.tokenOfOwnerByIndex(o,e).call();c.push(t)}return console.log("current have",c),c},window.getOwnedTokens=t.getOwnedTokens,t.getMintCount=async function(){const t=new window.Web3(window.ethereum),n=e,o=new t.eth.Contract([{constant:!0,inputs:[],name:"getCurrentMintIndex",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}],n),a=await o.methods.getCurrentMintIndex().call();return console.log("mintIndex",a),a},window.getMintCount=t.getMintCount,t.getRedeemedPieces=async function(){const t=new window.Web3(window.ethereum),n=e,o=new t.eth.Contract([{constant:!0,inputs:[],name:"getRedeemedTokens",outputs:[{name:"",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function"}],n),a=await o.methods.getRedeemedTokens().call();return console.log("redeemedTokens",a),a},window.getRedeemedPieces=t.getRedeemedPieces,t.getEthBalance=async function(){let e=new window.Web3(window.ethereum);const t=await window.ethereum.request({method:"eth_accounts"}),n=await window.ethereum.request({method:"eth_getBalance",params:[t[0],"latest"]});return e.utils.fromWei(n,"ether")},t.checkERC20TokenBalance=async function(e){let t=new window.Web3(window.ethereum),o=n[e];const a=await window.ethereum.request({method:"eth_accounts"});if(!a||0===a.length)return null;let r=a[0];t=new window.Web3(window.ethereum);console.log("metamask accounts",a),console.log(`checking erc20TokenBalance for ${o.symbol}`);const i=new t.eth.Contract([{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],type:"function"}],o.address);let s=await i.methods.balanceOf(r).call();console.log("erc20TokenBalance",s);const c=s/10**o.decimals;return console.log("erc20TokenBalance formatted",c),{symbol:o.symbol,balance:s,formatted:c}},"undefined"!=typeof ethereum&&("function"==typeof ethereum.on&&ethereum.on("accountsChanged",(function(e){window.location.reload()})),"function"==typeof window.ethereum.request&&window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x1"}]}));export{t as default};
//# sourceMappingURL=eth.js.map
