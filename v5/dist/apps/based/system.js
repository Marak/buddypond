class s{constructor(){this.messageProcessors=new Map}addMessageProcessor(s,e){this.messageProcessors.has(s)||this.messageProcessors.set(s,[]),this.messageProcessors.get(s).push(e)}removeMessageProcessor(s,e){if(!this.messageProcessors.has(s))return;const r=this.messageProcessors.get(s).filter((s=>s!==e));0===r.length?this.messageProcessors.delete(s):this.messageProcessors.set(s,r)}dispatchMessage(s,e){if(this.messageProcessors.has(s))for(const r of this.messageProcessors.get(s))r(e)}}class e{constructor(e,r={}){return this.bp=e,this.SystemsManager=new s,this}async init(){return"loaded system"}}export{e as default};
//# sourceMappingURL=system.js.map
