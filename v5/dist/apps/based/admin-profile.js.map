{"version":3,"file":"admin-profile.js","sources":["../../../apps/based/admin-profile/admin-profile.js"],"sourcesContent":["class Profile {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        return this;\n    }\n\n    async init() {\n        this.bp.log('Hello from Example');\n\n        // we can load modules or html fragments or css files here\n        // using this.bp.load() method\n\n        // injects CSS link tag into the head of document\n        await this.bp.load('/v5/apps/based/admin-profile/admin-profile.css');\n\n        // fetches html from the fragment and returns it as a string\n        this.html = await this.bp.load('/v5/apps/based/admin-profile/admin-profile.html');\n\n\n        return 'loaded Profile';\n    }\n\n    async open(options = {}) {\n\n        let buddyname = options.context || this.bp.me;\n        buddyname = buddyname.replace(\":\", \"\"); // remove any colons for now\n        buddyname = buddyname.replace(\" \", \"\"); // remove any spaces for now\n        let buddyProfile = await this.bp.apps.client.api.getProfile(buddyname);\n        if (buddyname == this.bp.me) {\n            buddyProfile.localState = this.bp.apps.buddylist.data.profileState;\n        } \n        // Create main content div and setup for tabs\n        let contentDiv = document.createElement('div');\n        let tabList = document.createElement('ul');\n        tabList.className = 'tab-list';\n    \n        let tabContentContainer = document.createElement('div');\n        console.log('buddyProfile', buddyProfile);\n        // Iterate over each profile field and create a tab and a corresponding textarea\n        let profileKeys = Object.keys(buddyProfile);\n        profileKeys.forEach((profileKey, index) => {\n            let tab = document.createElement('li');\n            let tabLink = document.createElement('a');\n            tabLink.href = `#${profileKey}`;\n\n            if (profileKey === 'buddyPad') {\n                tabLink.textContent = 'Buddy Profile Pad';\n\n            } else {\n                tabLink.textContent = profileKey;\n\n            }\n\n            tab.appendChild(tabLink);\n            tabList.appendChild(tab);\n    \n            let tabContent = document.createElement('div');\n            tabContent.id = profileKey;\n            tabContent.className = 'tab-content';\n            if (index === 0) { tab.classList.add('active'); } // Make the first tab active by default\n\n            if (profileKey === 'buddyPad') {\n                // get the myprofile pad for this user and show it ( if not private )\n                console.log('special iframe render here');\n                let buddyPad = buddyProfile[profileKey];\n\n                // create iframe and write source from buddyPad.content\n                let iframe = document.createElement('iframe');\n                iframe.style.width = '100%'; // Ensure textarea takes full width\n                iframe.style.height = '400px'; // Set a fixed height for each textarea\n\n                iframe.src = 'about:blank';\n                iframe.onload = () => {\n        \n                        let iframeDoc = iframe.contentDocument || iframe.contentWindow.document;\n                        iframeDoc.open();\n                        iframeDoc.write(buddyPad.content); // Write the HTML content passed to the constructor\n                        iframeDoc.close();\n                        // isIFrameInitialized = true;\n                    //this.setupMessageHandling(); // Setup message handling after loading content\n                };\n        \n                tabContent.appendChild(iframe);\n\n            } else {\n                let textarea = document.createElement('textarea');\n                textarea.className = 'profileEditor';\n                textarea.style.width = '100%'; // Ensure textarea takes full width\n                textarea.style.height = '400px'; // Set a fixed height for each textarea\n                textarea.value = JSON.stringify(buddyProfile[profileKey], null, 2);\n                tabContent.appendChild(textarea);\n\n            }\n\n            tabContentContainer.appendChild(tabContent);\n\n        });\n\n        contentDiv.appendChild(tabList);\n        contentDiv.appendChild(tabContentContainer);\n    \n        // create a new element from the html string\n        let profileContent = document.createElement('div');\n        profileContent.innerHTML = this.html;\n\n\n        profileContent.append(contentDiv);\n\n        // Initialize tabs\n        if (!this.profileWindow) {\n            this.profileWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'profile-user',\n                title: 'Profile - ' + buddyname,\n                x: 50,\n                y: 100,\n                width: 700,\n                height: 600,\n                minWidth: 200,\n                minHeight: 200,\n                parent: $('#desktop')[0],\n                context: buddyname || 'default',\n                content: profileContent,\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                    this.profileWindow = null;\n                }\n            });\n            new this.bp.apps.ui.Tabs('#' + this.profileWindow.id); // Initialize the tab functionality\n        } else {\n            // this.profileWindow.content.innerHTML = '';\n            // If the window exists and the context has changed, re-render the content\n            this.profileWindow.content = contentDiv;\n            if (this.profileWindow.context !== buddyname) {\n                this.profileWindow.context = buddyname;\n                $(this.profileWindow.content).html(contentDiv.innerHTML);\n                this.profileWindow.setTitle('Profile - ' + buddyname);\n                new this.bp.apps.ui.Tabs('#' + this.profileWindow.id); // Re-initialize the tab functionality\n                // this.profileWindow.render(); Uncomment if there's a render method to refresh the window\n            }\n        \n        }\n    \n        // Focus on the newly created or updated window\n        //this.bp.apps.ui.windowManager.openWindow(this.profileWindow);\n        this.bp.apps.ui.windowManager.focusWindow(this.profileWindow);\n    }\n    \n\n}\n\nexport { Profile as default };\n"],"names":["Profile","constructor","bp","options","this","init","log","load","html","open","buddyname","context","me","replace","buddyProfile","apps","client","api","getProfile","localState","buddylist","data","profileState","contentDiv","document","createElement","tabList","className","tabContentContainer","console","Object","keys","forEach","profileKey","index","tab","tabLink","href","textContent","appendChild","tabContent","id","classList","add","buddyPad","iframe","style","width","height","src","onload","iframeDoc","contentDocument","contentWindow","write","content","close","textarea","value","JSON","stringify","profileContent","innerHTML","append","profileWindow","$","setTitle","ui","Tabs","windowManager","createWindow","title","x","y","minWidth","minHeight","parent","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","focusWindow"],"mappings":"AAAA,MAAMA,EACF,WAAAC,CAAYC,EAAIC,EAAU,IAEtB,OADAC,KAAKF,GAAKA,EACHE,IACf,CAEI,UAAMC,GAaF,OAZAD,KAAKF,GAAGI,IAAI,4BAMNF,KAAKF,GAAGK,KAAK,kDAGnBH,KAAKI,WAAaJ,KAAKF,GAAGK,KAAK,mDAGxB,gBACf,CAEI,UAAME,CAAKN,EAAU,IAEjB,IAAIO,EAAYP,EAAQQ,SAAWP,KAAKF,GAAGU,GAC3CF,EAAYA,EAAUG,QAAQ,IAAK,IACnCH,EAAYA,EAAUG,QAAQ,IAAK,IACnC,IAAIC,QAAqBV,KAAKF,GAAGa,KAAKC,OAAOC,IAAIC,WAAWR,GACxDA,GAAaN,KAAKF,GAAGU,KACrBE,EAAaK,WAAaf,KAAKF,GAAGa,KAAKK,UAAUC,KAAKC,cAG1D,IAAIC,EAAaC,SAASC,cAAc,OACpCC,EAAUF,SAASC,cAAc,MACrCC,EAAQC,UAAY,WAEpB,IAAIC,EAAsBJ,SAASC,cAAc,OACjDI,QAAQvB,IAAI,eAAgBQ,GAEVgB,OAAOC,KAAKjB,GAClBkB,SAAQ,CAACC,EAAYC,KAC7B,IAAIC,EAAMX,SAASC,cAAc,MAC7BW,EAAUZ,SAASC,cAAc,KACrCW,EAAQC,KAAO,IAAIJ,IAGfG,EAAQE,YADO,aAAfL,EACsB,oBAGAA,EAI1BE,EAAII,YAAYH,GAChBV,EAAQa,YAAYJ,GAEpB,IAAIK,EAAahB,SAASC,cAAc,OAKxC,GAJAe,EAAWC,GAAKR,EAChBO,EAAWb,UAAY,cACT,IAAVO,GAAeC,EAAIO,UAAUC,IAAI,UAElB,aAAfV,EAA2B,CAE3BJ,QAAQvB,IAAI,8BACZ,IAAIsC,EAAW9B,EAAamB,GAGxBY,EAASrB,SAASC,cAAc,UACpCoB,EAAOC,MAAMC,MAAQ,OACrBF,EAAOC,MAAME,OAAS,QAEtBH,EAAOI,IAAM,cACbJ,EAAOK,OAAS,KAER,IAAIC,EAAYN,EAAOO,iBAAmBP,EAAOQ,cAAc7B,SAC/D2B,EAAU1C,OACV0C,EAAUG,MAAMV,EAASW,SACzBJ,EAAUK,SAKlBhB,EAAWD,YAAYM,EAEvC,KAAmB,CACH,IAAIY,EAAWjC,SAASC,cAAc,YACtCgC,EAAS9B,UAAY,gBACrB8B,EAASX,MAAMC,MAAQ,OACvBU,EAASX,MAAME,OAAS,QACxBS,EAASC,MAAQC,KAAKC,UAAU9C,EAAamB,GAAa,KAAM,GAChEO,EAAWD,YAAYkB,EAEvC,CAEY7B,EAAoBW,YAAYC,MAIpCjB,EAAWgB,YAAYb,GACvBH,EAAWgB,YAAYX,GAGvB,IAAIiC,EAAiBrC,SAASC,cAAc,OAC5CoC,EAAeC,UAAY1D,KAAKI,KAGhCqD,EAAeE,OAAOxC,GAGjBnB,KAAK4D,eA4BN5D,KAAK4D,cAAcT,QAAUhC,EACzBnB,KAAK4D,cAAcrD,UAAYD,IAC/BN,KAAK4D,cAAcrD,QAAUD,EAC7BuD,EAAE7D,KAAK4D,cAAcT,SAAS/C,KAAKe,EAAWuC,WAC9C1D,KAAK4D,cAAcE,SAAS,aAAexD,GAC3C,IAAIN,KAAKF,GAAGa,KAAKoD,GAAGC,KAAK,IAAMhE,KAAK4D,cAAcvB,OAhCtDrC,KAAK4D,cAAgB5D,KAAKF,GAAGa,KAAKoD,GAAGE,cAAcC,aAAa,CAC5D7B,GAAI,eACJ8B,MAAO,aAAe7D,EACtB8D,EAAG,GACHC,EAAG,IACH1B,MAAO,IACPC,OAAQ,IACR0B,SAAU,IACVC,UAAW,IACXC,OAAQX,EAAE,YAAY,GACtBtD,QAASD,GAAa,UACtB6C,QAASM,EACTgB,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,WAAW,EACXC,QAAS,KACLhF,KAAK4D,cAAgB,QAG7B,IAAI5D,KAAKF,GAAGa,KAAKoD,GAAGC,KAAK,IAAMhE,KAAK4D,cAAcvB,KAiBtDrC,KAAKF,GAAGa,KAAKoD,GAAGE,cAAcgB,YAAYjF,KAAK4D,cACvD"}