class t{constructor(t,e={}){return this.bp=t,this.options=e,this.showDots=!0,this.path=[],this.lastPointTime=Date.now(),this.sigilTemplates={},this.gestureLostFrames=0,this.gestureLostThreshold=12,this}async init(){await this.bp.appendScript("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"),await this.bp.appendScript("https://cdn.jsdelivr.net/npm/@tensorflow-models/coco-ssd"),await this.bp.appendScript("https://cdn.jsdelivr.net/npm/@mediapipe/hands"),await this.bp.appendScript("https://cdn.jsdelivr.net/npm/@mediapipe/camera_utils"),await this.bp.appendScript("https://cdn.jsdelivr.net/npm/fingerpose/dist/fingerpose.min.js"),await this.bp.appendCSS("/v5/apps/based/sigil-caster/sigil-caster.css"),this.html=await this.bp.load("/v5/apps/based/sigil-caster/sigil-caster.html");const{Finger:t,FingerCurl:e,GestureDescription:s}=fp,i=new s("point");i.addCurl(t.Index,e.NoCurl,1),[t.Thumb,t.Middle,t.Ring,t.Pinky].forEach((t=>{i.addCurl(t,e.FullCurl,1),i.addCurl(t,e.HalfCurl,.9)})),this.GE=new fp.GestureEstimator([i]),this.gestureEmoji={point:"👈"},this.spellMap={lightning:{spell:"lightning",type:"sigil",emoji:"⚡",label:"⚡ Lightning ⚡",svg:"/v5/apps/based/sigil-caster/sigils/lightning.svg"},circle:{spell:"fireball",type:"sigil",emoji:"🔥",label:"🔥 Fireball 🔥",svg:"/v5/apps/based/sigil-caster/sigils/circle.svg"},cross:{spell:"flood",type:"sigil",emoji:"❤️",label:"❤️ Heal ❤️",svg:"/v5/apps/based/sigil-caster/sigils/cross.svg"},triangle:{spell:"barrelRoll",type:"sigil",emoji:"🔺",label:"🔺 Teleport 🔺",svg:"/v5/apps/based/sigil-caster/sigils/triangle.svg"},square:{spell:"earthquake",type:"sigil",emoji:"🛡️",label:"🛡️ Shield 🛡️",svg:"/v5/apps/based/sigil-caster/sigils/square.svg"},star:{spell:"peanut-butter-jelly-time",type:"sigil",emoji:"⭐",label:"⭐ Starburst ⭐",svg:"/v5/apps/based/sigil-caster/sigils/star.svg"}},this.svgContainer=document.createElement("div"),this.svgContainer.style.display="none",document.body.appendChild(this.svgContainer);for(const[t,e]of Object.entries(this.spellMap))if(e.svg){console.log(`Loading SVG for ${t}:`,e.svg);try{const s=await fetch(e.svg);if(!s.ok)throw new Error(`HTTP ${s.status}`);const i=await s.text();console.log(`SVG text for ${t}:`,i);const n=new DOMParser,a=n.parseFromString(i,"image/svg+xml").querySelector("path");if(!a)throw new Error("No path found in SVG");console.log("SVG path element:",a),this.sigilTemplates[t]=this.extractPathPoints(a.getAttribute("d")),console.log(`Loaded SVG for ${t}:`,this.sigilTemplates[t])}catch(e){console.error(`Failed to load SVG for ${t}:`,e)}}return this.hands=new Hands({locateFile:t=>`https://cdn.jsdelivr.net/npm/@mediapipe/hands/${t}`}),this.hands.setOptions({maxNumHands:1,modelComplexity:1,minDetectionConfidence:.85,minTrackingConfidence:.85}),"loaded SigilCaster"}async open(){if(this.win)return this.win.focus(),this.win;this.win=this.bp.window(this.window()),document.getElementById("toggle-dots-btn").onclick=()=>{this.showDots=!this.showDots,$(".spell-guide",this.win.content).toggle()},this.renderSpellGuide(this.spellMap);return(()=>{const t=["Initializing camera...","Loading vision model...","Calibrating finger tracking...","Syncing sigil detector...","Finalizing setup..."];let e=0;const s=$("#loading-text",this.win.content),i=setInterval((()=>{s.text(t[e]),e++,e>=t.length&&clearInterval(i)}),1200)}).call(this),this.startObjectDetection(),this.win.maximize(),this.win}window(){return{id:"sigil-caster",title:"Sigil Caster",icon:"desktop/assets/images/icons/icon_sigil-caster_64.png",x:250,y:75,width:600,height:400,minWidth:400,minHeight:300,parent:$("#desktop")[0],content:this.html,resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,onClose:()=>{this.win=null,this.video&&(this.video.srcObject.getTracks().forEach((t=>t.stop())),this.video=null)}}}async startObjectDetection(){const t=document.getElementById("video"),e=document.getElementById("canvas"),s=e.getContext("2d"),i=await cocoSsd.load(),n=await navigator.mediaDevices.getUserMedia({video:!0});t.srcObject=n,this.video=t,await new Promise((e=>t.onloadeddata=e)),t.play(),t.style.display="none";let a=!1;setTimeout((()=>{a||($(".instruction-overlay",this.win.content).hide(),a=!0)}),1e4);let l=!1;this.hands.onResults((async n=>{l||(l=!0,$(".cv-loading",this.win.content).hide()),s.clearRect(0,0,e.width,e.height),s.save(),s.scale(-1,1),s.translate(-e.width,0),s.drawImage(t,0,0,e.width,e.height),s.restore();const o=document.getElementById("sigil-trail"),r=document.getElementById("sigil-spell"),h=Date.now();if(n.multiHandLandmarks&&n.multiHandLandmarks.length>0){const t=n.multiHandLandmarks[0].map((t=>[t.x,t.y,t.z])),i=this.GE.estimate(t,8.5);if(i.gestures.length>0&&"point"===i.gestures[0].name){this.gestureLostFrames=0;const t=n.multiHandLandmarks[0][8],i=t.x*e.width,l=t.y*e.height;h-this.lastPointTime>100&&(this.path.push({x:i,y:l}),this.lastPointTime=h),this.path.length>200&&this.path.shift(),s.save(),s.scale(-1,1),s.translate(-e.width,0),s.beginPath(),s.strokeStyle="cyan",s.lineWidth=3;for(let t=1;t<this.path.length;t++)s.moveTo(this.path[t-1].x,this.path[t-1].y),s.lineTo(this.path[t].x,this.path[t].y);s.stroke(),s.restore(),o.textContent=`Sigil: Drawing (${this.path.length} points)`;const c=this.detectSigil(this.path);c&&(this.castSpell(c,r),this.path=[],o.textContent="Sigil: ",a=!0,$(".instruction-overlay",this.win.content).hide())}else this.path.length>0&&(this.gestureLostFrames++,this.gestureLostFrames>this.gestureLostThreshold?(this.path=[],this.gestureLostFrames=0,o.textContent="Sigil: ",console.log("Path reset: Point gesture lost for too long")):console.log(`Gesture temporarily lost (${this.gestureLostFrames})`));if(this.showDots&&n.multiHandLandmarks[0]){s.save(),s.scale(-1,1),s.translate(-e.width,0);for(const t of n.multiHandLandmarks[0]){const i=t.x*e.width,n=t.y*e.height;s.beginPath(),s.arc(i,n,4,0,2*Math.PI),s.fillStyle="cyan",s.fill()}s.restore()}}else this.path.length>0&&(this.path=[],o.textContent="Sigil: ",console.log("Path reset: No hand detected"));const c=await i.detect(t),d=$("#object-list",this.win.content)[0];d.innerHTML="",c.forEach((t=>{const[i,n,a,l]=t.bbox;this.showDots&&(s.save(),s.scale(-1,1),s.translate(-e.width,0),s.beginPath(),s.rect(i,n,a,l),s.lineWidth=2,s.strokeStyle="red",s.fillStyle="red",s.stroke(),s.fillText(t.class,i,n>10?n-5:10),s.restore());const o=document.createElement("li");o.textContent=`${t.class} (${(100*t.score).toFixed(1)}%)`,d.appendChild(o)}))}));new Camera(t,{onFrame:async()=>{e.width=t.videoWidth,e.height=t.videoHeight,await this.hands.send({image:t})},width:640,height:480}).start()}extractPathPoints(t){const e=t.match(/[ML][^ML]+/g);if(!e)return[];const s=e.map((t=>t.trim().slice(1).trim().split(/[ ,]+/).map(Number))).filter((t=>2===t.length)).map((([t,e])=>({x:t,y:e}))),i=this.getBounds(s);return s.map((t=>({x:(t.x-i.minX)/(i.maxX-i.minX||1),y:(t.y-i.minY)/(i.maxY-i.minY||1)})))}getBounds(t){return t.reduce(((t,e)=>({minX:Math.min(t.minX,e.x),maxX:Math.max(t.maxX,e.x),minY:Math.min(t.minY,e.y),maxY:Math.max(t.maxY,e.y)})),{minX:1/0,maxX:-1/0,minY:1/0,maxY:-1/0})}detectSigil(t){if(t.length<10)return null;const e=this.smoothPath(t,3),s=this.getBounds(e);if((s.maxX-s.minX)*(s.maxY-s.minY)<.01)return null;const i=e.map((t=>({x:(t.x-s.minX)/(s.maxX-s.minX),y:(t.y-s.minY)/(s.maxY-s.minY)})));this.matchBuffer=this.matchBuffer||{};for(const[t,e]of Object.entries(this.sigilTemplates)){if(e.length<2)continue;const s=Math.min(this.comparePaths(i,e),this.comparePaths(i,[...e].reverse())),n=Math.max(.12,.35-.0015*i.length);if(this.matchBuffer[t]||(this.matchBuffer[t]=0),s<n){if(this.matchBuffer[t]++,this.matchBuffer[t]>=3)return this.matchBuffer={},t}else this.matchBuffer[t]=0}return null}smoothPath(t,e=3){const s=[],i=Math.floor(e/2);for(let e=0;e<t.length;e++){let n=0,a=0,l=0;for(let s=-i;s<=i;s++){const i=t[e+s];i&&(n+=i.x,a+=i.y,l++)}s.push({x:n/l,y:a/l})}return s}comparePaths(t,e){const s=Math.min(50,Math.max(t.length,e.length)),i=this.resamplePath(t,s),n=this.resamplePath(e,s);let a=0;for(let t=0;t<s;t++){const e=i[t].x-n[t].x,s=i[t].y-n[t].y;a+=Math.sqrt(e*e+s*s)}return a/s}resamplePath(t,e){if(t.length<2)return t;const s=t.slice(1).reduce(((e,s,i)=>{const n=t[i];return e+Math.sqrt((s.x-n.x)**2+(s.y-n.y)**2)}),0),i=[t[0]],n=s/(e-1);let a=0,l=0;for(let s=1;s<e-1;s++){const e=s*n;for(;l<t.length-1&&a<e;){const e=t[l],s=t[l+1];a+=Math.sqrt((s.x-e.x)**2+(s.y-e.y)**2),l++}if(l>=t.length)break;const o=t[l-1],r=t[l],h=Math.sqrt((r.x-o.x)**2+(r.y-o.y)**2),c=(e-(a-h))/h;i.push({x:o.x+c*(r.x-o.x),y:o.y+c*(r.y-o.y)})}return t.length>0&&i.push(t[t.length-1]),i}async castSpell(t,e){const s=this.spellMap[t];if(s){console.log(`⚡ Sigil Cast: ${s.spell.charAt(0).toUpperCase()+s.spell.slice(1)}!`),e.innerHTML=s.label;try{(await this.bp.importModule(`/v5/apps/based/spellbook/spells/${s.spell}/${s.spell}.js`,{},!1)).default.call(this)}catch(t){console.error("Error importing spell module:",t)}setTimeout((()=>{e.innerHTML=""}),2200)}}renderSpellGuide(t){const e=$("#spell-list",this.win.content);for(const[s,i]of Object.entries(t))e.append(`<li>${i.label} (Draw ${s})</li>`)}}export{t as default};
//# sourceMappingURL=sigil-caster.js.map
