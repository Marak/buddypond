class t{constructor(t,i={}){return this.bp=t,this.options=i,this.waveCount=0,this.isSpinning=!1,this.spinAngle=0,this.backgroundColor="rgb(50, 50, 100)",this}async init(){return await this.bp.appendScript("https://cdn.jsdelivr.net/npm/@mediapipe/pose"),await this.bp.appendScript("https://cdn.jsdelivr.net/npm/@mediapipe/camera_utils"),this.html=await this.bp.load("/v5/apps/based/stickman/stickman.html"),await this.bp.appendCSS("/v5/apps/based/stickman/stickman.css"),"loaded StickMan"}async open(){return this.win?(this.win.restore(),this.win.focus(),this.win):(this.win=this.bp.window(this.window()),this.startLoadingSequence(),this.startStickMan(),this.win.maximize(),this.win)}window(){return{id:"stickman",title:"StickMan",icon:"desktop/assets/images/icons/icon_stickman_64.png",x:300,y:100,width:700,height:520,content:this.html,parent:$("#desktop")[0],resizable:!0,maximizable:!0,closable:!0,onClose:()=>{this.win=null,this.video&&this.video.srcObject&&(this.video.srcObject.getTracks().forEach((t=>t.stop())),this.video.srcObject=null)}}}isWaveGesture(t){const i=t[15],e=t[16],n=t[11],s=t[12];return i.y<n.y&&e.y<s.y}async startStickMan(){this.video=document.getElementById("video");const t=document.getElementById("canvas"),i=t.getContext("2d"),e=document.getElementById("status");let n=null;document.addEventListener("keydown",(t=>{if("b"===t.key.toLowerCase())this.backgroundColor=`rgb(${255*Math.random()}, ${255*Math.random()}, ${255*Math.random()})`,e.innerText="🧍 StickMan | B: Change Background, R: Reset"}));const s=await navigator.mediaDevices.getUserMedia({video:!0});this.video.srcObject=s,await new Promise((t=>this.video.onloadeddata=t)),this.video.play();const a=new Pose({locateFile:t=>`https://cdn.jsdelivr.net/npm/@mediapipe/pose/${t}`});a.setOptions({modelComplexity:1,smoothLandmarks:!0,minDetectionConfidence:.7,minTrackingConfidence:.7,selfieMode:!0});new Camera(this.video,{onFrame:async()=>await a.send({image:this.video}),width:640,height:480}).start();let o=!1;a.onResults((t=>{o||(o=!0,$(".stickman-loading",this.win.content).fadeOut(300)),n=t.poseLandmarks?t.poseLandmarks:null}));const c=()=>{i.clearRect(0,0,t.width,t.height),i.fillStyle=this.backgroundColor,i.fillRect(0,0,t.width,t.height),n?(e=>{const n=t.width,s=t.height,a=t=>({x:e[t].x*n,y:e[t].y*s}),o=a(11),c=a(12),d=a(13),r=a(14),h=a(15),l=a(16),m=a(23),p=a(24),g=a(25),w=a(26),u=a(27),y=a(28),k=(m.x+p.x)/2,v=(m.y+p.y)/2,b={x:(o.x+c.x)/2,y:(o.y+c.y)/2};i.strokeStyle="white",i.lineWidth=4,i.fillStyle="white",i.beginPath(),i.moveTo(b.x,b.y),i.lineTo(k,v),i.stroke();const x=(t,e,n)=>{i.beginPath(),i.moveTo(t.x,t.y),i.lineTo(e.x,e.y),i.lineTo(n.x,n.y),i.stroke()};x(o,d,h),x(c,r,l),x(m,g,u),x(p,w,y),i.beginPath(),i.arc(b.x,b.y-30,20,0,2*Math.PI),i.fill(),[o,c,d,r,h,l,m,p,g,w,u,y].forEach((t=>{i.beginPath(),i.arc(t.x,t.y,5,0,2*Math.PI),i.fill()}))})(n):e.innerText="🧍 StickMan | B: Change Background",requestAnimationFrame(c)};requestAnimationFrame(c)}}t.prototype.startLoadingSequence=function(t){const i=["Initializing camera...","Loading vision model...","Warming up tensors...","Calibrating hand gestures...","Initializing Sticks...","Finalizing setup..."];let e=0;const n=$("#loading-text",this.win.content),s=setInterval((()=>{n.text(i[e]),e++,e>=i.length&&clearInterval(s)}),1200)};export{t as default};
//# sourceMappingURL=stickman.js.map
