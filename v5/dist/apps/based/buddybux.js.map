{"version":3,"file":"buddybux.js","sources":["../../../apps/based/resource/lib/MemoryProvider.js","../../../apps/based/resource/lib/RestProvider.js","../../../apps/based/resource/lib/IndexedDbProvider.js","../../../apps/based/resource/lib/Resource.js","../../../apps/based/buddybux/buddybux.js","../../../apps/based/buddybux/lib/eventBind.js","../../../apps/based/buddybux/lib/checkoutComplete.js","../../../apps/based/buddybux/lib/balanceOf.js","../../../apps/based/buddybux/lib/render.js"],"sourcesContent":["const memoryStore = {}; // In-memory database\n\nexport default class MemoryProvider {\n    constructor(resourceName) {\n        this.resourceName = resourceName;\n        memoryStore[this.resourceName] = {}; // Change from array to object\n        this.memoryStore = memoryStore;\n    }\n\n    create(owner, data, schema) {\n        // Check for required fields\n        Object.keys(schema).forEach((key) => {\n            if (schema[key].required && (data[key] === undefined || data[key] === null)) {\n                throw new Error(`${key} is required`);\n            }\n\n            if (schema[key].unique) {\n                const entries = Object.values(memoryStore[this.resourceName]);\n                if (entries.some(entry => entry[key] === data[key])) {\n                    throw new Error(`${key} must be unique`);\n                }\n            }\n\n            if (schema[key].type && typeof data[key] !== schema[key].type) {\n                throw new Error(`${key} must be of type ${schema[key].type} value is ${data[key]}`);\n            }\n\n        });\n\n        const newId = generateUniqueId();\n        const newEntry = { id: newId, owner };\n\n        Object.keys(schema).forEach((key) => {\n            newEntry[key] = data[key] || null;\n        });\n\n        memoryStore[this.resourceName][newId] = newEntry;\n        return newEntry;\n    }\n\n    get(owner, id) {\n        const entry = memoryStore[this.resourceName][id];\n        return entry && entry.owner === owner ? entry : null;\n    }\n\n    update(owner, id, data, schema) {\n        const entry = memoryStore[this.resourceName][id];\n        if (!entry || entry.owner !== owner) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        // Check for required fields\n        Object.keys(schema).forEach((key) => {\n            if (schema[key].required && (data[key] === undefined || data[key] === null)) {\n                throw new Error(`${key} is required`);\n            }\n            /*\n            if (schema[key].unique && data[key] !== undefined) {\n                const entries = Object.values(memoryStore[this.resourceName]);\n                if (entries.some(e => e.id !== id && e[key] === data[key])) {\n                    throw new Error(`${key} must be unique`);\n                }\n            }\n                */\n        });\n\n        Object.keys(schema).forEach((key) => {\n            if (data[key] !== undefined) {\n                entry[key] = data[key];\n            }\n        });\n\n        return entry;\n    }\n\n    remove(owner, id) {\n        const entry = memoryStore[this.resourceName][id];\n        if (!entry || entry.owner !== owner) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        delete memoryStore[this.resourceName][id];\n        return { success: true };\n    }\n\n    search(owner, query) {\n        // example query: { name: 'John', age: 30 }\n        return Object.values(memoryStore[this.resourceName]).filter(item => item.owner === owner && Object.keys(query).every(key => item[key] === query[key]));\n    }\n\n    list(owner) {\n        return Object.values(memoryStore[this.resourceName]).filter(item => item.owner === owner);\n    }\n\n    all() {\n        return Object.values(memoryStore[this.resourceName]);\n    }\n}\n\n// ðŸš€ Helper Function: Generate a Unique ID\nfunction generateUniqueId() {\n    return Math.random().toString(36).substring(2, 10);\n}\n","export default class RestProvider {\n    constructor(resourceName, options = {}) {\n        // console.log('RestProvider', resourceName, options);\n        this.resourceName = resourceName;\n        this.apiEndpoint = options.apiEndpoint;\n        if (options.bp) {\n            this.bp = options.bp;\n        }\n    }\n\n    async apiRequest(method, path, body = null, urlparams = null) {\n        // console.log('apiRequest', method, path, body, urlparams);\n        const options = { method, headers: { 'Content-Type': 'application/json' } };\n        if (body) options.body = JSON.stringify(body);\n\n        if (this.bp.qtokenid) {\n            options.headers[\"Authorization\"] = `Bearer ${this.bp.qtokenid}`; // âœ… Use Authorization header\n        }\n\n        options.headers['X-Me'] = this.bp.me; // Add X-Me header\n\n        let url = `${this.apiEndpoint}/${path}`;\n        // append urlparams to url\n        if (urlparams) {\n            const params = new URLSearchParams(urlparams);\n            url += `?${params.toString()}`;\n        }\n        // console.log('apiRequest', method, url, options);\n\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            console.log('API request failed:', response);\n            // try to get json from json\n            try {\n                let json = await response.json();\n                console.log('API request failed:', json);\n                throw new Error(`${json.error}`);\n                return json;\n            } catch (err) {\n                console.log('error', err);\n                throw new Error(err);\n            }\n            throw new Error(`API request failed: ${json.error}`);\n        }\n        return response.json();\n    }\n\n    async create(id, data) {\n        console.log('calling create', `${this.resourceName}`, data);\n        return this.apiRequest('POST', `${this.resourceName}`, data);\n    }\n\n    async get(owner, id) {\n        return this.apiRequest('GET', `${this.resourceName}/${owner}/${id}`);\n    }\n\n    async update(id, data) {\n        console.log(`calling update ${this.resourceName}/${id}`, data);\n        return this.apiRequest('PUT', `${this.resourceName}/${id}`, data);\n    }\n\n    async remove(id) {\n        return this.apiRequest('DELETE', `${this.resourceName}/${id}`);\n    }\n\n    async list() {\n        console.log('calling list', `${this.resourceName}`);\n        return this.apiRequest('GET', `${this.resourceName}`);\n    }\n\n    async all() {\n        return this.apiRequest('GET', this.resourceName);\n    }\n\n    async search(owner, query, urlparams = {}) {\n        return this.apiRequest('POST', `${this.resourceName}/search`, query, urlparams);\n    }\n\n}\n","export default class IndexedDbProvider {\n    constructor(resourceName) {\n        this.resourceName = resourceName;\n        this.dbName = \"BuddyPondResourceDB\";\n        this.version = 1;\n        this.db = null;\n        this.init();\n    }\n\n    async init() {\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.dbName, this.version);\n\n            request.onupgradeneeded = (event) => {\n                let db = event.target.result;\n                if (!db.objectStoreNames.contains(this.resourceName)) {\n                    db.createObjectStore(this.resourceName, { keyPath: \"id\" });\n                }\n            };\n\n            request.onsuccess = (event) => {\n                this.db = event.target.result;\n                resolve();\n            };\n\n            request.onerror = (event) => {\n                reject(`IndexedDB Error: ${event.target.errorCode}`);\n            };\n        });\n    }\n\n    async _withStore(mode, callback) {\n        if (!this.db) {\n            await this.init();\n        }\n        return new Promise((resolve, reject) => {\n            const tx = this.db.transaction(this.resourceName, mode);\n            const store = tx.objectStore(this.resourceName);\n            const request = callback(store);\n\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    async create(owner, data, schema) {\n        const newId = generateUniqueId();\n        const newEntry = { id: newId, owner };\n\n        Object.keys(schema).forEach((key) => {\n            newEntry[key] = data[key] || null;\n        });\n\n        await this._withStore(\"readwrite\", (store) => store.add(newEntry));\n        return newEntry;\n    }\n\n    async get(owner, id) {\n        const entry = await this._withStore(\"readonly\", (store) => store.get(id));\n        return entry && entry.owner === owner ? entry : null;\n    }\n\n    async update(owner, id, data, schema) {\n        const entry = await this.get(owner, id);\n        if (!entry) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        Object.keys(schema).forEach((key) => {\n            if (data[key] !== undefined) {\n                entry[key] = data[key];\n            }\n        });\n\n        await this._withStore(\"readwrite\", (store) => store.put(entry));\n        return entry;\n    }\n\n    async remove(owner, id) {\n        const entry = await this.get(owner, id);\n        if (!entry) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        await this._withStore(\"readwrite\", (store) => store.delete(id));\n        return { success: true };\n    }\n\n    async list(owner) {\n        return new Promise((resolve, reject) => {\n            this._withStore(\"readonly\", (store) => {\n                const request = store.getAll();\n                request.onsuccess = () => {\n                    resolve(request.result.filter(item => item.owner === owner));\n                };\n                request.onerror = () => reject(request.error);\n            });\n        });\n    }\n\n    async all() {\n        return new Promise((resolve, reject) => {\n            this._withStore(\"readonly\", (store) => {\n                const request = store.getAll();\n                request.onsuccess = () => resolve(request.result);\n                request.onerror = () => reject(request.error);\n            });\n        });\n    }\n}\n\n// ðŸš€ Helper Function: Generate a Unique ID\nfunction generateUniqueId() {\n    return Math.random().toString(36).substring(2, 10);\n}\n","import MemoryProvider from './MemoryProvider.js';\nimport RestProvider from './RestProvider.js';\nimport IndexedDBProvider from './IndexedDbProvider.js';\n\nconst schemaRegistry = {};\n\nexport default class Resource {\n    constructor(name, options) {\n        this.name = name;\n        this.schema = options.schema || {};\n        this.providerType = options.provider || 'memory';\n\n        if (Object.keys(this.schema).length === 0) {\n            throw new Error(`Schema definition is required for resource: ${name}`);\n        }\n        \n        // console.log('Initializing provider with options:', options);\n        schemaRegistry[this.name] = this.schema; // Register the resource schema\n\n        this.provider = this._createProvider(this.providerType, options);\n        this.provider.bp = options.bp;\n    }\n\n    _createProvider(providerType, options) {\n        switch (providerType) {\n            case 'rest':\n                return new RestProvider(this.name, options);\n            case 'indexeddb':\n                return new IndexedDBProvider(this.name, options);\n            case 'memory':\n            default:\n                return new MemoryProvider(this.name);\n        }\n    }\n\n    create(owner, data) {\n        return this.provider.create(owner, data, this.schema);\n    }\n\n    get(owner, id) {\n        return this.provider.get(owner, id);\n    }\n\n    update(owner, id, data) {\n        return this.provider.update(owner, id, data, this.schema);\n    }\n\n    remove(owner, id) {\n        return this.provider.remove(owner, id);\n    }\n\n    list(owner) {\n        return this.provider.list(owner);\n    }\n\n    search(owner, query, urlparams) {\n        return this.provider.search(owner, query, urlparams);\n    }\n    \n    all() {\n        return this.provider.all();\n    }\n\n    \n\n    async apiRequest(method, path, body = null) {\n        return this.provider.apiRequest(method, path, body);\n    }\n\n}\n","/* BuddyBux.js - Marak Squires 2025 - BuddyPond */\nimport Resource from '../resource/lib/Resource.js';\nimport eventBind from './lib/eventBind.js';\nimport checkoutComplete from './lib/checkoutComplete.js';\nimport balanceOf from './lib/balanceOf.js';\nimport render from './lib/render.js';\n\nexport default class BuddyBux {\n\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        return this;\n    }\n\n    async init() {\n        this.html = await this.bp.load('/v5/apps/based/buddybux/buddybux.html');\n        this.css = await this.bp.load('/v5/apps/based/buddybux/buddybux.css');\n\n        let provider = 'indexeddb';\n        provider = 'memory';\n        this.resource = new Resource(\"coin\", {\n            provider: provider,\n            apiEndpoint: this.bp.config.api,\n            schema: {\n                name: { type: \"string\" },\n                symbol: { type: \"string\" },\n                owner: { type: \"string\" },\n                supply: { type: \"number\" },\n            },\n            bp: this.bp\n        });\n\n        // Remark: Probably not best practice to do this, instead better to reference\n        // entire portfolio app so we can use the app controller methods instead of resource methods directly\n        this.portfolioResource = new Resource(\"portfolio\", {\n            provider: provider,\n            apiEndpoint: this.bp.config.api,\n            schema: {\n                owner: { type: \"string\" },\n                symbol : { type: \"string\" },\n                amount: { type: \"number\" },\n                ctime: { type: \"number\" },\n                utime: { type: \"number\" }\n            },\n            bp: this.bp\n        });\n\n        if (provider !== 'rest') {\n            // Mint the new coin\n            this.resource.create(\"Marak\", { // is that right?\n                name: 'BuddyBux',\n                symbol: 'BUX',\n                owner: this.bp.me,\n                supply: Infinity\n            });\n        }\n\n    }\n\n    async open() {\n        if (!this.buddybuxWindow) {\n            this.buddybuxWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'buddybux',\n                title: 'BuddyBux',\n                icon: 'desktop/assets/images/icons/icon_buddybux_64.png',\n                x: 250,\n                y: 75,\n                width: 400,\n                height: 500,\n                minWidth: 200,\n                minHeight: 200,\n                parent: $('#desktop')[0],\n                content: this.html,\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                    this.buddybuxWindow = null;\n                }\n            });\n\n            this.render();\n            this.eventBind();\n\n        }\n    }\n\n}\n\nBuddyBux.prototype.eventBind = eventBind;\nBuddyBux.prototype.checkoutComplete = checkoutComplete;\nBuddyBux.prototype.balanceOf = balanceOf;\nBuddyBux.prototype.render = render;","export default function eventBind () {\n    const pricePerBux = 0.01; // 1 BuddyBux = $0.01\n    const discountTiers = [\n        { threshold: 1000, price: 0.009 }, // 10% off\n        { threshold: 2000, price: 0.0075 }, // 25% off\n        { threshold: 5000, price: 0.005 }  // 50% off\n    ];\n\n    function calculatePrice(amount) {\n        let finalPrice = amount * pricePerBux;\n        for (let tier of discountTiers) {\n            if (amount >= tier.threshold) {\n                finalPrice = amount * tier.price;\n            }\n        }\n        return finalPrice.toFixed(2);\n    }\n\n    document.getElementById(\"buddybux-amount\").addEventListener(\"input\", function () {\n        let amount = parseInt(this.value) || 1;\n        amount = Math.min(Math.max(amount, 1), 5000);\n        this.value = amount;\n        document.getElementById(\"total-price\").innerText = `$${calculatePrice(amount)}`;\n    });\n\n    document.getElementById(\"stripe-checkout\").addEventListener(\"click\", () => {\n        //alert(\"Redirecting to Stripe Checkout...\");\n        // this.bp.open('stripe');\n        // Stripe checkout logic here\n        // assume checkout was successful ( for now )\n\n        let amount = document.getElementById(\"buddybux-amount\").value;\n        this.checkoutComplete(amount);\n   \n        //this.resource.updateOrCreate...\n    });\n\n    document.getElementById(\"crypto-checkout\").addEventListener(\"click\", function () {\n        alert(\"Connecting to MetaMask...\");\n        // Ethereum transaction logic here\n    });\n\n    this.tabs = new this.bp.apps.ui.Tabs('#buddybux-tabs', this.buddybuxWindow.content);\n\n    this.tabs.onTab((tabId) => {\n        console.log(`Switched to tab: ${tabId}`);\n\n    });\n\n    // Update total price\n    $('#buddybux-amount').on('input', function () {\n        const amount = $(this).val();\n        $('#total-price').text(`$${(amount * 0.01).toFixed(2)}`);\n    });\n\n    // Send BuddyBux\n    $('#send-buddybux').on('click', function () {\n        const recipient = $('#recipient').val();\n        const amount = $('#send-amount').val();\n\n        if (recipient && amount > 0) {\n            const confirmation = prompt(`Type the buddy name '${recipient}' to confirm:`);\n\n            if (confirmation === recipient) {\n                alert(`Successfully sent ${amount} BuddyBux to ${recipient}!`);\n            } else {\n                alert('Confirmation failed. Please try again.');\n            }\n        } else {\n            alert('Please fill out all fields correctly.');\n        }\n    });\n\n    function animateBalance(el) {\n\n        const balance = Math.floor(Math.random() * 1000); // Example random balance\n        const digits = String(balance).padStart(3, '0').split('');\n\n        $('.digit').each(function (index) {\n            $(this).addClass('spin');\n            setTimeout(() => {\n                $(this).removeClass('spin');\n                $(this).text(digits[index]);\n            }, 500 * (index + 1));\n        });\n\n\n    }\n\n    // Check Balance with slot machine animation\n    $('#check-balance').on('click', async (ev) => {\n\n        let portfolio = await this.portfolioResource.get(this.bp.me);\n        console.log(`Portfolio for ${this.bp.me}:`, portfolio);\n\n        animateBalance(ev.target);\n\n    });\n    // TODO: ontab active perform the animation\n    animateBalance(this);\n\n}","export default async function checkoutComplete (amount) {\n    // TODO: update or create\n    alert('checkoutComplete ' + amount);\n    this.portfolioResource.create(this.bp.me, 'BUX', {\n        symbol: 'BUX',\n        amount: amount,\n        owner: this.bp.me,\n        ctime: Date.now(),\n        utime: Date.now()\n    });\n}\n","export default async function balanceOf () {\n    return JSON.stringify({ message: 'Balance of!' });\n}","export default async function render () {\n\n    // get the available balance from portfolio\n    await this.bp.load('portfolio');\n\n    // get the portfolio's assets\n    const buddyBuxResults = await this.bp.apps.portfolio.resource.search(this.bp.me, {\n        symbol: 'BUX',\n        owner: this.bp.me\n    });\n    console.log('buddyBuxResultsbuddyBuxResults', buddyBuxResults.results);\n\n    let buddyBux = buddyBuxResults.results[0];\n\n    console.group('BuddyBux', buddyBux);\n\n    let formattedAmount = buddyBux.amount.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    });\n    $('#slot-machine').html(formattedAmount);\n\n\n\n    return this.html;\n}"],"names":["memoryStore","MemoryProvider","constructor","resourceName","this","create","owner","data","schema","Object","keys","forEach","key","required","undefined","Error","unique","values","some","entry","type","newId","Math","random","toString","substring","newEntry","id","get","update","remove","success","search","query","filter","item","every","list","all","RestProvider","options","apiEndpoint","bp","apiRequest","method","path","body","urlparams","headers","JSON","stringify","qtokenid","me","url","URLSearchParams","response","fetch","ok","console","log","json","error","err","IndexedDbProvider","dbName","version","db","init","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","errorCode","_withStore","mode","callback","store","transaction","objectStore","add","put","delete","getAll","schemaRegistry","Resource","name","providerType","provider","length","_createProvider","IndexedDBProvider","BuddyBux","html","load","css","resource","config","api","symbol","supply","portfolioResource","amount","ctime","utime","Infinity","buddybuxWindow","apps","ui","windowManager","createWindow","title","icon","x","y","width","height","minWidth","minHeight","parent","$","content","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","render","eventBind","prototype","discountTiers","threshold","price","animateBalance","el","balance","floor","digits","String","padStart","split","each","index","addClass","setTimeout","removeClass","text","document","getElementById","addEventListener","parseInt","value","min","max","innerText","finalPrice","tier","toFixed","calculatePrice","checkoutComplete","alert","tabs","Tabs","onTab","tabId","on","val","recipient","prompt","async","ev","portfolio","Date","now","balanceOf","message","buddyBuxResults","results","buddyBux","group","formattedAmount","toLocaleString","style","currency"],"mappings":"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"}