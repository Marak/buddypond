{"version":3,"file":"portfolio.js","sources":["../../../apps/based/resource/lib/MemoryProvider.js","../../../apps/based/resource/lib/RestProvider.js","../../../apps/based/resource/lib/IndexedDbProvider.js","../../../apps/based/resource/lib/Resource.js","../../../apps/based/portfolio/lib/Portfolio.js","../../../apps/based/portfolio/lib/transfer.js","../../../apps/based/portfolio/lib/Transaction.js","../../../apps/based/portfolio/lib/render.js","../../../apps/based/portfolio/portfolio.js","../../../apps/based/portfolio/lib/eventBind.js"],"sourcesContent":["const memoryStore = {}; // In-memory database\n\nexport default class MemoryProvider {\n    constructor(resourceName) {\n        this.resourceName = resourceName;\n        memoryStore[this.resourceName] = {}; // Change from array to object\n        this.memoryStore = memoryStore;\n    }\n\n    create(owner, data, schema) {\n        // Check for required fields\n        Object.keys(schema).forEach((key) => {\n            if (schema[key].required && (data[key] === undefined || data[key] === null)) {\n                throw new Error(`${key} is required`);\n            }\n\n            if (schema[key].unique) {\n                const entries = Object.values(memoryStore[this.resourceName]);\n                if (entries.some(entry => entry[key] === data[key])) {\n                    throw new Error(`${key} must be unique`);\n                }\n            }\n\n            if (schema[key].type && typeof data[key] !== schema[key].type) {\n                throw new Error(`${key} must be of type ${schema[key].type} value is ${data[key]}`);\n            }\n\n        });\n\n        const newId = generateUniqueId();\n        const newEntry = { id: newId, owner };\n\n        Object.keys(schema).forEach((key) => {\n            newEntry[key] = data[key] || null;\n        });\n\n        memoryStore[this.resourceName][newId] = newEntry;\n        return newEntry;\n    }\n\n    get(owner, id) {\n        const entry = memoryStore[this.resourceName][id];\n        return entry && entry.owner === owner ? entry : null;\n    }\n\n    update(owner, id, data, schema) {\n        const entry = memoryStore[this.resourceName][id];\n        if (!entry || entry.owner !== owner) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        // Check for required fields\n        Object.keys(schema).forEach((key) => {\n            if (schema[key].required && (data[key] === undefined || data[key] === null)) {\n                throw new Error(`${key} is required`);\n            }\n            /*\n            if (schema[key].unique && data[key] !== undefined) {\n                const entries = Object.values(memoryStore[this.resourceName]);\n                if (entries.some(e => e.id !== id && e[key] === data[key])) {\n                    throw new Error(`${key} must be unique`);\n                }\n            }\n                */\n        });\n\n        Object.keys(schema).forEach((key) => {\n            if (data[key] !== undefined) {\n                entry[key] = data[key];\n            }\n        });\n\n        return entry;\n    }\n\n    remove(owner, id) {\n        const entry = memoryStore[this.resourceName][id];\n        if (!entry || entry.owner !== owner) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        delete memoryStore[this.resourceName][id];\n        return { success: true };\n    }\n\n    search(owner, query) {\n        // example query: { name: 'John', age: 30 }\n        return Object.values(memoryStore[this.resourceName]).filter(item => item.owner === owner && Object.keys(query).every(key => item[key] === query[key]));\n    }\n\n    list(owner) {\n        return Object.values(memoryStore[this.resourceName]).filter(item => item.owner === owner);\n    }\n\n    all() {\n        return Object.values(memoryStore[this.resourceName]);\n    }\n}\n\n// ðŸš€ Helper Function: Generate a Unique ID\nfunction generateUniqueId() {\n    return Math.random().toString(36).substring(2, 10);\n}\n","export default class RestProvider {\n    constructor(resourceName, options = {}) {\n        // console.log('RestProvider', resourceName, options);\n        this.resourceName = resourceName;\n        this.apiEndpoint = options.apiEndpoint;\n        if (options.bp) {\n            this.bp = options.bp;\n        }\n    }\n\n    async apiRequest(method, path, body = null, urlparams = null) {\n        // console.log('apiRequest', method, path, body, urlparams);\n        const options = { method, headers: { 'Content-Type': 'application/json' } };\n        if (body) options.body = JSON.stringify(body);\n\n        if (this.bp.qtokenid) {\n            options.headers[\"Authorization\"] = `Bearer ${this.bp.qtokenid}`; // âœ… Use Authorization header\n        }\n\n        options.headers['X-Me'] = this.bp.me; // Add X-Me header\n\n        let url = `${this.apiEndpoint}/${path}`;\n        // append urlparams to url\n        if (urlparams) {\n            const params = new URLSearchParams(urlparams);\n            url += `?${params.toString()}`;\n        }\n        // console.log('apiRequest', method, url, options);\n\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            console.log('API request failed:', response);\n            // try to get json from json\n            try {\n                let json = await response.json();\n                console.log('API request failed:', json);\n                throw new Error(`${json.error}`);\n                return json;\n            } catch (err) {\n                console.log('error', err);\n                throw new Error(err);\n            }\n            throw new Error(`API request failed: ${json.error}`);\n        }\n        return response.json();\n    }\n\n    async create(id, data) {\n        console.log('calling create', `${this.resourceName}`, data);\n        return this.apiRequest('POST', `${this.resourceName}`, data);\n    }\n\n    async get(owner, id) {\n        return this.apiRequest('GET', `${this.resourceName}/${owner}/${id}`);\n    }\n\n    async update(id, data) {\n        console.log(`calling update ${this.resourceName}/${id}`, data);\n        return this.apiRequest('PUT', `${this.resourceName}/${id}`, data);\n    }\n\n    async remove(id) {\n        return this.apiRequest('DELETE', `${this.resourceName}/${id}`);\n    }\n\n    async list() {\n        console.log('calling list', `${this.resourceName}`);\n        return this.apiRequest('GET', `${this.resourceName}`);\n    }\n\n    async all() {\n        return this.apiRequest('GET', this.resourceName);\n    }\n\n    async search(owner, query, urlparams = {}) {\n        return this.apiRequest('POST', `${this.resourceName}/search`, query, urlparams);\n    }\n\n}\n","export default class IndexedDbProvider {\n    constructor(resourceName) {\n        this.resourceName = resourceName;\n        this.dbName = \"BuddyPondResourceDB\";\n        this.version = 1;\n        this.db = null;\n        this.init();\n    }\n\n    async init() {\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.dbName, this.version);\n\n            request.onupgradeneeded = (event) => {\n                let db = event.target.result;\n                if (!db.objectStoreNames.contains(this.resourceName)) {\n                    db.createObjectStore(this.resourceName, { keyPath: \"id\" });\n                }\n            };\n\n            request.onsuccess = (event) => {\n                this.db = event.target.result;\n                resolve();\n            };\n\n            request.onerror = (event) => {\n                reject(`IndexedDB Error: ${event.target.errorCode}`);\n            };\n        });\n    }\n\n    async _withStore(mode, callback) {\n        if (!this.db) {\n            await this.init();\n        }\n        return new Promise((resolve, reject) => {\n            const tx = this.db.transaction(this.resourceName, mode);\n            const store = tx.objectStore(this.resourceName);\n            const request = callback(store);\n\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    async create(owner, data, schema) {\n        const newId = generateUniqueId();\n        const newEntry = { id: newId, owner };\n\n        Object.keys(schema).forEach((key) => {\n            newEntry[key] = data[key] || null;\n        });\n\n        await this._withStore(\"readwrite\", (store) => store.add(newEntry));\n        return newEntry;\n    }\n\n    async get(owner, id) {\n        const entry = await this._withStore(\"readonly\", (store) => store.get(id));\n        return entry && entry.owner === owner ? entry : null;\n    }\n\n    async update(owner, id, data, schema) {\n        const entry = await this.get(owner, id);\n        if (!entry) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        Object.keys(schema).forEach((key) => {\n            if (data[key] !== undefined) {\n                entry[key] = data[key];\n            }\n        });\n\n        await this._withStore(\"readwrite\", (store) => store.put(entry));\n        return entry;\n    }\n\n    async remove(owner, id) {\n        const entry = await this.get(owner, id);\n        if (!entry) {\n            throw new Error(`${this.resourceName} not found or unauthorized`);\n        }\n\n        await this._withStore(\"readwrite\", (store) => store.delete(id));\n        return { success: true };\n    }\n\n    async list(owner) {\n        return new Promise((resolve, reject) => {\n            this._withStore(\"readonly\", (store) => {\n                const request = store.getAll();\n                request.onsuccess = () => {\n                    resolve(request.result.filter(item => item.owner === owner));\n                };\n                request.onerror = () => reject(request.error);\n            });\n        });\n    }\n\n    async all() {\n        return new Promise((resolve, reject) => {\n            this._withStore(\"readonly\", (store) => {\n                const request = store.getAll();\n                request.onsuccess = () => resolve(request.result);\n                request.onerror = () => reject(request.error);\n            });\n        });\n    }\n}\n\n// ðŸš€ Helper Function: Generate a Unique ID\nfunction generateUniqueId() {\n    return Math.random().toString(36).substring(2, 10);\n}\n","import MemoryProvider from './MemoryProvider.js';\nimport RestProvider from './RestProvider.js';\nimport IndexedDBProvider from './IndexedDbProvider.js';\n\nconst schemaRegistry = {};\n\nexport default class Resource {\n    constructor(name, options) {\n        this.name = name;\n        this.schema = options.schema || {};\n        this.providerType = options.provider || 'memory';\n\n        if (Object.keys(this.schema).length === 0) {\n            throw new Error(`Schema definition is required for resource: ${name}`);\n        }\n        \n        // console.log('Initializing provider with options:', options);\n        schemaRegistry[this.name] = this.schema; // Register the resource schema\n\n        this.provider = this._createProvider(this.providerType, options);\n        this.provider.bp = options.bp;\n    }\n\n    _createProvider(providerType, options) {\n        switch (providerType) {\n            case 'rest':\n                return new RestProvider(this.name, options);\n            case 'indexeddb':\n                return new IndexedDBProvider(this.name, options);\n            case 'memory':\n            default:\n                return new MemoryProvider(this.name);\n        }\n    }\n\n    create(owner, data) {\n        return this.provider.create(owner, data, this.schema);\n    }\n\n    get(owner, id) {\n        return this.provider.get(owner, id);\n    }\n\n    update(owner, id, data) {\n        return this.provider.update(owner, id, data, this.schema);\n    }\n\n    remove(owner, id) {\n        return this.provider.remove(owner, id);\n    }\n\n    list(owner) {\n        return this.provider.list(owner);\n    }\n\n    search(owner, query, urlparams) {\n        return this.provider.search(owner, query, urlparams);\n    }\n    \n    all() {\n        return this.provider.all();\n    }\n\n    \n\n    async apiRequest(method, path, body = null) {\n        return this.provider.apiRequest(method, path, body);\n    }\n\n}\n","import transfer from \"./transfer.js\";\n\nexport default class Portfolio {\n    constructor(config = {}) {\n        this.resource = config.resource;\n        this.me = config.me || 'Guest';\n    }\n\n    async get() {\n        let result = await this.resource.list(this.me);\n        console.log('Portfoliorrrr', result);\n        return result;\n    }\n\n    async search (query = {}) {\n        console.log('portfolio search', this.me, query);\n        let result = await this.resource.search(this.me, query);\n        console.log('search result', result);\n        return result.results;\n    }\n\n}\n\nPortfolio.prototype.transfer = transfer;","export default async function transfer(parent, userTransaction) {\n    console.log('transfer asset', userTransaction)\n    // alert('sendCoin')\n    // Send the coin to a buddy\n\n    try {\n        let res = await this.resource.apiRequest('POST', `portfolio/${userTransaction.from}/${userTransaction.symbol}/transfer`, userTransaction);\n        console.log('transfering coins', userTransaction, res)\n        $('.coin-error').text('');\n\n        // trigger change event on the coin name dropdown to update the balance\n        $('#coin-send-name').trigger('change');\n        $('.coin-send-message').html(`Sent ${userTransaction.amount} ${userTransaction.symbol} to ${userTransaction.to}!`);\n        // $('.coin-send-message').text('Sent coin to buddy!');\n        return res;\n    } catch (err) {\n        // display error in UI\n        console.error('Error sending coin:', err);\n        $('.coin-error').text(err.message);\n    }\n\n}","export default class Transaction {\n    constructor(config = {}) {\n        this.resource = config.resource;\n        this.me = config.me || 'Guest';\n    }\n\n    async get() {\n        let result = await this.resource.list(this.me);\n        console.log('Portfoliorrrr', result);\n        return result;\n    }\n\n    async search (buddyname, query = {}, urlparams = {}) {\n        console.log('transactions search', buddyname, query, urlparams);\n        let result = await this.resource.search(buddyname, query, urlparams);\n        console.log('search result', result);\n        return result;\n    }\n\n}","export default async function render(parent) {\n    $(parent).html(this.html);\n\n    if (this.bp.me !== 'Marak') {\n        $('#portfolio-admin', parent).remove();\n        $('#portfolio-admin-button', parent).remove();\n    }\n\n    if (!this.bp.me || this.bp.me === 'Guest') {\n        $('.loggedOut', this.portfolioWindow.content).flexShow();\n        $('.loggedIn', this.portfolioWindow.content).flexHide();\n        return;\n    }\n\n    $('.loggedOut', this.portfolioWindow.content).flexHide();\n    $('.loggedIn', this.portfolioWindow.content).flexShow();\n\n    $('.loading-portfolio', this.portfolioWindow.content).show();\n    $('.loading-transactions', this.portfolioWindow.content).show();\n\n    // Fetch all coins and assets\n    const [allCoins, assetData] = await Promise.all([\n        this.coinResource.list(),\n        this.resource.search(this.bp.me, { owner: this.bp.me })\n    ]);\n\n    const coins = Object.fromEntries(allCoins.results.map(c => [c.symbol, c]));\n\n    this.portfolioData = {\n        coins,\n        assets: Object.fromEntries(assetData.results.map(asset => [asset.symbol, asset])),\n        initialInvestment: 0 // Placeholder, fetch if needed\n    };\n\n    renderPortfolioTable.call(this, parent);\n    renderCoinSelector.call(this, parent);\n    updatePortfolioSummary.call(this, parent);\n\n    await renderTransactions.call(this, 1, 8);\n\n    $('.prev-page', this.portfolioWindow.content).on('click', () => {\n        const currentPage = $('.pagination-controls').data('current-page');\n        if (currentPage > 1) renderTransactions.call(this, currentPage - 1);\n    });\n\n    $('.next-page', this.portfolioWindow.content).on('click', () => {\n        const currentPage = $('.pagination-controls').data('current-page');\n        renderTransactions.call(this, currentPage + 1);\n    });\n\n    $('.loading-portfolio', this.portfolioWindow.content).hide();\n    $('.loading-transactions', this.portfolioWindow.content).hide();\n\n    $('#coin-send-name', parent).trigger('change');\n}\n\n// Renders the entire coin table from this.portfolioData\nfunction renderPortfolioTable(parent) {\n    const table = $('.portfolio-entries', parent);\n    table.empty();\n\n    const { assets, coins } = this.portfolioData;\n    for (const symbol in assets) {\n        const asset = assets[symbol];\n        table.append(renderCoinRow(asset, coins[symbol]));\n    }\n}\n\n// Renders a single <tr> for a coin\nfunction renderCoinRow(asset, coinInfo = {}) {\n    const assetValue = (asset.price || 0) * asset.amount;\n\n    const formatted = {\n        value: formatCurrency(assetValue),\n        price: formatCurrency(asset.price),\n        amount: asset.amount.toLocaleString('en-US'),\n        available: asset.available.toLocaleString('en-US'),\n        cost: asset.cost.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n    };\n\n    return $(`\n        <tr data-symbol=\"${asset.symbol}\">\n            <td>${asset.symbol}</td>\n            <td>${formatted.amount}</td>\n            <td>${formatted.available}</td>\n            <td>${formatted.price}</td>\n            <td>${formatted.value}</td>\n            <td>${formatted.cost}</td>\n        </tr>\n    `);\n}\n\n// Updates or inserts a single coin row and refreshes summary\nexport function updateCoinRow(symbol, newAsset) {\n    // console.log('Updating coin row for symbol:', symbol, 'with asset:', newAsset);\n    this.portfolioData.assets[symbol] = newAsset;\n    const coinInfo = this.portfolioData.coins[symbol];\n    const row = renderCoinRow(newAsset, coinInfo);\n    const existingRow = $(`.portfolio-entries tr[data-symbol=\"${symbol}\"]`);\n    if (existingRow.length) {\n        existingRow.replaceWith(row);\n    } else {\n        $('.portfolio-entries').append(row);\n    }\n    updatePortfolioSummary.call(this, this.portfolioWindow.content);\n}\n\n// Renders the dropdown for coin sending\nfunction renderCoinSelector(parent) {\n    const selector = $('#coin-send-name', parent);\n    selector.empty();\n\n    const { coins, assets } = this.portfolioData;\n    for (const symbol in assets) {\n        console.log('Rendering coin selector for symbol:', coins, symbol);\n        if (!coins[symbol]) continue; // Skip if coin data is missing\n        const coin = coins[symbol];\n        const selected = (symbol === this.context) ? 'selected' : '';\n        selector.append(`<option value=\"${symbol}\" ${selected}>${symbol} - ${coin.name}</option>`);\n    }\n}\n\n// Updates total value and profit/loss\nfunction updatePortfolioSummary(parent) {\n    const { assets, initialInvestment } = this.portfolioData;\n    let totalValue = 0;\n\n    for (const symbol in assets) {\n        const asset = assets[symbol];\n        totalValue += (asset.price || 0) * asset.amount;\n    }\n\n    const profitLoss = totalValue - initialInvestment;\n    $('.total-value', parent).html(totalValue.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));\n    $('.profit-loss', parent).html(profitLoss.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));\n}\n\n// Format currency value\nfunction formatCurrency(value) {\n    const num = parseFloat(value);\n    if (isNaN(num)) return '$0.00';\n    return '$' + num.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 8,\n    }).replace(/\\.?0+$/, '');\n}\n\n// Fetch and render paginated transactions\nasync function renderTransactions(page = 1, limit = 8) {\n    try {\n        $('.loading-transactions').show();\n        $('.transaction-entries').empty();\n\n        const { results, pagination } = await this.transaction.search(this.bp.me, {\n            sender: this.bp.me,\n            receiver: this.bp.me\n        }, { page, limit });\n\n        results.forEach(tx => {\n            const row = $(`\n                <tr>\n                    <td>${tx.sender}</td>\n                    <td>${tx.receiver}</td>\n                    <td>${tx.symbol}</td>\n                    <td>${tx.amount.toLocaleString('en-US')}</td>\n                    <td>${formatCurrency(tx.value)}</td>\n                    <td>${DateFormat.format.date(tx.timestamp, 'E MMMM dd, hh:mm:ss a')}</td>\n                </tr>\n            `);\n            $('.transaction-entries').append(row);\n        });\n\n        $('.page-info').text(`Page ${pagination.page} of ${pagination.totalPages}`);\n        $('.prev-page').prop('disabled', pagination.page <= 1);\n        $('.next-page').prop('disabled', pagination.page >= pagination.totalPages);\n        $('.pagination-controls').data('current-page', pagination.page);\n    } catch (error) {\n        console.error('Error fetching transactions:', error);\n        $('.coin-error').text('Failed to load transactions');\n    } finally {\n        $('.loading-transactions').hide();\n    }\n}\n","// stores assets / stocks that were purchased from portfolio\n// assets can be backed by BP, or the real world\n// portfolio can be used to track any assets, so its a portolio tracker\n// we will default to showing only buddypond based assets\n// TODO: add UI with piecharts\n// TODO: pull data from PORTFOLIO_DO, etc TABLE_PORTFOLIO, etc\n\n/* Portfolio.js - Marak Squires 2025 - BuddyPond */\n\nimport Resource from '../resource/lib/Resource.js';\nimport PortfolioClass from './lib/Portfolio.js';\nimport TransactionClass from './lib/Transaction.js';\nimport render from './lib/render.js';\nimport eventBind from './lib/eventBind.js';\nimport { updateCoinRow } from './lib/render.js';\n\nexport default class Portfolio {\n\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        return this;\n    }\n\n    async init() {\n        this.html = await this.bp.load('/v5/apps/based/portfolio/portfolio.html');\n        this.css = await this.bp.load('/v5/apps/based/portfolio/portfolio.css');\n\n        this.resource = new Resource(\"portfolio\", {\n            provider: 'rest',\n            apiEndpoint: buddypond.portfolioEndpoint || '/',\n            schema: {\n                symbol: { type: \"string\" },\n                owner: { type: \"string\" },\n                amount: { type: \"number\" },\n                price: { type: \"number\" },\n                cost: { type: \"number\" }\n            },\n            bp: this.bp\n        });\n\n        this.coinResource = new Resource(\"coin\", {\n            provider: 'rest',\n            apiEndpoint: buddypond.coinEndpoint || '/',\n            schema: {\n                name: { type: \"string\", required: true },\n                symbol: { type: \"string\", unique: true, required: true },\n                owner: { type: \"string\", required: true },\n                supply : { type: \"number\", required: true },\n            },\n            bp: this.bp\n        });\n\n        this.transactionResource = new Resource(\"transactions\", {\n            provider: 'rest',\n            apiEndpoint: buddypond.portfolioEndpoint || '/',\n            schema: {\n                id: { type: \"string\", key: true }, // Unique transaction ID\n                sender: { type: \"string\" },\n                receiver: { type: \"string\" },\n                symbol: { type: \"string\" },\n                amount: { type: \"number\" },\n                price: { type: \"number\" },\n                value: { type: \"number\" },\n                timestamp: { type: \"string\" } // ISO timestamp\n            },\n            bp: this.bp\n        });\n\n\n        this.portfolio = new PortfolioClass({ resource: this.resource, me: this.bp.me });\n        this.transaction = new TransactionClass({ resource: this.transactionResource, me: this.bp.me });\n\n    }\n\n    async close () {\n\n        // clear the refresh timer\n        this.portfolioWindow = null;\n\n    }\n\n    async open(options = {}) {\n        if (!this.portfolioWindow) {\n            this.portfolioWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'portfolio',\n                title: 'Portfolio',\n                icon: 'desktop/assets/images/icons/icon_portfolio_64.png',\n                x: 250,\n                y: 75,\n                width: 800,\n                height: 600,\n                minWidth: 200,\n                minHeight: 200,\n                className: 'portfolio-window-content',\n                parent: $('#desktop')[0],\n                // content: this.html,\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                    this.close();\n                }\n            });\n            // create a refresh timer\n            this.portfolioWindow.refreshTimer = setInterval(() => {\n                // this.render(this.portfolioWindow.content);\n            }, 2000); // every 5 seconds\n        }\n        this.render(this.portfolioWindow.content);\n\n        if (options.type === 'buddy') {\n            $('#coin-send-to').val(options.output);\n        }\n\n        this.eventBind(this.portfolioWindow.content);\n\n        console.log('focus the portfolioWindow');\n\n        // focus the window\n        this.portfolioWindow.focus();\n   \n        // if portfolio window is open and user logged out, this event will re-render the portfolio\n        // with the latest data / show the user portfolio\n        this.bp.on('auth::qtoken', 'render-portfolio', async(data) => {\n            // re-render the portfolio\n            if (this.portfolioWindow && this.portfolioWindow.content) {\n                await this.render(this.portfolioWindow.content);\n                await this.eventBind(this.portfolioWindow.content);\n                $('.loggedOut', this.portfolioWindow.content).flexHide();\n                $('.loggedIn', this.portfolioWindow.content).flexShow();\n            }\n        });\n\n        if (options.context && options.context !== 'default') {\n            this.tabs.showTab(options.context);\n        }\n\n    }\n\n}\n\nPortfolio.prototype.render = render;\nPortfolio.prototype.eventBind = eventBind;\nPortfolio.prototype.updateCoinRow = updateCoinRow;","export default function eventBind(parent) {\n\n    this.tabs = new this.bp.apps.ui.Tabs('.tabs-container', parent);\n\n    this.tabs.onTab((tabId) => {\n        $('.coin-error').text('');\n    });\n\n    $('.send-coin', parent).click(async () => {\n        // alert('send-coin clicked');\n        let sendTo = $('#coin-send-to').val();\n        let symbol = $('#coin-send-name').val();\n        let amount = $('#coin-send-amount').val();\n        console.log(`${sendTo} ${symbol} ${amount}`);\n        this.portfolio.transfer(parent, {\n            from: bp.me,\n            to: sendTo,\n            symbol: symbol,\n            amount: amount\n        });\n    });\n\n\n    $('#coin-send-name', parent).change(async () => {\n        // fetch users balance and display it\n        let currentCoin = $('#coin-send-name').val();\n        let coinBalance = $('#current-balance', parent);\n\n        console.log('currentCoin', currentCoin);\n        console.log('coinBalance', coinBalance);\n\n        const result = await this.resource.search(this.bp.me, {\n            owner: this.bp.me,\n            symbol: currentCoin\n        });\n\n        console.log('current result', result);\n        let asset = result.results[0];\n\n        if (!asset) {\n            console.error(this.bp.me + ' No asset found for current coin ' + currentCoin);\n            coinBalance.html('0');\n            return;\n        }\n\n        console.log('asset', asset);\n        let amount = asset.amount;\n\n        // update coinBalance\n        coinBalance.html(`${amount.toLocaleString('en-US')}`);\n    });\n\n    $('.user-portfolio', parent).on('click', async () => {\n        // this.tabs.navigateToTab('#user-portfolio');\n        // re-render the portfolio\n        await this.render(parent);\n        await this.eventBind(parent);\n        $('#user-portfolio').show();\n        // this.tabs.navigateToTab('#user-portfolio');\n    });\n\n    $('.trade-assets', parent).on('click', () => {\n        this.bp.open('orderbook');\n    });\n\n    $('.mint-coins', parent).on('click', () => {\n        this.bp.open('coin', { type: \"coin-mint\" });\n    });\n\n    $('.send-coins', parent).on('click', () => {\n        this.tabs.navigateToTab('#portfolio-transfer');\n        // this.bp.open('coin', {  type: \"coin-send\" });\n    });\n\n    $('.admin', parent).on('click', () => {\n        this.tabs.navigateToTab('#portfolio-admin');\n        // this.bp.open('coin', {  type: \"coin-send\" });\n    });\n\n    $('.user-transactions', parent).on('click', () => {\n        this.tabs.navigateToTab('#user-transactions');\n        // re-render the transactions\n    });\n\n    $('#portfolio-admin-button-submit', parent).on('click', async () => {\n        let buddyname = $('#portfolio-admin-user').val();\n        let symbol = $('#portfolio-admin-coin').val();\n        if (buddyname && symbol) {\n\n\n            try {\n                // delete portfolio for coin holding\n                let url = `portfolio/${buddyname}/${symbol}`;\n                console.log(\"admin url\", url, this.resource.apiRequest);\n                let res = await this.resource.apiRequest('DELETE', url);\n                console.log('res', res)\n\n            } catch (err) {\n                console.log(err)\n            }\n\n            try {\n                let resetTransactionsUrl = `transactions/reset/${buddyname}`;\n                console.log(\"resetTransactionsUrl url\", resetTransactionsUrl, this.resource.apiRequest);\n                let resetTransactionsRes = await this.resource.apiRequest('GET', resetTransactionsUrl);\n                console.log('resetTransactionsRes', resetTransactionsRes)\n\n            } catch (err) {\n                console.log(err);\n            }\n\n            // $('.coin-error').html(res)\n        }\n\n    });\n\n}"],"names":["memoryStore","MemoryProvider","constructor","resourceName","this","create","owner","data","schema","Object","keys","forEach","key","required","undefined","Error","unique","values","some","entry","type","newId","Math","random","toString","substring","newEntry","id","get","update","remove","success","search","query","filter","item","every","list","all","RestProvider","options","apiEndpoint","bp","apiRequest","method","path","body","urlparams","headers","JSON","stringify","qtokenid","me","url","URLSearchParams","response","fetch","ok","console","log","json","error","err","IndexedDbProvider","dbName","version","db","init","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","errorCode","_withStore","mode","callback","store","transaction","objectStore","add","put","delete","getAll","schemaRegistry","Resource","name","providerType","provider","length","_createProvider","IndexedDBProvider","Portfolio$1","config","resource","results","Portfolio","prototype","transfer","async","parent","userTransaction","res","from","symbol","$","text","trigger","html","amount","to","message","Transaction","buddyname","renderPortfolioTable","table","empty","assets","coins","portfolioData","asset","append","renderCoinRow","coinInfo","formatted","formatCurrency","price","toLocaleString","available","cost","style","currency","renderCoinSelector","selector","coin","selected","context","updatePortfolioSummary","initialInvestment","totalValue","profitLoss","value","num","parseFloat","isNaN","minimumFractionDigits","maximumFractionDigits","replace","renderTransactions","page","limit","show","pagination","sender","receiver","tx","row","DateFormat","format","date","timestamp","totalPages","prop","hide","load","css","buddypond","portfolioEndpoint","coinResource","coinEndpoint","supply","transactionResource","portfolio","PortfolioClass","TransactionClass","close","portfolioWindow","apps","ui","windowManager","createWindow","title","icon","x","y","width","height","minWidth","minHeight","className","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","refreshTimer","setInterval","render","content","val","output","eventBind","focus","on","flexHide","flexShow","tabs","showTab","allCoins","assetData","fromEntries","map","c","call","currentPage","Tabs","onTab","tabId","click","sendTo","change","currentCoin","coinBalance","navigateToTab","resetTransactionsUrl","resetTransactionsRes","updateCoinRow","newAsset","existingRow","replaceWith"],"mappings":"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"}