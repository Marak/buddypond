{"version":3,"file":"github-card.js","sources":["../../../../../../apps/based/card/cards/github/github-card.js"],"sourcesContent":["\n\nexport default async function applyData(el, data, cardClass) {\n    const $el = $(el);\n\n    $el.find('.card-url-url').text(data.url);\n    $el.find('.card-url-url').attr('href', data.url);\n    $el.find('.card-url-url').attr('target', '_blank');\n    $el.find('.card-github-file').text(data.filename);\n    $el.find('.card-github-repo').text(`${data.owner}/${data.repo}`);\n\n    // Append Prism.js for syntax highlighting\n    // TODO: vendor these deps\n    await cardClass.bp.appendScript(\"https://cdn.jsdelivr.net/npm/prismjs@1.23.0/prism.min.js\");\n    await cardClass.bp.appendCSS(\"https://cdn.jsdelivr.net/npm/prismjs@1.23.0/themes/prism-coy.css\");\n\n    $el.find('.card-github-header').click(() => {\n        // opens a new link to the github file\n        window.open(data.url, '_blank');\n    });\n\n    // Fetch and display GitHub snippet with expand/collapse functionality\n    fetchGitHubSnippet(data.url, $el);\n}\n\nasync function fetchGitHubSnippet(url, $el) {\n    try {\n        const apiUrl = url.replace(\"github.com\", \"raw.githubusercontent.com\").replace(\"/blob/\", \"/\");\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch\");\n\n        let code = await response.text();\n        const lines = code.split(\"\\n\");\n\n        // Initial snippet (first 10 lines)\n        let shortSnippet = lines.join(\"\\n\");\n        let fullSnippet = code;\n\n        const language = apiUrl.split('.').pop(); // Infer language from extension\n        const $codeBlock = $el.find(\"code\");\n\n        // Set initial short snippet\n        $codeBlock.text(shortSnippet);\n        $codeBlock.addClass(`language-${language}`);\n        Prism.highlightElement($codeBlock[0]);\n\n      \n    } catch (error) {\n        console.log(\"Error fetching GitHub snippet:\", error);\n        $el.find(\"code\").text(\"Error loading preview.\");\n    }\n}\n"],"names":["async","applyData","el","data","cardClass","$el","$","find","text","url","attr","filename","owner","repo","bp","appendScript","appendCSS","click","window","open","apiUrl","replace","response","fetch","ok","Error","code","shortSnippet","split","join","language","pop","$codeBlock","addClass","Prism","highlightElement","error","console","log","fetchGitHubSnippet"],"mappings":"AAEeA,eAAeC,EAAUC,EAAIC,EAAMC,GAC9C,MAAMC,EAAMC,EAAEJ,GAEdG,EAAIE,KAAK,iBAAiBC,KAAKL,EAAKM,KACpCJ,EAAIE,KAAK,iBAAiBG,KAAK,OAAQP,EAAKM,KAC5CJ,EAAIE,KAAK,iBAAiBG,KAAK,SAAU,UACzCL,EAAIE,KAAK,qBAAqBC,KAAKL,EAAKQ,UACxCN,EAAIE,KAAK,qBAAqBC,KAAK,GAAGL,EAAKS,SAAST,EAAKU,cAInDT,EAAUU,GAAGC,aAAa,kEAC1BX,EAAUU,GAAGE,UAAU,oEAE7BX,EAAIE,KAAK,uBAAuBU,OAAM,KAElCC,OAAOC,KAAKhB,EAAKM,IAAK,aAO9BT,eAAkCS,EAAKJ,GACnC,IACI,MAAMe,EAASX,EAAIY,QAAQ,aAAc,6BAA6BA,QAAQ,SAAU,KAClFC,QAAiBC,MAAMH,GAC7B,IAAKE,EAASE,GAAI,MAAM,IAAIC,MAAM,mBAElC,IAAIC,QAAaJ,EAASd,OAI1B,IAAImB,EAHUD,EAAKE,MAAM,MAGAC,KAAK,MAG9B,MAAMC,EAAWV,EAAOQ,MAAM,KAAKG,MAC7BC,EAAa3B,EAAIE,KAAK,QAG5ByB,EAAWxB,KAAKmB,GAChBK,EAAWC,SAAS,YAAYH,KAChCI,MAAMC,iBAAiBH,EAAW,GAGrC,CAAC,MAAOI,GACLC,QAAQC,IAAI,iCAAkCF,GAC9C/B,EAAIE,KAAK,QAAQC,KAAK,yBAC9B,CACA,CA7BI+B,CAAmBpC,EAAKM,IAAKJ,EACjC"}