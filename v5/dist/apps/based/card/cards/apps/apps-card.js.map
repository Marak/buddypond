{"version":3,"file":"apps-card.js","sources":["../../../../../../apps/based/card/cards/apps/apps-card.js"],"sourcesContent":["\nexport default function applyData(el, data, cardClass, parent) {\n\n  const apps = this.bp.apps.desktop.appList;\n  let commandSet = [];\n\n  // iterate through all the desktop.apps and index by .name property\n  Object.keys(apps).forEach(appName => {\n    const app = apps[appName];\n    app.name = appName; // Ensure app has a name property\n    commandSet.push(app);\n  });\n\n  const $el = $(el);\n  const appsCommands = $el.find('.card-apps-commands');\n\n  // sort commandSet by label or name\n  commandSet.sort((a, b) => {\n    const labelA = a.label || a.name;\n    const labelB = b.label || b.name;\n    return labelA.localeCompare(labelB);\n  });\n\n  // Add command elements\n  commandSet.forEach(app => {\n    let command = app.name;\n    const commandText = `${app.label || command}`;\n    const appsText = app.label;\n    const commandDiv = document.createElement('div');\n    commandDiv.className = 'card-apps-command';\n    commandDiv.innerHTML = `\n      <span class=\"card-apps-command-text\">${commandText}</span>\n    `;\n\n    // Add click handler for commands\n    commandDiv.addEventListener('click', () => {\n      // Stub action: Log command execution (replace with actual command execution logic)\n      // console.log(`Executing command: ${commandText}`);\n      // Optional: Trigger a visual feedback\n      commandDiv.classList.add('card-apps-clicked');\n      // console.log('binding command', command, app);\n      // TODO: run bs command with chatWindow as context?\n      // console.log('Opening app', command, 'with context', app.options?.context);\n      this.bp.open(app.app || command, {\n        context: parent.currentActiveContext || parent.context || app.options?.context,\n        output: parent.type\n      });\n      setTimeout(() => commandDiv.classList.remove('card-apps-clicked'), 200);\n    });\n    appsCommands.append(commandDiv);\n  });\n\n  // Add close button functionality\n  $el.find('.card-apps-close-btn').on('click', () => {\n    $el.hide(); // Hide the apps card (replace with your preferred close logic)\n  });\n\n  if (cardClass.bp && cardClass.bp.apps && cardClass.bp.apps.buddylist) {\n    cardClass.bp.apps.buddylist.scrollToBottom(parent.content);\n  }\n\n}"],"names":["applyData","el","data","cardClass","parent","apps","this","bp","desktop","appList","commandSet","Object","keys","forEach","appName","app","name","push","$el","$","appsCommands","find","sort","a","b","labelA","label","labelB","localeCompare","command","commandText","commandDiv","document","createElement","className","innerHTML","addEventListener","classList","add","open","context","currentActiveContext","options","output","type","setTimeout","remove","append","on","hide","buddylist","scrollToBottom","content"],"mappings":"AACe,SAASA,EAAUC,EAAIC,EAAMC,EAAWC,GAErD,MAAMC,EAAOC,KAAKC,GAAGF,KAAKG,QAAQC,QAClC,IAAIC,EAAa,GAGjBC,OAAOC,KAAKP,GAAMQ,SAAQC,IACxB,MAAMC,EAAMV,EAAKS,GACjBC,EAAIC,KAAOF,EACXJ,EAAWO,KAAKF,MAGlB,MAAMG,EAAMC,EAAElB,GACRmB,EAAeF,EAAIG,KAAK,uBAG9BX,EAAWY,MAAK,CAACC,EAAGC,KAClB,MAAMC,EAASF,EAAEG,OAASH,EAAEP,KACtBW,EAASH,EAAEE,OAASF,EAAER,KAC5B,OAAOS,EAAOG,cAAcD,MAI9BjB,EAAWG,SAAQE,IACjB,IAAIc,EAAUd,EAAIC,KAClB,MAAMc,EAAc,GAAGf,EAAIW,OAASG,IACnBd,EAAIW,MACrB,MAAMK,EAAaC,SAASC,cAAc,OAC1CF,EAAWG,UAAY,oBACvBH,EAAWI,UAAY,gDACkBL,iBAIzCC,EAAWK,iBAAiB,SAAS,KAInCL,EAAWM,UAAUC,IAAI,qBAIzBhC,KAAKC,GAAGgC,KAAKxB,EAAIA,KAAOc,EAAS,CAC/BW,QAASpC,EAAOqC,sBAAwBrC,EAAOoC,SAAWzB,EAAI2B,SAASF,QACvEG,OAAQvC,EAAOwC,OAEjBC,YAAW,IAAMd,EAAWM,UAAUS,OAAO,sBAAsB,QAErE1B,EAAa2B,OAAOhB,MAItBb,EAAIG,KAAK,wBAAwB2B,GAAG,SAAS,KAC3C9B,EAAI+B,UAGF9C,EAAUI,IAAMJ,EAAUI,GAAGF,MAAQF,EAAUI,GAAGF,KAAK6C,WACzD/C,EAAUI,GAAGF,KAAK6C,UAAUC,eAAe/C,EAAOgD,QAGtD"}