{"version":3,"file":"transfer-card.js","sources":["../../../../../../apps/based/card/cards/transfer/transfer-card.js"],"sourcesContent":["export default function applyData(el, data) {\n    const $el = $(el);\n  \n    console.log('incoming transfer card data', data);\n\n    // Ensure data exists and provide defaults\n    const safeData = {\n      from: data.from || 'Unknown',\n      amount: data.amount || '0',\n      symbol: data.symbol || 'N/A',\n      price: data.price || '0.00',\n      value: data.amount * data.price\n    };\n  \n    // Helper function to format currency with dynamic precision\n    function formatCurrency(value) {\n      // Convert to number, handle non-numeric inputs\n      const num = parseFloat(value);\n      if (isNaN(num)) return '$0.00';\n  \n      // Use toLocaleString for clean formatting, up to 8 decimals, removing trailing zeros\n      return (\n        '$' +\n        num.toLocaleString('en-US', {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 8,\n        }).replace(/\\.?0+$/, '')\n      );\n    }\n  \n    // Update card content\n    $el.find('.card-transfer-from').text(safeData.from);\n    $el.find('.card-transfer-amount').text(safeData.amount);\n    $el.find('.card-transfer-symbol').text(safeData.symbol);\n    $el.find('.card-transfer-price').text(formatCurrency(safeData.price));\n    $el.find('.card-transfer-value').text(formatCurrency(safeData.value));\n  \n    // Handle error if present\n    if (data.error) {\n      $el.find('.card-error').text(data.error).show();\n    } else {\n      $el.find('.card-error').hide();\n    }\n\n    // check if message.ctime is less than 10 seconds ago\n    const now = Date.now();\n    const messageCtime = new Date(data.message.ctime).getTime();\n    if (now - messageCtime < 10000) {\n      // updates local coin balance\n      this.bp.apps.buddylist.client.wsClient.send(JSON.stringify({\n          action: 'getCoinBalance',\n          buddyname: this.bp.me,\n          qtokenid: this.bp.qtokenid,\n      }));\n    }\n\n  }"],"names":["applyData","el","data","$el","$","console","log","safeData","from","amount","symbol","price","value","formatCurrency","num","parseFloat","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","find","text","error","show","hide","Date","now","message","ctime","getTime","this","bp","apps","buddylist","client","wsClient","send","JSON","stringify","action","buddyname","me","qtokenid"],"mappings":"AAAe,SAASA,EAAUC,EAAIC,GAClC,MAAMC,EAAMC,EAAEH,GAEdI,QAAQC,IAAI,8BAA+BJ,GAG3C,MAAMK,EAAW,CACfC,KAAMN,EAAKM,MAAQ,UACnBC,OAAQP,EAAKO,QAAU,IACvBC,OAAQR,EAAKQ,QAAU,MACvBC,MAAOT,EAAKS,OAAS,OACrBC,MAAOV,EAAKO,OAASP,EAAKS,OAI5B,SAASE,EAAeD,GAEtB,MAAME,EAAMC,WAAWH,GACvB,OAAII,MAAMF,GAAa,QAIrB,IACAA,EAAIG,eAAe,QAAS,CAC1BC,sBAAuB,EACvBC,sBAAuB,IACtBC,QAAQ,SAAU,GAE7B,CAGIjB,EAAIkB,KAAK,uBAAuBC,KAAKf,EAASC,MAC9CL,EAAIkB,KAAK,yBAAyBC,KAAKf,EAASE,QAChDN,EAAIkB,KAAK,yBAAyBC,KAAKf,EAASG,QAChDP,EAAIkB,KAAK,wBAAwBC,KAAKT,EAAeN,EAASI,QAC9DR,EAAIkB,KAAK,wBAAwBC,KAAKT,EAAeN,EAASK,QAG1DV,EAAKqB,MACPpB,EAAIkB,KAAK,eAAeC,KAAKpB,EAAKqB,OAAOC,OAEzCrB,EAAIkB,KAAK,eAAeI,OAIdC,KAAKC,MACI,IAAID,KAAKxB,EAAK0B,QAAQC,OAAOC,UACzB,KAEvBC,KAAKC,GAAGC,KAAKC,UAAUC,OAAOC,SAASC,KAAKC,KAAKC,UAAU,CACvDC,OAAQ,iBACRC,UAAWV,KAAKC,GAAGU,GACnBC,SAAUZ,KAAKC,GAAGW,WAI5B"}