async function e(e,t,n){await n.bp.appendScript("https://cdn.jsdelivr.net/npm/prismjs@1.23.0/prism.min.js"),await n.bp.appendCSS("https://cdn.jsdelivr.net/npm/prismjs@1.23.0/themes/prism-coy.css");let s=t.message.text;s=marked.parse(t.message.text);const r=s,a=new Date(t.message.ctime),i=(new Date-a)/1e3,o=$(e).find(".card-gpt-response");if(o.empty(),t.message.text="I have an AI-generated response:",i<30){const c=document.createElement("div");function m(e,t,n){if(e.nodeType===Node.TEXT_NODE){const s=e.textContent;let r=0;function a(){r<s.length?(t.append(s.charAt(r)),r++,setTimeout(a,33)):(t.closest("pre code")&&Prism.highlightElement(t.closest("pre code")),n())}a()}else if(e.nodeType===Node.ELEMENT_NODE){const i=document.createElement(e.tagName);Array.from(e.attributes).forEach((e=>{i.setAttribute(e.name,e.value)})),t.append(i);const o=Array.from(e.childNodes);let c=0;function p(){c<o.length?(m(o[c],i,p),c++):n()}p()}else n()}c.innerHTML=r;const p=Array.from(c.childNodes);let d=0;function l(){d<p.length&&(m(p[d],o[0],l),d++)}l()}else o.html(r),o.find("pre code").each((function(){Prism.highlightElement(this)}));return t}export{e as default};
//# sourceMappingURL=gpt-card.js.map
