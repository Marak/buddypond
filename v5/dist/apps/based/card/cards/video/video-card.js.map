{"version":3,"file":"video-card.js","sources":["../../../../../../apps/based/card/cards/video/video-card.js"],"sourcesContent":["export default function applyData(el, data) {\n    const $el = $(el);\n    const { url } = data || {};\n    console.log('Video card data', { url });\n\n    // replace the URL in the message text since the video card will handle it as embed\n    // this allows a message with a video URL to be sent without the URL showing up in the chat\n    data.message.text = data.message.text.replace(url, '');\n\n    // Show loading state\n    $el.find('.card-video-loading').show();\n    $el.find('.card-video-content, .card-video-error').addClass('card-video-hidden');\n\n    // Supported video MIME types\n    const validMimeTypes = ['video/mp4', 'video/webm', 'video/ogg', 'video/x-matroska'];\n\n    // Check URL with HEAD request\n    fetch(url, { method: 'HEAD' })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(`HTTP ${response.status}`);\n            }\n            const contentType = response.headers.get('content-type')?.toLowerCase();\n            if (!validMimeTypes.some(type => contentType.includes(type))) {\n                throw new Error('Unsupported video format');\n            }\n            return url;\n        })\n        .then(videoUrl => {\n            // Set video source\n            const $video = $el.find('.card-video-player');\n            $video.attr('src', videoUrl);\n            // Show video\n            $el.find('.card-video-loading').hide();\n            $el.find('.card-video-content').removeClass('card-video-hidden');\n        })\n        .catch(error => {\n            console.error('Video card error:', error.message);\n            showError($el, error.message.includes('Unsupported') ? 'Unsupported video format' : 'Unable to load video');\n        });\n\n    // Helper to show error\n    function showError($el, message) {\n        $el.find('.card-video-loading').hide();\n        const $error = $el.find('.card-video-error');\n        $error.find('.card-video-error-message').text(message);\n        $error.removeClass('card-video-hidden');\n    }\n}"],"names":["applyData","el","data","$el","$","url","console","log","message","text","replace","find","show","addClass","validMimeTypes","fetch","method","then","response","ok","Error","status","contentType","headers","get","toLowerCase","some","type","includes","videoUrl","attr","hide","removeClass","catch","error","$error","showError"],"mappings":"AAAe,SAASA,EAAUC,EAAIC,GAClC,MAAMC,EAAMC,EAAEH,IACRI,IAAEA,GAAQH,GAAQ,CAAE,EAC1BI,QAAQC,IAAI,kBAAmB,CAAEF,QAIjCH,EAAKM,QAAQC,KAAOP,EAAKM,QAAQC,KAAKC,QAAQL,EAAK,IAGnDF,EAAIQ,KAAK,uBAAuBC,OAChCT,EAAIQ,KAAK,0CAA0CE,SAAS,qBAG5D,MAAMC,EAAiB,CAAC,YAAa,aAAc,YAAa,oBAGhEC,MAAMV,EAAK,CAAEW,OAAQ,SAChBC,MAAKC,IACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,QAAQF,EAASG,UAErC,MAAMC,EAAcJ,EAASK,QAAQC,IAAI,iBAAiBC,cAC1D,IAAKX,EAAeY,MAAKC,GAAQL,EAAYM,SAASD,KAClD,MAAM,IAAIP,MAAM,4BAEpB,OAAOf,KAEVY,MAAKY,IAEa1B,EAAIQ,KAAK,sBACjBmB,KAAK,MAAOD,GAEnB1B,EAAIQ,KAAK,uBAAuBoB,OAChC5B,EAAIQ,KAAK,uBAAuBqB,YAAY,wBAE/CC,OAAMC,IACH5B,QAAQ4B,MAAM,oBAAqBA,EAAM1B,SAKjD,SAAmBL,EAAKK,GACpBL,EAAIQ,KAAK,uBAAuBoB,OAChC,MAAMI,EAAShC,EAAIQ,KAAK,qBACxBwB,EAAOxB,KAAK,6BAA6BF,KAAKD,GAC9C2B,EAAOH,YAAY,oBAC3B,CATYI,CAAUjC,EAAK+B,EAAM1B,QAAQoB,SAAS,eAAiB,2BAA6B,0BAUhG"}