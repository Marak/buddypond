{"version":3,"file":"stripe.js","sources":["../../../apps/based/stripe/stripe.js"],"sourcesContent":["// import Stripe from 'stripe';\n\n// Assuming you are using Stripe.js, not the NPM package directly in a client-side file\nconst testKey = 'pk_test_51QZ5PDGHoMV8ArsVFfwyeXad8bjroyqlXk5FRknbzny0dlW2VlZzOPFEbuuLAfJKADctxK6rj7ARV8oRANWRkjNS00mNRDgfdt';\n\n// leaked? oops, regen? is test env anyway, will refresh\nconst liveKey = 'pk_live_51QZ5PDGHoMV8ArsVWCUAseF6dAqUyabaC45CNJ6UoqLAbVNJp1kAC7AWUhE8HfeiJyBrF6gc139BNvV38muOhEzo00emukO4jA';\n\nexport default class StripeClass {\n    constructor(bp) {\n        // this.isLive = isLive;\n        this.bp = bp;\n        this.handleFetchResult = this.handleFetchResult.bind(this);\n    }\n\n    handleFetchResult(result) {\n        if (!result.ok) {\n            return result.json().then(json => {\n                if (json.error && json.error.message) {\n                    throw new Error(result.url + ' ' + result.status + ' ' + json.error.message);\n                }\n            }).catch(err => {\n                this.showErrorMessage(err);\n                throw err;\n            });\n        }\n        return result.json();\n    }\n\n    showErrorMessage(message) {\n        console.log('Error:', message);\n        const errorEl = document.getElementById(\"error-message\");\n        if (errorEl) {\n            errorEl.textContent = message;\n            errorEl.style.display = \"block\";\n        }\n    }\n\n    createCheckoutSession(priceId) {\n        // TODO: replace with cf worker\n        return fetch(\"http://192.168.200.59/create-checkout-session\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({ priceId })\n        }).then(this.handleFetchResult);\n    }\n\n    setupPlanButton(parent, buttonId, priceId) {\n        let button = document.createElement(\"button\");\n        button.id = buttonId;\n        button.textContent = \"Subscribe\";\n        console.log('button', button)\n        // document.body.appendChild(button);\n        parent.appendChild(button);\n        console.log(buttonId, priceId);\n        button.addEventListener(\"click\", evt => {\n            this.createCheckoutSession(priceId).then(data => {\n                console.log('tttt', this.stripe)\n                this.stripe.redirectToCheckout({ sessionId: data.sessionId }).catch(err => {\n                    console.error(\"Redirect to checkout failed: \", err);\n                });\n            }).catch(err => {\n                console.error(\"Failed to create session: \", err);\n            });\n        });\n    }\n\n    async init() {\n        // Setup Stripe.js\n\n        await this.bp.importModule('https://js.stripe.com/v3/', {}, false);\n\n        this.stripe = Stripe(this.isLive ? liveKey : testKey);\n\n        let json = {\n            publishableKey: testKey, // Choose based on environment\n            developerPrice: 'price_1QZ61XGHoMV8ArsVVW1b6WB0', // Replace with actual price ID\n            businessPrice: 'price_456', // Replace with actual price ID\n            enterprisePrice: 'price_789' // Replace with actual price ID\n        };\n\n        let parent = $('#buddybux').get(0);\n        this.setupPlanButton(parent, \"developer-plan-btn\", json.developerPrice);\n        this.setupPlanButton(parent, \"business-plan-btn\", json.businessPrice);\n        this.setupPlanButton(parent, \"enterprise-plan-btn\", json.enterprisePrice);\n\n    }\n}\n"],"names":["StripeClass","constructor","bp","this","handleFetchResult","bind","result","ok","json","then","error","message","Error","url","status","catch","err","showErrorMessage","console","log","errorEl","document","getElementById","textContent","style","display","createCheckoutSession","priceId","fetch","method","headers","body","JSON","stringify","setupPlanButton","parent","buttonId","button","createElement","id","appendChild","addEventListener","evt","data","stripe","redirectToCheckout","sessionId","init","importModule","Stripe","isLive","$","get"],"mappings":"AAQe,MAAMA,EACjB,WAAAC,CAAYC,GAERC,KAAKD,GAAKA,EACVC,KAAKC,kBAAoBD,KAAKC,kBAAkBC,KAAKF,KAC7D,CAEI,iBAAAC,CAAkBE,GACd,OAAKA,EAAOC,GAULD,EAAOE,OATHF,EAAOE,OAAOC,MAAKD,IACtB,GAAIA,EAAKE,OAASF,EAAKE,MAAMC,QACzB,MAAM,IAAIC,MAAMN,EAAOO,IAAM,IAAMP,EAAOQ,OAAS,IAAMN,EAAKE,MAAMC,YAEzEI,OAAMC,IAEL,MADAb,KAAKc,iBAAiBD,GAChBA,IAItB,CAEI,gBAAAC,CAAiBN,GACbO,QAAQC,IAAI,SAAUR,GACtB,MAAMS,EAAUC,SAASC,eAAe,iBACpCF,IACAA,EAAQG,YAAcZ,EACtBS,EAAQI,MAAMC,QAAU,QAEpC,CAEI,qBAAAC,CAAsBC,GAElB,OAAOC,MAAM,gDAAiD,CAC1DC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEN,cACxBlB,KAAKN,KAAKC,kBACrB,CAEI,eAAA8B,CAAgBC,EAAQC,EAAUT,GAC9B,IAAIU,EAAShB,SAASiB,cAAc,UACpCD,EAAOE,GAAKH,EACZC,EAAOd,YAAc,YACrBL,QAAQC,IAAI,SAAUkB,GAEtBF,EAAOK,YAAYH,GACnBnB,QAAQC,IAAIiB,EAAUT,GACtBU,EAAOI,iBAAiB,SAASC,IAC7BvC,KAAKuB,sBAAsBC,GAASlB,MAAKkC,IACrCzB,QAAQC,IAAI,OAAQhB,KAAKyC,QACzBzC,KAAKyC,OAAOC,mBAAmB,CAAEC,UAAWH,EAAKG,YAAa/B,OAAMC,IAChEE,QAAQR,MAAM,gCAAiCM,SAEpDD,OAAMC,IACLE,QAAQR,MAAM,6BAA8BM,QAG5D,CAEI,UAAM+B,SAGI5C,KAAKD,GAAG8C,aAAa,4BAA6B,CAAA,GAAI,GAE5D7C,KAAKyC,OAASK,OAAO9C,KAAK+C,OApElB,8GAHA,+GAyER,IAAI1C,EAEgB,iCAFhBA,EAGe,YAHfA,EAIiB,YAGjB2B,EAASgB,EAAE,aAAaC,IAAI,GAChCjD,KAAK+B,gBAAgBC,EAAQ,qBAAsB3B,GACnDL,KAAK+B,gBAAgBC,EAAQ,oBAAqB3B,GAClDL,KAAK+B,gBAAgBC,EAAQ,sBAAuB3B,EAE5D"}