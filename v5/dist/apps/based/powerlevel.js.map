{"version":3,"file":"powerlevel.js","sources":["../../../apps/based/powerlevel/PowerlevelPopup.js","../../../apps/based/powerlevel/powerlevel.js"],"sourcesContent":["export default class PowerLevelPopup {\n    constructor(container = document.body) {\n      this.container = container;\n    }\n  \n    show(level, options = {}) {\n      // Create the main effect div and apply styles\n      this.effectDiv = document.createElement('div');\n      this.effectDiv.className = 'powerlevel-effect';\n  \n      // Set the content of the effect\n      this.effectDiv.innerHTML = `\n        <div>\n          <h1>Congratulations</h1>\n          <h2>Your Power Level has increased!</h2>\n          <h1>Level ${level}</h1>\n        </div>\n      `;\n  \n      // Append the effect to the specified container and play sound\n      this.container.appendChild(this.effectDiv);\n      // bp.play('sound.wav'); // Ensure 'bp.play' is defined or handle it accordingly\n  \n      // Remove the effect after a certain duration\n      setTimeout(() => this.remove(), options.duration || 5000);\n    }\n  \n    remove() {\n      if (this.effectDiv && this.container.contains(this.effectDiv)) {\n        this.container.removeChild(this.effectDiv);\n      }\n    }\n  }","import PowerlevelPopup from './PowerlevelPopup.js';\nexport default class PowerLevels {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n    }\n\n    async init() {\n        /*\n        this.bp.on('powerlevel', 'powerlevel', (powerlevel) => {\n            this.bp.log('powerlevel', powerlevel);\n        });\n        e\n        */\n        await this.bp.load('/v5/apps/based/powerlevel/powerlevel.css');\n        this.bp.apps.buddyscript.addCommand('powerlevel', (args) => {\n            console.log('powerlevel args', args);\n            let context = args[0];\n            let _powerlevel = Number(args[1]); // TODO: check is number not nan\n            this.bp.apps.client.api.setPowerLevel(context, _powerlevel);\n\n        });\n\n        this.popup = new PowerlevelPopup();\n\n    }\n\n    setPower(context, powerlevel) {\n        // will call the server and set the power level\n        this.bp.log('setPowerLevel', powerlevel);\n        this.bp.emit('powerlevel', powerlevel);\n    }\n\n    getPower(context) {\n        // will get the current power level from the server\n        // should be attached the userProfile actually\n        // so maybe not really needed?..hrmm\n        return this.bp.get('powerlevel');\n    }\n\n}"],"names":["PowerLevelPopup","constructor","container","document","body","this","show","level","options","effectDiv","createElement","className","innerHTML","appendChild","setTimeout","remove","duration","contains","removeChild","PowerLevels","bp","init","load","apps","buddyscript","addCommand","args","console","log","context","_powerlevel","Number","client","api","setPowerLevel","popup","PowerlevelPopup","setPower","powerlevel","emit","getPower","get"],"mappings":"AAAe,MAAMA,EACjB,WAAAC,CAAYC,EAAYC,SAASC,MAC/BC,KAAKH,UAAYA,CACvB,CAEI,IAAAI,CAAKC,EAAOC,EAAU,IAEpBH,KAAKI,UAAYN,SAASO,cAAc,OACxCL,KAAKI,UAAUE,UAAY,oBAG3BN,KAAKI,UAAUG,UAAY,gIAIXL,iCAKhBF,KAAKH,UAAUW,YAAYR,KAAKI,WAIhCK,YAAW,IAAMT,KAAKU,UAAUP,EAAQQ,UAAY,IAC1D,CAEI,MAAAD,GACMV,KAAKI,WAAaJ,KAAKH,UAAUe,SAASZ,KAAKI,YACjDJ,KAAKH,UAAUgB,YAAYb,KAAKI,UAExC,EC9Be,MAAMU,EACjB,WAAAlB,CAAYmB,EAAIZ,EAAU,IACtBH,KAAKe,GAAKA,EACVf,KAAKG,QAAUA,CACvB,CAEI,UAAMa,SAOIhB,KAAKe,GAAGE,KAAK,4CACnBjB,KAAKe,GAAGG,KAAKC,YAAYC,WAAW,cAAeC,IAC/CC,QAAQC,IAAI,kBAAmBF,GAC/B,IAAIG,EAAUH,EAAK,GACfI,EAAcC,OAAOL,EAAK,IAC9BrB,KAAKe,GAAGG,KAAKS,OAAOC,IAAIC,cAAcL,EAASC,MAInDzB,KAAK8B,MAAQ,IAAIC,CAEzB,CAEI,QAAAC,CAASR,EAASS,GAEdjC,KAAKe,GAAGQ,IAAI,gBAAiBU,GAC7BjC,KAAKe,GAAGmB,KAAK,aAAcD,EACnC,CAEI,QAAAE,CAASX,GAIL,OAAOxB,KAAKe,GAAGqB,IAAI,aAC3B"}