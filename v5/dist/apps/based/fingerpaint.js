class e{constructor(e,i={}){return this.bp=e,this.options=i,this.isDrawing=!1,this.lastPos=null,this.isErasing=!1,this.brushColor="rgba(255,255,255,0.9)",this.brushSize=12,this.positionHistory=[],this.maxHistory=3,this}async init(){return await this.bp.appendScript("https://cdn.jsdelivr.net/npm/@mediapipe/hands"),await this.bp.appendScript("https://cdn.jsdelivr.net/npm/@mediapipe/camera_utils"),await this.bp.appendCSS("/v5/apps/based/fingerpaint/fingerpaint.css"),this.html=await this.bp.load("/v5/apps/based/fingerpaint/fingerpaint.html"),"loaded FingerPaint"}async open(){return this.win=this.bp.window(this.window()),this.startFingerPaint(),this.win.maximize(),this.win}window(){return{id:"fingerpaint",title:"FingerPaint",icon:"desktop/assets/images/icons/icon_paint_64.png",x:300,y:100,width:700,height:520,content:this.html,parent:$("#desktop")[0],resizable:!0,maximizable:!0,closable:!0}}isFingerExtended(e,i){const t=i-2;return e[i].y<e[t].y}isHandOpen(e){return this.isFingerExtended(e,8)&&this.isFingerExtended(e,12)}isHandClosed(e){return!this.isFingerExtended(e,8)&&!this.isFingerExtended(e,12)}smoothPosition(e){this.positionHistory.push(e),this.positionHistory.length>this.maxHistory&&this.positionHistory.shift();const i={x:0,y:0};return this.positionHistory.forEach((e=>{i.x+=e.x,i.y+=e.y})),i.x/=this.positionHistory.length,i.y/=this.positionHistory.length,i}async startFingerPaint(){const e=document.getElementById("video"),i=document.getElementById("canvas"),t=i.getContext("2d"),s=document.getElementById("status"),n=document.getElementById("overlayCanvas"),r=n.getContext("2d");document.addEventListener("keydown",(e=>{switch(e.key.toLowerCase()){case"r":this.brushColor="rgba(255,0,0,0.9)",s.innerText="üñåÔ∏è Red Brush | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear";break;case"b":this.brushColor="rgba(0,0,255,0.9)",s.innerText="üñåÔ∏è Blue Brush | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear";break;case"g":this.brushColor="rgba(0,255,0,0.9)",s.innerText="üñåÔ∏è Green Brush | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear";break;case"+":this.brushSize=Math.min(this.brushSize+2,30),s.innerText=`üñåÔ∏è Brush Size: ${this.brushSize}px | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear`;break;case"-":this.brushSize=Math.max(this.brushSize-2,4),s.innerText=`üñåÔ∏è Brush Size: ${this.brushSize}px | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear`;break;case"c":t.clearRect(0,0,i.width,i.height),s.innerText="üñåÔ∏è Canvas Cleared | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear"}}));const a=await navigator.mediaDevices.getUserMedia({video:!0});e.srcObject=a,await new Promise((i=>e.onloadeddata=i)),e.play();const h=new Hands({locateFile:e=>`https://cdn.jsdelivr.net/npm/@mediapipe/hands/${e}`});h.setOptions({maxNumHands:1,modelComplexity:1,minDetectionConfidence:.7,minTrackingConfidence:.7,selfieMode:!0});new Camera(e,{onFrame:async()=>await h.send({image:e}),width:640,height:480}).start(),h.onResults((e=>{if(r.clearRect(0,0,n.width,n.height),!e.multiHandLandmarks||0===e.multiHandLandmarks.length)return this.lastPos=null,this.positionHistory=[],void(s.innerText="üñåÔ∏è No hand detected | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear");const a=e.multiHandLandmarks[0],h=a[8];let l=h.x*i.width,o=h.y*i.height;const d=this.smoothPosition({x:l,y:o});l=d.x,o=d.y,this.isErasing=[8,12,16,20].every((e=>this.isFingerExtended(a,e)));const g=this.isHandOpen(a),u=this.isHandClosed(a);t.beginPath(),t.arc(l,o,this.isErasing?1.5*this.brushSize:this.brushSize/2,0,2*Math.PI),u?(r.beginPath(),r.arc(l,o,this.brushSize/2,0,2*Math.PI),r.fillStyle="transparent",r.strokeStyle="rgba(128,128,128,0.5)",r.lineWidth=2,r.stroke(),s.innerText="üñåÔ∏è Closed fist - not drawing | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear"):this.isErasing?(t.fillStyle="rgb(0,0,0)",t.fill(),s.innerText=`üñåÔ∏è Erasing (Size: ${3*this.brushSize}px) | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear`):(t.fillStyle=this.brushColor,t.fill(),s.innerText="üñåÔ∏è Drawing | R: Red, B: Blue, G: Green, +: Bigger, -: Smaller, C: Clear"),t.strokeStyle=this.isErasing?"black":this.brushColor,t.lineWidth=this.isErasing?3*this.brushSize:this.brushSize,t.lineJoin="round",t.lineCap="round",g&&!this.isErasing&&this.lastPos&&(t.beginPath(),t.moveTo(this.lastPos.x,this.lastPos.y),t.lineTo(l,o),t.stroke()),this.lastPos=u?null:{x:l,y:o}}))}}export{e as default};
//# sourceMappingURL=fingerpaint.js.map
