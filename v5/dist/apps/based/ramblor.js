let e=class{constructor(e={}){this.algo=e.algo||"default",this.history=[],this.userSeed=[],this.systemSeed=Math.floor(Math.random()*Number.MAX_SAFE_INTEGER)}seed(...e){this.userSeed=e.flat().map((e=>e.toString()))}roll(e,r){if("number"!=typeof e||"number"!=typeof r)throw new Error("Min and max must be numbers");if(e>r)throw new Error("Min cannot be greater than max");const s=this.userSeed.join("|")+"|"+this.systemSeed,t=this.simpleHash(s),l=e+Math.abs(t)%(r-e+1),a={generation:this.history.length+1,min:e,max:r,value:l,userSeeds:this.userSeed.slice(),systemSeed:this.systemSeed};return this.history.push(a),a}toss(){const e=this.roll(0,1);return{...e,label:1===e.value?"heads":"tails",value:e.value}}pick(e){if(!Array.isArray(e)||0===e.length)throw new Error("Pick requires a non-empty array");const r=this.roll(0,e.length-1);return{...r,item:e[r.value],index:r.value}}getHistory(e=null){if(null===e)return this.history;if(e<0){const r=this.history.length+e;return r>=0?this.history[r]:null}return this.history[e]}prove(e){if(!e||"object"!=typeof e)return!1;const r=e.userSeeds.join("|")+"|"+e.systemSeed,s=this.simpleHash(r),t=Math.abs(s),l=e.max-e.min+1;console.log("proving roll",e,"positiveValue",t,"range",l);const a=e.min+t%l;console.log("expectedResult",a,"actualResult",e.value);let o=a===e.value;return console.log("result",o),o}simpleHash(e){let r=0;for(let s=0;s<e.length;s++){r=(r<<5)-r+e.charCodeAt(s)|0}return r}};class r{constructor(r,s={}){return this.bp=r,this.options=s,this.ramblor=new e,this}async init(){return this.bp.log("Hello from Ramblor"),this.html=await this.bp.load("/v5/apps/based/ramblor/ramblor.html"),await this.bp.appendCSS("/v5/apps/based/ramblor/ramblor.css"),"loaded Ramblor"}async open(e={}){if(!this.ramblorWindow){this.ramblorWindow=this.bp.apps.ui.windowManager.createWindow({id:"ramblor",title:"Ramblor",x:50,y:100,width:400,height:460,parent:$("#desktop")[0],onClose:()=>{this.ramblorWindow=null},content:this.html,resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1});const e=$(this.ramblorWindow.content),r=e.find(".ramblor-verify-form"),s=e.find(".ramblor-result-text");r.on("submit",(e=>{e.preventDefault();const t={generation:parseInt(r.find("#ramblor-gen").val(),10),min:parseInt(r.find("#ramblor-min").val(),10),max:parseInt(r.find("#ramblor-max").val(),10),value:parseInt(r.find("#ramblor-value").val(),10),userSeeds:JSON.parse(r.find("#ramblor-user-seeds").val()||"[]"),systemSeed:parseInt(r.find("#ramblor-system-seed").val(),10)},l=this.ramblor.prove(t);s.text(l?"Roll is valid!":"Roll is invalid.").css("color",l?"#20C997":"#DC3545")})),r.find("input").on("input",(()=>{const e={generation:parseInt(r.find("#ramblor-gen").val(),10),min:parseInt(r.find("#ramblor-min").val(),10),max:parseInt(r.find("#ramblor-max").val(),10),value:parseInt(r.find("#ramblor-value").val(),10),userSeeds:JSON.parse(r.find("#ramblor-user-seeds").val()||"[]"),systemSeed:parseInt(r.find("#ramblor-system-seed").val(),10)};console.log("proving rollData:",e);const t=this.ramblor.prove(e);s.text(t?"Roll is valid!":"Roll is invalid.").css("color",t?"#20C997":"#DC3545")}))}const r=$(this.ramblorWindow.content);r.find(".ramblor-verify-form");const s=r.find(".ramblor-result-text");console.log("Opening Ramblor with options:",e);const t=e.roll||{};if(console.log("Roll data:",t),t.generation){r.find("#ramblor-gen").val(t.generation),r.find("#ramblor-min").val(t.min),r.find("#ramblor-max").val(t.max),r.find("#ramblor-value").val(t.value),r.find("#ramblor-user-seeds").val(JSON.stringify(t.userSeeds||[])),r.find("#ramblor-system-seed").val(t.systemSeed);const e=this.ramblor.prove(t);s.text(e?"Roll is valid!":"Roll is invalid.").css("color",e?"#20C997":"#DC3545")}return this.ramblorWindow}}export{r as default};
//# sourceMappingURL=ramblor.js.map
