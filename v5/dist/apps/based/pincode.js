class s{constructor(s,t={}){this.bp=s,this.options=t}async init(){return this.html=await this.bp.load("/v5/apps/based/pincode/pincode.html"),await this.bp.load("/v5/apps/based/pincode/pincode.css"),"loaded password dialog"}async open(){if(this.opened)return;this.opened=!0,this.$container=$("<div>").html(this.html),$(document.body).append(this.$container),$(".password-form",this.$container);const s=$(".email-input",this.$container),t=$(".password-main",this.$container),a=$(".password-confirm",this.$container),o=$(".form-status",this.$container),i=$(".password-overlay",this.$container),r={email:$(".email-error",this.$container),password:$(".password-error",this.$container),confirm:$(".confirm-error",this.$container)},e=this.bp.apps?.buddylist?.data?.profileState?.email;e&&s.val(e),$(".save-btn",this.$container).on("click",(async()=>{r.email.text(""),r.password.text(""),r.confirm.text(""),o.text(""),t.removeClass("error"),a.removeClass("error");const n=s.val().trim(),d=t.val().trim(),c=a.val().trim();if(!d)return r.password.text("Password is required."),void t.addClass("error");if(c!==d)return r.confirm.text("Passwords do not match."),void a.addClass("error");try{const s=await buddypond.updateAccount({buddyname:this.bp.me,password:d,email:n||void 0});console.log("Password set successfully",s),i.hide(),e&&(this.bp.apps.buddylist.data.profileState.email=n)}catch(s){console.error("Failed to save password:",s),o.text("Failed to update account. Please try again.")}})),$(".cancel-btn",this.$container).on("click",(()=>{i.hide()})),window.showPasswordDialog=()=>{i.show(),s.val().trim()?t.focus():s.focus()},showPasswordDialog()}}export{s as default};
//# sourceMappingURL=pincode.js.map
