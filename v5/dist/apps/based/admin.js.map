{"version":3,"file":"admin.js","sources":["../../../apps/based/admin/lib/commands/recentLogins.js","../../../apps/based/admin/lib/commands/userByIP.js","../../../apps/based/admin/lib/commands/buddyProfile.js","../../../apps/based/admin/lib/commands/banList.js","../../../apps/based/admin/lib/commands/banBuddy.js","../../../apps/based/admin/lib/commands/unbanBuddy.js","../../../apps/based/admin/lib/commands/destroyBuddy.js","../../../apps/based/admin/lib/commands/resetPassword.js","../../../apps/based/admin/lib/commands/addAdmin.js","../../../apps/based/admin/lib/commands/listAdmins.js","../../../apps/based/admin/lib/commands/firewall/listRules.js","../../../apps/based/admin/lib/commands/firewall/addRule.js","../../../apps/based/admin/lib/client.js","../../../apps/based/admin/admin.js","../../../apps/based/admin/lib/render.js","../../../apps/based/admin/lib/eventBind.js"],"sourcesContent":["\n// Populate recent logins table\nexport default async function recentLogins() {\n\n    let recentLogins = [\n        { username: 'alice', ip: '192.168.1.1', time: '2025-05-11 10:00:00' },\n        { username: 'bob', ip: '192.168.1.2', time: '2025-05-11 09:30:00' },\n    ];\n    \n    recentLogins = await this.client.apiRequest('/super-admin/recent-logins', 'GET');\n\n    const tbody = document.querySelector('#recent-logins-table tbody');\n    tbody.innerHTML = '';\n    recentLogins.forEach(login => {\n        const row = document.createElement('tr');\n        let knownIps = '';\n        let _knownIps = [];\n        try {\n            if (login.knownIps) {\n                _knownIps = JSON.parse(login.knownIps);\n            }\n        } catch (e) {\n            console.error('Error parsing knownIPs', e);\n        }\n        _knownIps.forEach(ip => {\n            knownIps += `<a href=\"https://iplocation.io/ip/${ip}\" target=\"_blank\">${ip}</a>`;\n        });\n        row.innerHTML = `\n            <td><span class=\"admin-username-link\" data-username=\"${login.buddyname}\">${login.buddyname}</span></td>\n            <td><a href=\"https://iplocation.io/ip/${login.lastKnownIP}\" target=\"_blank\">${login.lastKnownIP}</a></td>\n            <td>${login.utime}</td>\n            <td>${knownIps}</td>\n        `;\n        tbody.appendChild(row);\n    });\n}","// Populate user by IP table\nexport default async function userByIp(ip) {\n    console.log('userByIp', ip);\n    let userByIpData = {\n        '192.168.1.1': [{ username: 'alice', ip: '192.168.1.1' }],\n        '192.168.1.2': [{ username: 'bob', ip: '192.168.1.2' }],\n    };\n\n    userByIpData = await this.client.apiRequest(`/super-admin/user-by-ip?ip=${ip}`, 'GET');\n\n    console.log('userByIp userByIpData', userByIpData);\n    const tbody = document.querySelector('#user-by-ip-table tbody');\n    tbody.innerHTML = '';\n    userByIpData.forEach(user => {\n        const row = document.createElement('tr');\n        row.innerHTML = `\n            <td><span class=\"admin-username-link\" data-username=\"${user.buddyname}\">${user.buddyname}</span></td>\n            <td>${user.lastKnownIP}</td>\n            <td>${user.knownIps}</td>\n        `;\n        tbody.appendChild(row);\n    });\n}","// get buddy profile from database and durable object\nexport default async function buddyProfile(buddyname) {\n\n    let buddyProfiles = await this.client.apiRequest(`/super-admin/buddy-profile?buddyname=${buddyname}`, 'GET');\n    // console.log('buddyProfiles', buddyProfiles);\n\n    let databaseProfile = buddyProfiles.database;\n    let durableObjectProfile = buddyProfiles.durableObject;\n    let curses = buddyProfiles.curses;\n\n    const databaseProfileDisplay = document.querySelector('#profile-display-database');\n    if (databaseProfile) {\n        databaseProfileDisplay.textContent = JSON.stringify(databaseProfile, null, 2);\n    } else {\n        databaseProfileDisplay.textContent = 'No database profile found';\n    }\n\n    const durableObjectProfileDisplay = document.querySelector('#profile-display-durable');\n    if (durableObjectProfile) {\n        durableObjectProfileDisplay.textContent = JSON.stringify(durableObjectProfile, null, 2);\n    } else {\n        durableObjectProfileDisplay.textContent = 'No durable object cachedProfile found';\n    }\n\n    const cursesDisplay = document.querySelector('#profile-display-curses');\n    if (curses && curses.length > 0) {\n        cursesDisplay.textContent = JSON.stringify(curses, null, 2);\n    } else {\n        cursesDisplay.textContent = 'No curses found';\n    }\n\n}","\nexport default async function banList() {\n\n    let banList = await this.client.apiRequest('/super-admin/ban-list', 'GET');\n    console.log('banList', banList);\n\n    const tbody = document.querySelector('#admin-banlist tbody');\n    tbody.innerHTML = '';\n    banList.forEach(ban => {\n\n        let currentCurses = [];\n        if (ban.curses) {\n            currentCurses = JSON.parse(ban.curses);\n        }\n        // for each ban.curses create a unique button to insert in cell\n        let curseButtons = currentCurses.map(curse => {\n            console.log('cursecursecurse', curse);\n            let curseType = curse.type;\n            return `<button class=\"admin-remove-ban-link\" data-username=\"${ban.buddyname}\" data-curse=\"${curseType}\">${curseType}</button>`;\n        });\n        console.log('curseButtons', curseButtons);\n\n        const row = document.createElement('tr');\n        row.innerHTML = `\n            <td><span class=\"admin-username-link\" data-username=\"${ban.buddyname}\">${ban.buddyname}</span></td>\n            <td>${ban.ip}</td>\n            <td>${ban.curses}</td>\n            <td>${new Date(ban.utime).toLocaleString()}</td>\n            <td>${curseButtons.join(' ')}</td>\n        `;\n        // <td class=\"admin-remove-ban-link\" data-username=\"${ban.buddyname}\"><button>Unban</td>\n\n        tbody.appendChild(row);\n    });\n}","export default async function banBuddy(buddyname, banType, duration = 60) { // one hour default\n   let banResponse = await this.client.apiRequest('/super-admin/ban-buddy', 'POST', {\n      buddyname: buddyname,\n      type: banType,\n      duration: duration,\n      reason: 'Inappropriate behavior' // TODO: custom message\n   });\n\n   if (banResponse.error) {\n      $('.api-response', '#admin-buddyProfile').html(bankResponse.error);\n      console.error('Error banning buddy:', banResponse.error);\n      return;\n   }\n\n   $('.api-response', '#admin-buddyProfile').html(banResponse.message);\n   this.tabs.showTab('#admin-banlist');\n   console.log('banResponse', banResponse);\n}","export default async function unbanUserbanBuddy(buddyname, type) {\n    console.log('unbanUserbanBuddy', buddyname, type);\n    let unbanResponse = await this.client.apiRequest('/super-admin/unban-buddy', 'POST', {\n        buddyname: buddyname,\n        type: type\n    });\n    console.log('unbanResponse', unbanResponse);\n\n\n    if (unbanResponse.error) {\n        $('.api-response', '#admin-banlist').html(unbanResponse.error);\n        console.error('Error banning buddy:', unbanResponse.error);\n        return;\n     }\n  \n     $('.api-response', '#admin-banlist').html(unbanResponse.message);\n     this.tabs.showTab('#admin-banlist');\n     console.log('unbanResponse', unbanResponse);\n\n }","export default async function destroyBuddy(buddyname) {\n    console.log('destroyBuddy', buddyname);\n    let removeResponse = await this.client.apiRequest('/super-admin/destroy-buddy', 'POST', {\n        buddyname: buddyname\n    });\n    console.log('removeResponse', removeResponse);\n\n\n    if (removeResponse.error) {\n        //$('.api-response', '#admin-banlist').html(removeResponse.error);\n        console.error('Error banning buddy:', removeResponse.error);\n        return;\n     }\n  \n     // $('.api-response', '#admin-banlist').html(removeResponse.message);\n     this.tabs.showTab('#admin-buddyProfile');\n     console.log('removeResponse', removeResponse);\n\n }","export default async function resetPassword(buddyname, newPassword) {\n    console.log('resetPassword', buddyname);\n    let resetResponse = await this.client.apiRequest('/super-admin/reset-password', 'POST', {\n        buddyname: buddyname,\n        newPassword: newPassword || buddyname // use buddyname as default if no password provided\n    });\n    console.log('resetResponse', resetResponse);\n\n    if (resetResponse.error) {\n        //$('.api-response', '#admin-banlist').html(resetResponse.error);\n        console.error('Error resetting buddy password:', resetResponse.error);\n        return;\n     }\n  \n     // $('.api-response', '#admin-banlist').html(resetResponse.message);\n     this.tabs.showTab('#admin-buddyProfile');\n     console.log('resetResponse', resetResponse);\n\n }","export default async function addAdmin(buddyname, ip) { // one hour default\n    console.log('addAdmin called with buddyname:', buddyname, 'and ip:', ip);\n   let addAdminResponse = await this.client.apiRequest('/super-admin/add-admin', 'POST', {\n      buddyname: buddyname,\n        ip: ip\n   });\n\n   if (addAdminResponse.error) {\n      $('.api-response', '#admin-add-admin').html(addAdminResponse.error);\n      console.error('Error banning buddy:', addAdminResponse.error);\n      return;\n   }\n\n   $('.api-response', '#admin-add-admie').html(addAdminResponse.message);\n   this.tabs.showTab('#admin-add-admin');\n   console.log('addAdminResponse', addAdminResponse);\n}","export default async function listAdmins(buddyname, ip) { // one hour default\n    console.log('listAdmins called with buddyname:', buddyname, 'and ip:', ip);\n   let listAdminsResponse = await this.client.apiRequest('/super-admin/admin-list', 'GET');\n\n   if (listAdminsResponse.error) {\n      $('.api-response', '#admin-add-admin').html(listAdminsResponse.error);\n      console.error('Error banning buddy:', listAdminsResponse.error);\n      return;\n   }\n\n   $('.api-response', '#admin-add-admin').html(listAdminsResponse.message);\n   // this.tabs.showTab('#admin-add-admin');\n   console.log('listAdminsResponse', listAdminsResponse);\n\n   $('#admin-list-table').html(''); // Clear the table before populating it\n    if (listAdminsResponse && listAdminsResponse.length > 0) {\n        listAdminsResponse.forEach(admin => {\n            $('#admin-list-table').append(`\n                <tr>\n                    <td>${admin.buddyname}</td>\n                    <td>${admin.ip}</td>\n                    <td>${admin.role}</td>\n                    <td>${admin.ctime}</td>\n                    <td><button class=\"remove-admin\">Remove Admin</button></td>\n\n                </tr>\n            `);\n        });\n    }\n    else {\n        $('#admin-list-table').append(`\n            <tr>\n                <td colspan=\"3\">No admins found</td>\n            </tr>\n        `);\n    }\n    // this.tabs.showTab('#admin-add-admin');\n\n}","export default async function listRules() {\n    console.log('listRules called');\n\n    let result = await this.client.apiRequest('/super-admin/ip-ban', 'GET');\n    let rules = result.rules || [];\n    console.log('rules', rules);\n\n    let rulesTable = document.querySelector('#firewall-rules-table');\n\n    // Clear existing rows\n    rulesTable.innerHTML = '';\n\n    // Create header row\n    let header = rulesTable.insertRow();\n    ['#', 'IP Address', 'Created On', 'Actions'].forEach(text => {\n        let th = document.createElement('th');\n        th.textContent = text;\n        header.appendChild(th);\n    });\n\n    // Populate the table with rules\n    rules.forEach((rule, index) => {\n        let row = rulesTable.insertRow();\n\n        // Extract IP from expression (e.g. (ip.src eq 147.81.46.172))\n        let ipMatch = rule.filter?.expression?.match(/\\((ip\\.src eq )([^\\)]+)\\)/);\n        let ipAddress = ipMatch ? ipMatch[2] : 'Unknown';\n\n        row.insertCell(0).textContent = index + 1; // Rule number\n        row.insertCell(1).textContent = ipAddress; // Extracted IP\n        row.insertCell(2).textContent = new Date(rule.created_on).toLocaleString(); // Created On\n\n        // Actions cell with delete button\n        let actionCell = row.insertCell(3);\n        let deleteButton = document.createElement('button');\n        deleteButton.textContent = 'Delete';\n        deleteButton.className = 'delete-rule-button';\n        deleteButton.addEventListener('click', async () => {\n            if (confirm(`Are you sure you want to delete rule for IP ${ipAddress}?`)) {\n                await this.client.apiRequest(`/super-admin/ip-ban/${rule.id}`, 'DELETE');\n                listRules.call(this); // Refresh list after deletion\n            }\n        });\n        actionCell.appendChild(deleteButton);\n    });\n\n    if (rules.length === 0) {\n        let row = rulesTable.insertRow();\n        let cell = row.insertCell(0);\n        cell.colSpan = 4;\n        cell.textContent = 'No firewall rules found.';\n    }\n\n    console.log('Firewall rules listed:', rules);\n}\n","import listRules from \"./listRules.js\";\n\nexport default async function addRule(ip = \"147.81.46.172\") {\n    try {\n    await this.client.apiRequest('/super-admin/ip-ban', 'POST', {\n        ip: ip\n    });\n    //console.log('addRule result', result);\n\n    } catch (error) {\n        $('#admin-firewall .api-response').text('Error adding firewall rule: ' + error.message);\n        console.error('Error adding firewall rule:', error);\n        throw error; // Re-throw the error for further handling if needed\n    }\n    // console.log('addRule result', result);\n    listRules.call(this); // Refresh list after deletion\n}","const client = {};\n\nclient.endpoint = buddypond.adminEndpoint;\n\nclient.apiRequest = async (uri, method = 'GET', data = null) => {\n\n    const options = {\n        method: method\n    };\n\n    let headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"X-Me\": buddypond.me\n      };\n      if (buddypond.qtokenid) {\n        headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n      }\n\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    options.headers = headers;\n\n    let url = `${client.endpoint}${uri}`;\n    console.log('admin client making api request', url, options);\n \n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error in API request:', error);\n        throw error;\n    }\n\n};\n\nexport default client;","/* Admin.js - Marak Squires 2025 - BuddyPond */\nimport render from './lib/render.js';\nimport eventBind from './lib/eventBind.js';\nimport client from './lib/client.js';\n\nexport default class Admin {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.icon = 'desktop/assets/images/icons/icon_admin_64.png';\n        return this;\n    }\n\n    async init() {\n        this.html = await this.bp.load('/v5/apps/based/admin/admin.html');\n        await this.bp.load('/v5/apps/based/admin/admin.css');\n        return 'loaded admin window';\n    }\n    \n    async open (options = {}) {\n        if (!this.adminWindow) {\n            this.adminWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'admin',\n                title: 'Admin',\n                icon: this.icon,\n                x: 250,\n                y: 75,\n                width: 800,\n                height: 400,\n                minWidth: 200,\n                minHeight: 200,\n                parent: $('#desktop')[0],\n                // content: '<h1>Message of the Day</h1><p>Under construction</p>',\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                    this.adminWindow = null\n                }\n            });\n            this.adminWindow.loggedIn = true;\n        }\n\n        if (options.context === 'default') {\n            options.context = 'admin';\n        }\n\n        await this.render(this.adminWindow);\n        this.eventBind(this.adminWindow);\n        return this.adminWindow;\n    }\n\n resetAllPondCounts() {\n        // reset all ponds to 0 connections\n        let url = buddypond.messagesApiEndpoint + '/reset-hotpond-counts';\n        console.log('Resetting all pond counts at:', url);\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.bp.qtokenid}`, // Use Authorization header\n                'x-me': this.bp.me\n            }\n        }).then(response => {\n            if (response.ok) {\n                console.log('All pond counts reset successfully');\n            } else {\n                throw new Error('Failed to reset pond counts');\n            }\n        }).catch(error => {\n            console.error('Error resetting pond counts:', error);\n        });\n    }\n\n\n}\n\nAdmin.prototype.render = render;\nAdmin.prototype.eventBind = eventBind;\nAdmin.prototype.client = client;","export default function render (adminWindow) {\n    $(adminWindow.content).html(this.html);\n\n}","import recentLogins from './commands/recentLogins.js';\nimport userByIP from './commands/userByIP.js';\nimport buddyProfile from './commands/buddyProfile.js';\nimport banList from './commands/banList.js';\nimport banBuddy from './commands/banBuddy.js';\nimport unbanBuddy from './commands/unbanBuddy.js';\nimport destroyBuddy from './commands/destroyBuddy.js';\nimport resetPassword from './commands/resetPassword.js';\nimport addAdmin from './commands/addAdmin.js';\nimport listAdmins from './commands/listAdmins.js';\n\nimport listRules from './commands/firewall/listRules.js';\nimport addRule from './commands/firewall/addRule.js';\n\nexport default function eventBind(adminWindow) {\n    // Tab manager handles tab switching\n    this.tabs = new this.bp.apps.ui.Tabs('.tabs-container', adminWindow.content);\n\n    // onTab callback\n    this.tabs.onTab((tabId) => {\n        console.log('tabId', tabId);\n\n        switch (tabId) {\n            case '#admin-recent-logins':\n                console.log('admin-recent-logins');\n                recentLogins.call(this);\n                break;\n            case '#admin-userbyIP':\n                console.log('admin-userbyIP');\n                document.querySelector('#ip-input').value = '';\n                userByIP.call(this, '192.168.200.59');\n                break;\n            case '#admin-buddyProfile':\n                console.log('admin-buddyProfile');\n                let buddyname = document.querySelector('#profile-input').value.trim();\n                buddyProfile.call(this, buddyname);\n                break;\n            case '#admin-banlist':\n                console.log('admin-banlist');\n                banList.call(this);\n                break;\n            case '#admin-add-admin':\n                console.log('admin-add-admin');\n                let adminName = document.querySelector('#admin-username').value.trim();\n                let ip = document.querySelector('#admin-ip').value.trim();\n                listAdmins.call(this);\n                // addAdmin.call(this, adminName, ip);\n            case '#admin-firewall':\n                console.log('admin-firewall');\n                // list firewall rules\n                listRules.call(this);\n            break;\n            default:\n                console.warn('Unknown tabId:', tabId);\n        }\n    });\n\n    // navigate to the first tab\n    this.tabs.navigateToTab('#admin-recent-logins');\n\n    // Event handlers\n    document.querySelector('#ip-search-button').addEventListener('click', () => {\n        const ip = document.querySelector('#ip-input').value.trim();\n        if (ip) {\n            userByIP.call(this, ip);\n        }\n    });\n\n    // add admin button handler\n    document.querySelector('#add-admin-button').addEventListener('click', () => {\n        let buddyname = document.querySelector('#admin-username').value.trim();\n        let ip = document.querySelector('#admin-ip').value.trim();\n        if (!buddyname) {\n            alert('No buddyname provided');\n            return;\n        }\n        if (buddyname) {\n            addAdmin.call(this, buddyname, ip);\n        }\n    });\n\n    // ip-ban-button handler\n    document.querySelector('#ip-ban-button').addEventListener('click', () => {\n        // TODO: alert confirmation\n        // let confirmed = confirm('Are you sure you want to ban this buddies IP?');\n        let confirmed = true;\n        if (!confirmed) {\n            return;\n        }\n        let buddyname = document.querySelector('#profile-input').value.trim();\n        let banType = document.querySelector('#ban-type').value;\n        let banLength = document.querySelector('#ban-length').value; // in minutes\n        buddyname = buddyname;\n        if (!buddyname) {\n            alert('No buddyname provided');\n            return;\n        }\n        if (buddyname) {\n            banBuddy.call(this, buddyname, banType, banLength);\n        }\n    });\n\n    document.querySelector('#profile-search-button').addEventListener('click', () => {\n        const username = document.querySelector('#profile-input').value.trim();\n        if (username) {\n            buddyProfile.call(this, username);\n        }\n    });\n\n    // Handle username clicks in recent logins table\n    document.querySelector('#recent-logins-table').addEventListener('click', (e) => {\n        const usernameLink = e.target.closest('.admin-username-link');\n        if (usernameLink) {\n            const username = usernameLink.dataset.username;\n            document.querySelector('#profile-input').value = username;\n            this.tabs.navigateToTab('#admin-buddyProfile');\n            buddyProfile.call(this, username);\n        }\n    });\n\n    // Handle username clicks in user-by-IP table\n    document.querySelector('#user-by-ip-table').addEventListener('click', (e) => {\n        const usernameLink = e.target.closest('.admin-username-link');\n        if (usernameLink) {\n            const username = usernameLink.dataset.username;\n            document.querySelector('#profile-input').value = username;\n            this.tabs.navigateToTab('#admin-buddyProfile');\n            buddyProfile.call(this, username);\n        }\n    });\n\n      // Handle username clicks in user-by-IP table\n      document.querySelector('#admin-banlist').addEventListener('click', (e) => {\n        const usernameLink = e.target.closest('.admin-username-link');\n        if (usernameLink) {\n            const username = usernameLink.dataset.username;\n            document.querySelector('#profile-input').value = username;\n            this.tabs.navigateToTab('#admin-buddyProfile');\n            buddyProfile.call(this, username);\n        }\n    });\n\n\n    // Handle unban button clicks\n    document.querySelector('#admin-banlist').addEventListener('click', (e) => {\n        const unbanButton = e.target.closest('.admin-remove-ban-link');\n        if (unbanButton) {\n            console.log('unbanButtonunbanButtonunbanButtonunbanButton', unbanButton);\n            const buddyname = unbanButton.dataset.username;\n            const curseType = unbanButton.dataset.curse;\n            unbanBuddy.call(this, buddyname, curseType);\n        }\n    });\n\n    // delete-buddy-button\n    document.querySelector('#delete-buddy-button').addEventListener('click', () => {\n        let confirmed = confirm('Are you sure you want to delete this buddy?');\n        if (!confirmed) {\n            return;\n        }\n\n        let buddyname = document.querySelector('#profile-input').value.trim();\n        if (!buddyname) {\n            alert('No buddyname provided');\n            return;\n        }\n        if (buddyname) {\n            // this.bp.apps.buddylist.removeBuddy(buddyname);\n            destroyBuddy.call(this, buddyname);\n        }\n    });\n\n    // reset-buddy-password-button\n    document.querySelector('#reset-buddy-password-button').addEventListener('click', () => {\n        let confirmed = confirm('Are you sure you want to reset this buddy\\'s password?');\n        if (!confirmed) {\n            return;\n        }\n\n        let newPassword = prompt('Enter new password for buddy:', '');\n        if (!newPassword) {\n            newPassword = buddyname; // use buddyname as default if no password provided\n        }\n\n        let buddyname = document.querySelector('#profile-input').value.trim();\n        if (!buddyname) {\n            alert('No buddyname provided');\n            return;\n        }\n        console.log('Resetting password for buddy:', buddyname, 'to new password:', newPassword);\n        if (buddyname) {\n            // this.bp.apps.buddylist.resetPassword(buddyname);\n            // this.bp.apps.buddyscript.executeCommand('reset-password', { buddyname });\n            resetPassword.call(this, buddyname, newPassword);\n        }\n    });\n\n    // #login-as-user-button\n    // #super-admin-token\n    // if click on login-as-user-button, make fetch request to '/api/v6/auth' setting x-admin-token from input\n    $('#login-as-user-button').on('click', async () => {\n        let token = $('#super-admin-token').val().trim();\n        let buddyname = $('#profile-input').val().trim();\n        if (!token) {\n            alert('No token provided');\n            return;\n        }\n        console.log('Logging in as user with token:', buddyname, token);\n        try { \n            let response = await fetch(buddypond.endpoint + '/auth', {\n                method: 'POST',\n                body: JSON.stringify({ buddyname }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-admin-token': token\n                }\n            });\n            let data = await response.json();\n            if (data.success) {\n                alert('Logged in as user successfully');\n                // set the qtoken to localStorage\n\n                localStorage.setItem('qtokenid', data.qtokenid);\n                localStorage.setItem('me', buddyname);\n\n                // Optionally, you can redirect or refresh the page\n                window.location.reload();\n            } else {\n                alert('Failed to log in as user: ' + data.message);\n            }\n        } catch (error) {\n            console.error('Error logging in as user:', error);\n            alert('Error logging in as user: ' + error.message);\n        }\n    });\n\n    $('#firewall-rule-form').on('submit', async (e) => {\n        e.preventDefault();\n        let ruleAction = $('#firewall-rule-action').val();\n        let ruleIP = $('#firewall-rule-ip').val().trim();\n        console.log('Adding firewall rule:', ruleAction, ruleIP);\n\n        if (!ruleIP) {\n            alert('No IP address provided');\n            return;\n        }\n\n        // TODO: swap action to delete if ruleAction is not add\n        await addRule.call(this, ruleIP);\n\n    });\n        \n}"],"names":["async","recentLogins","username","ip","time","this","client","apiRequest","tbody","document","querySelector","innerHTML","forEach","login","row","createElement","knownIps","_knownIps","JSON","parse","e","console","error","buddyname","lastKnownIP","utime","appendChild","userByIp","log","userByIpData","user","buddyProfile","buddyProfiles","databaseProfile","database","durableObjectProfile","durableObject","curses","databaseProfileDisplay","textContent","stringify","durableObjectProfileDisplay","cursesDisplay","length","banList","ban","currentCurses","curseButtons","map","curse","curseType","type","Date","toLocaleString","join","banBuddy","banType","duration","banResponse","reason","$","html","bankResponse","message","tabs","showTab","unbanUserbanBuddy","unbanResponse","destroyBuddy","removeResponse","resetPassword","newPassword","resetResponse","addAdmin","addAdminResponse","listAdmins","listAdminsResponse","admin","append","role","ctime","listRules","rules","rulesTable","header","insertRow","text","th","rule","index","ipMatch","filter","expression","match","ipAddress","insertCell","created_on","actionCell","deleteButton","className","addEventListener","confirm","id","call","cell","colSpan","addRule","endpoint","buddypond","adminEndpoint","uri","method","data","options","headers","Accept","me","qtokenid","body","url","response","fetch","ok","Error","status","json","Admin","constructor","bp","icon","init","load","open","adminWindow","apps","ui","windowManager","createWindow","title","x","y","width","height","minWidth","minHeight","parent","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","loggedIn","context","render","eventBind","resetAllPondCounts","messagesApiEndpoint","Authorization","then","catch","prototype","content","Tabs","onTab","tabId","value","userByIP","trim","warn","navigateToTab","alert","banLength","usernameLink","target","closest","dataset","unbanButton","unbanBuddy","prompt","on","token","val","success","localStorage","setItem","window","location","reload","preventDefault","ruleAction","ruleIP"],"mappings":"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"}