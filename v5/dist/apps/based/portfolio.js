const e={};class t{constructor(t){this.resourceName=t,e[this.resourceName]={},this.memoryStore=e}create(t,o,r){Object.keys(r).forEach((t=>{if(r[t].required&&(void 0===o[t]||null===o[t]))throw new Error(`${t} is required`);if(r[t].unique){if(Object.values(e[this.resourceName]).some((e=>e[t]===o[t])))throw new Error(`${t} must be unique`)}if(r[t].type&&typeof o[t]!==r[t].type)throw new Error(`${t} must be of type ${r[t].type} value is ${o[t]}`)}));const s=Math.random().toString(36).substring(2,10),i={id:s,owner:t};return Object.keys(r).forEach((e=>{i[e]=o[e]||null})),e[this.resourceName][s]=i,i}get(t,o){const r=e[this.resourceName][o];return r&&r.owner===t?r:null}update(t,o,r,s){const i=e[this.resourceName][o];if(!i||i.owner!==t)throw new Error(`${this.resourceName} not found or unauthorized`);return Object.keys(s).forEach((e=>{if(s[e].required&&(void 0===r[e]||null===r[e]))throw new Error(`${e} is required`)})),Object.keys(s).forEach((e=>{void 0!==r[e]&&(i[e]=r[e])})),i}remove(t,o){const r=e[this.resourceName][o];if(!r||r.owner!==t)throw new Error(`${this.resourceName} not found or unauthorized`);return delete e[this.resourceName][o],{success:!0}}search(t,o){return Object.values(e[this.resourceName]).filter((e=>e.owner===t&&Object.keys(o).every((t=>e[t]===o[t]))))}list(t){return Object.values(e[this.resourceName]).filter((e=>e.owner===t))}all(){return Object.values(e[this.resourceName])}}class o{constructor(e,t={}){this.resourceName=e,this.apiEndpoint=t.apiEndpoint,t.bp&&(this.bp=t.bp)}async apiRequest(e,t,o=null,r=null){const s={method:e,headers:{"Content-Type":"application/json"}};o&&(s.body=JSON.stringify(o)),this.bp.qtokenid&&(s.headers.Authorization=`Bearer ${this.bp.qtokenid}`),s.headers["X-Me"]=this.bp.me;let i=`${this.apiEndpoint}/${t}`;if(r){i+=`?${new URLSearchParams(r).toString()}`}const n=await fetch(i,s);if(!n.ok){console.log("API request failed:",n);try{let e=await n.json();throw console.log("API request failed:",e),new Error(`${e.error}`)}catch(e){throw console.log("error",e),new Error(e)}throw new Error(`API request failed: ${json.error}`)}return n.json()}async create(e,t){return console.log("calling create",`${this.resourceName}`,t),this.apiRequest("POST",`${this.resourceName}`,t)}async get(e,t){return this.apiRequest("GET",`${this.resourceName}/${e}/${t}`)}async update(e,t){return console.log(`calling update ${this.resourceName}/${e}`,t),this.apiRequest("PUT",`${this.resourceName}/${e}`,t)}async remove(e){return this.apiRequest("DELETE",`${this.resourceName}/${e}`)}async list(){return console.log("calling list",`${this.resourceName}`),this.apiRequest("GET",`${this.resourceName}`)}async all(){return this.apiRequest("GET",this.resourceName)}async search(e,t,o={}){return this.apiRequest("POST",`${this.resourceName}/search`,t,o)}}class r{constructor(e){this.resourceName=e,this.dbName="BuddyPondResourceDB",this.version=1,this.db=null,this.init()}async init(){return new Promise(((e,t)=>{const o=indexedDB.open(this.dbName,this.version);o.onupgradeneeded=e=>{let t=e.target.result;t.objectStoreNames.contains(this.resourceName)||t.createObjectStore(this.resourceName,{keyPath:"id"})},o.onsuccess=t=>{this.db=t.target.result,e()},o.onerror=e=>{t(`IndexedDB Error: ${e.target.errorCode}`)}}))}async _withStore(e,t){return this.db||await this.init(),new Promise(((o,r)=>{const s=this.db.transaction(this.resourceName,e).objectStore(this.resourceName),i=t(s);i.onsuccess=()=>o(i.result),i.onerror=()=>r(i.error)}))}async create(e,t,o){const r={id:Math.random().toString(36).substring(2,10),owner:e};return Object.keys(o).forEach((e=>{r[e]=t[e]||null})),await this._withStore("readwrite",(e=>e.add(r))),r}async get(e,t){const o=await this._withStore("readonly",(e=>e.get(t)));return o&&o.owner===e?o:null}async update(e,t,o,r){const s=await this.get(e,t);if(!s)throw new Error(`${this.resourceName} not found or unauthorized`);return Object.keys(r).forEach((e=>{void 0!==o[e]&&(s[e]=o[e])})),await this._withStore("readwrite",(e=>e.put(s))),s}async remove(e,t){if(!await this.get(e,t))throw new Error(`${this.resourceName} not found or unauthorized`);return await this._withStore("readwrite",(e=>e.delete(t))),{success:!0}}async list(e){return new Promise(((t,o)=>{this._withStore("readonly",(r=>{const s=r.getAll();s.onsuccess=()=>{t(s.result.filter((t=>t.owner===e)))},s.onerror=()=>o(s.error)}))}))}async all(){return new Promise(((e,t)=>{this._withStore("readonly",(o=>{const r=o.getAll();r.onsuccess=()=>e(r.result),r.onerror=()=>t(r.error)}))}))}}const s={};class i{constructor(e,t){if(this.name=e,this.schema=t.schema||{},this.providerType=t.provider||"memory",0===Object.keys(this.schema).length)throw new Error(`Schema definition is required for resource: ${e}`);s[this.name]=this.schema,this.provider=this._createProvider(this.providerType,t),this.provider.bp=t.bp}_createProvider(e,s){switch(e){case"rest":return new o(this.name,s);case"indexeddb":return new r(this.name,s);default:return new t(this.name)}}create(e,t){return this.provider.create(e,t,this.schema)}get(e,t){return this.provider.get(e,t)}update(e,t,o){return this.provider.update(e,t,o,this.schema)}remove(e,t){return this.provider.remove(e,t)}list(e){return this.provider.list(e)}search(e,t,o){return this.provider.search(e,t,o)}all(){return this.provider.all()}async apiRequest(e,t,o=null){return this.provider.apiRequest(e,t,o)}}let n=class{constructor(e={}){this.resource=e.resource,this.me=e.me||"Guest"}async get(){let e=await this.resource.list(this.me);return console.log("Portfoliorrrr",e),e}async search(e={}){console.log("portfolio search",this.me,e);let t=await this.resource.search(this.me,e);return console.log("search result",t),t.results}};n.prototype.transfer=async function(e,t){console.log("transfer asset",t);try{let e=await this.resource.apiRequest("POST",`portfolio/${t.from}/${t.symbol}/transfer`,t);return console.log("transfering coins",t,e),$(".coin-error").text(""),$("#coin-send-name").trigger("change"),$(".coin-send-message").html(`Sent ${t.amount} ${t.symbol} to ${t.to}!`),e}catch(e){console.error("Error sending coin:",e),$(".coin-error").text(e.message)}};class a{constructor(e={}){this.resource=e.resource,this.me=e.me||"Guest"}async get(){let e=await this.resource.list(this.me);return console.log("Portfoliorrrr",e),e}async search(e,t={},o={}){console.log("transactions search",e,t,o);let r=await this.resource.search(e,t,o);return console.log("search result",r),r}}function c(e){const t=$(".portfolio-entries",e);t.empty();const{assets:o,coins:r}=this.portfolioData;for(const e in o){const s=o[e];t.append(l(s,r[e]))}}function l(e,t={}){const o=p((e.price||0)*e.amount),r=p(e.price),s=e.amount.toLocaleString("en-US"),i=e.available.toLocaleString("en-US"),n=e.cost.toLocaleString("en-US",{style:"currency",currency:"USD"});return $(`\n        <tr data-symbol="${e.symbol}">\n            <td>${e.symbol}</td>\n            <td>${s}</td>\n            <td>${i}</td>\n            <td>${r}</td>\n            <td>${o}</td>\n            <td>${n}</td>\n        </tr>\n    `)}function h(e){const t=$("#coin-send-name",e);t.empty();const{coins:o,assets:r}=this.portfolioData;for(const e in r){if(console.log("Rendering coin selector for symbol:",o,e),!o[e])continue;const r=o[e],s=e===this.context?"selected":"";t.append(`<option value="${e}" ${s}>${e} - ${r.name}</option>`)}}function u(e){const{assets:t,initialInvestment:o}=this.portfolioData;let r=0;for(const e in t){const o=t[e];r+=(o.price||0)*o.amount}const s=r-o;$(".total-value",e).html(r.toLocaleString("en-US",{style:"currency",currency:"USD"})),$(".profit-loss",e).html(s.toLocaleString("en-US",{style:"currency",currency:"USD"}))}function p(e){const t=parseFloat(e);return isNaN(t)?"$0.00":"$"+t.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:8}).replace(/\.?0+$/,"")}async function d(e=1,t=8){try{$(".loading-transactions").show(),$(".transaction-entries").empty();const{results:o,pagination:r}=await this.transaction.search(this.bp.me,{sender:this.bp.me,receiver:this.bp.me},{page:e,limit:t});o.forEach((e=>{const t=$(`\n                <tr>\n                    <td>${e.sender}</td>\n                    <td>${e.receiver}</td>\n                    <td>${e.symbol}</td>\n                    <td>${e.amount}</td>\n                    <td>${p(e.value)}</td>\n                    <td>${DateFormat.format.date(e.timestamp,"E MMMM dd, hh:mm:ss a")}</td>\n                </tr>\n            `);$(".transaction-entries").append(t)})),$(".page-info").text(`Page ${r.page} of ${r.totalPages}`),$(".prev-page").prop("disabled",r.page<=1),$(".next-page").prop("disabled",r.page>=r.totalPages),$(".pagination-controls").data("current-page",r.page)}catch(e){console.error("Error fetching transactions:",e),$(".coin-error").text("Failed to load transactions")}finally{$(".loading-transactions").hide()}}class m{constructor(e,t={}){return this.bp=e,this}async init(){this.html=await this.bp.load("/v5/apps/based/portfolio/portfolio.html"),this.css=await this.bp.load("/v5/apps/based/portfolio/portfolio.css"),this.resource=new i("portfolio",{provider:"rest",apiEndpoint:buddypond.portfolioEndpoint||"/",schema:{symbol:{type:"string"},owner:{type:"string"},amount:{type:"number"},price:{type:"number"},cost:{type:"number"}},bp:this.bp}),this.coinResource=new i("coin",{provider:"rest",apiEndpoint:buddypond.coinEndpoint||"/",schema:{name:{type:"string",required:!0},symbol:{type:"string",unique:!0,required:!0},owner:{type:"string",required:!0},supply:{type:"number",required:!0}},bp:this.bp}),this.transactionResource=new i("transactions",{provider:"rest",apiEndpoint:buddypond.portfolioEndpoint||"/",schema:{id:{type:"string",key:!0},sender:{type:"string"},receiver:{type:"string"},symbol:{type:"string"},amount:{type:"number"},price:{type:"number"},value:{type:"number"},timestamp:{type:"string"}},bp:this.bp}),this.portfolio=new n({resource:this.resource,me:this.bp.me}),this.transaction=new a({resource:this.transactionResource,me:this.bp.me})}async close(){this.portfolioWindow=null}async open(e={}){this.portfolioWindow||(this.portfolioWindow=this.bp.apps.ui.windowManager.createWindow({id:"portfolio",title:"Portfolio",icon:"desktop/assets/images/icons/icon_portfolio_64.png",x:250,y:75,width:800,height:600,minWidth:200,minHeight:200,className:"portfolio-window-content",parent:$("#desktop")[0],resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,onClose:()=>{this.close()}}),this.portfolioWindow.refreshTimer=setInterval((()=>{}),2e3)),this.render(this.portfolioWindow.content),"buddy"===e.type&&$("#coin-send-to").val(e.output),this.eventBind(this.portfolioWindow.content),console.log("focus the portfolioWindow"),this.portfolioWindow.focus(),this.bp.on("auth::qtoken","render-portfolio",(async e=>{await this.render(this.portfolioWindow.content),await this.eventBind(this.portfolioWindow.content),$(".loggedOut",this.portfolioWindow.content).flexHide(),$(".loggedIn",this.portfolioWindow.content).flexShow()})),e.context&&"default"!==e.context&&this.tabs.showTab(e.context)}}m.prototype.render=async function(e){if($(e).html(this.html),"Marak"!==this.bp.me&&($("#portfolio-admin",e).remove(),$("#portfolio-admin-button",e).remove()),!this.bp.me||"Guest"===this.bp.me)return $(".loggedOut",this.portfolioWindow.content).flexShow(),void $(".loggedIn",this.portfolioWindow.content).flexHide();$(".loggedOut",this.portfolioWindow.content).flexHide(),$(".loggedIn",this.portfolioWindow.content).flexShow(),$(".loading-portfolio",this.portfolioWindow.content).show(),$(".loading-transactions",this.portfolioWindow.content).show();const[t,o]=await Promise.all([this.coinResource.list(),this.resource.search(this.bp.me,{owner:this.bp.me})]),r=Object.fromEntries(t.results.map((e=>[e.symbol,e])));this.portfolioData={coins:r,assets:Object.fromEntries(o.results.map((e=>[e.symbol,e]))),initialInvestment:0},c.call(this,e),h.call(this,e),u.call(this,e),await d.call(this,1,8),$(".prev-page",this.portfolioWindow.content).on("click",(()=>{const e=$(".pagination-controls").data("current-page");e>1&&d.call(this,e-1)})),$(".next-page",this.portfolioWindow.content).on("click",(()=>{const e=$(".pagination-controls").data("current-page");d.call(this,e+1)})),$(".loading-portfolio",this.portfolioWindow.content).hide(),$(".loading-transactions",this.portfolioWindow.content).hide(),$("#coin-send-name",e).trigger("change")},m.prototype.eventBind=function(e){this.tabs=new this.bp.apps.ui.Tabs(".tabs-container",e),this.tabs.onTab((e=>{$(".coin-error").text("")})),$(".send-coin",e).click((async()=>{let t=$("#coin-send-to").val(),o=$("#coin-send-name").val(),r=$("#coin-send-amount").val();console.log(`${t} ${o} ${r}`),this.portfolio.transfer(e,{from:bp.me,to:t,symbol:o,amount:r})})),$("#coin-send-name",e).change((async()=>{let t=$("#coin-send-name").val(),o=$("#current-balance",e);console.log("currentCoin",t),console.log("coinBalance",o);const r=await this.resource.search(this.bp.me,{owner:this.bp.me,symbol:t});console.log("current result",r);let s=r.results[0];console.log("asset",s);let i=s.amount;o.html(`${i.toLocaleString("en-US")}`)})),$(".user-portfolio",e).on("click",(async()=>{await this.render(e),await this.eventBind(e),$("#user-portfolio").show()})),$(".trade-assets",e).on("click",(()=>{this.bp.open("orderbook")})),$(".mint-coins",e).on("click",(()=>{this.bp.open("coin",{type:"coin-mint"})})),$(".send-coins",e).on("click",(()=>{this.tabs.navigateToTab("#portfolio-transfer")})),$(".admin",e).on("click",(()=>{this.tabs.navigateToTab("#portfolio-admin")})),$(".user-transactions",e).on("click",(()=>{this.tabs.navigateToTab("#user-transactions")})),$("#portfolio-admin-button-submit",e).on("click",(async()=>{let e=$("#portfolio-admin-user").val(),t=$("#portfolio-admin-coin").val();if(e&&t){try{let o=`portfolio/${e}/${t}`;console.log("admin url",o,this.resource.apiRequest);let r=await this.resource.apiRequest("DELETE",o);console.log("res",r)}catch(e){console.log(e)}try{let t=`transactions/reset/${e}`;console.log("resetTransactionsUrl url",t,this.resource.apiRequest);let o=await this.resource.apiRequest("GET",t);console.log("resetTransactionsRes",o)}catch(e){console.log(e)}}}))},m.prototype.updateCoinRow=function(e,t){this.portfolioData.assets[e]=t;const o=l(t,this.portfolioData.coins[e]),r=$(`.portfolio-entries tr[data-symbol="${e}"]`);r.length?r.replaceWith(o):$(".portfolio-entries").append(o),u.call(this,this.portfolioWindow.content)};export{m as default};
//# sourceMappingURL=portfolio.js.map
