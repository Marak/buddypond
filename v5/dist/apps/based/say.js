class e{constructor(e,s={}){this.bp=e,this.settings={audioEnabled:s.audioEnabled||!0,ttsEnabled:s.ttsEnabled||!0,ttsVoiceIndex:s.ttsVoiceIndex||0,language:s.language||"en-US"},this.voices=[]}init(){"speechSynthesis"in window?(this.available=!0,this.loadVoices(),void 0!==speechSynthesis.onvoiceschanged&&(speechSynthesis.onvoiceschanged=this.loadVoices.bind(this))):(this.available=!1,console.log("Speech Synthesis not supported in this browser.")),this.bp.say=this.speak.bind(this),this.bp.on("say::message","speak-message-text",(e=>{this.speak(e.text)}))}loadVoices(){this.voices=speechSynthesis.getVoices()}speak(e){if(!this.available||!this.settings.audioEnabled||!this.settings.ttsEnabled)return void console.log("Warning: TTS Engine not available or disabled.");if(!this.bp.settings.audio_enabled)return void console.log("Audio is disabled in settings.");const s=new SpeechSynthesisUtterance(e);s.voice=this.voices[this.settings.ttsVoiceIndex]||this.voices[0],s.lang=this.settings.language,window.speechSynthesis.speak(s)}setVoice(e){e<0||e>=this.voices.length?console.log("Invalid voice index."):this.settings.ttsVoiceIndex=e}setLanguage(e){this.settings.language=e}enableTTS(e=!0){this.settings.ttsEnabled=e}enableAudio(e=!0){this.settings.audioEnabled=e}processMessages(e){const s=new Date,t=new Date(e.ctime);if(!((s.getTime()-t.getTime())/1e3>10)&&e.text.startsWith("/say")){let s=bp.get("processedCards")||[];console.log("say message.uuid",e.uuid),console.log("processedCards",s),s.includes(e.uuid)&&console.log("Message already processed for TTS."),s.push(e.uuid),s.length>1e3&&(s=s.slice(-1e3)),bp.set("processedCards",s);const t=e.text.split(" ");t.shift();const i=t.join(" ");if(e.card&&void 0!==e.card.voiceIndex){const s=this.settings.ttsVoiceIndex;this.setVoice(e.card.voiceIndex),this.speak(i||"I have nothing to say"),this.setVoice(s)}else this.speak(i||"I have nothing to say")}}}export{e as default};
//# sourceMappingURL=say.js.map
