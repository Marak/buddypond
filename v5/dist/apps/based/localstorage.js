class t{constructor(t,e={}){this.bp=t,this.prefix=e.prefix||"_buddypond_desktop_",this.settings={},this.state={}}async init(){desktop.removeItem=t=>{this.removeItem(t)},bp.on("settings","update-local-storage-settings",((t,e)=>{this.set(t,e)})),this.bp.settings=this.settings,this.sync()}set(t,e){"object"==typeof t?Object.entries(t).forEach((([t,e])=>{this.updateLocalStorage(t,e)})):this.updateLocalStorage(t,e),this.bp.emit("desktop.settings",this.settings)}get(t){try{const e=localStorage.getItem(this.prefix+t);return JSON.parse(e)}catch(t){return alert("Error parsing local storage JSON."),null}}removeItem(t){localStorage.removeItem(this.prefix+t),delete this.settings[t],this.bp.emit(`desktop.settings.${t}`,void 0)}sync(){Object.keys(localStorage).forEach((t=>{if(t.startsWith(this.prefix)){const e=t.slice(this.prefix.length);try{this.settings[e]=JSON.parse(localStorage.getItem(t))}catch(s){this.settings[e]=localStorage.getItem(t)}}}))}updateLocalStorage(t,e){const s=this.settings[t];this.settings[t]=e,localStorage.setItem(this.prefix+t,JSON.stringify(e)),this.state[t]=e,s!==e&&this.bp.emit(`desktop.settings.${t}`,e)}load(t){this.sync(),"function"==typeof t&&t()}}export{t as default};
//# sourceMappingURL=localstorage.js.map
