(function(e,i){typeof exports=="object"&&typeof module<"u"?module.exports=i():typeof define=="function"&&define.amd?define(i):(e=typeof globalThis<"u"?globalThis:e||self,e.BP=i())})(this,function(){"use strict";const e={};return window.bp=e,e.log=console.log,e.log=function(){},e.error=console.error,e.config={host:""},e.apps={},e.data={},e._modules={},e._cache={},e._cache.css={},e._cache.html={},e._cache.js={},e.setConfig=function(t,o=!1){console.log("setConfig",t,o),o?e.config={...e.config,...t}:e.config=t},e.start=async function(t=[]){for(let o of t)await e.importModule(o)},e.open=async function(t,o={context:"default"}){let n=t;typeof t=="string"&&await e.importModule(n,{},!0),typeof t=="object"&&(n=t.name,o=t,await e.importModule(n,o,!0)),typeof e.apps[n].open=="function"&&e.apps[n].open(o)},e.load=async function(t,o={}){if(typeof t=="string"){if(t.endsWith(".css"))return e.appendCSS(t);if(t.endsWith(".html"))return e.fetchHTMLFragment(t);if(t.endsWith(".js"))return e.appendScript(t);if(t.endsWith(".json"))return e.fetchJSON(t);if(!t.includes("."))return e.importModule(t,o)}console.log("Cannot load unknown resource type",t)},e.importModule=async function(t,o,n=!0){let r=e.config.host+`/v5/apps/based/${t}/${t}.js`,c=t;if(typeof t=="object"&&(r=e.config.host+`/v5/apps/based/${t.name}/${t.name}.js`,o=t,c=t.name),n||(r=t),e._modules[r])return e._modules[r];try{let f=await import(r);return n&&(e.apps[c]=new f.default(e,o),await e.apps[c].init(),e.log("init complete",c)),e._modules[r]=f,f}catch(f){e.error("Failed to load module:",c,f),delete e.apps[c]}},e.fetchHTMLFragment=async function(t){let o=`${e.config.host}${t}`;return e._cache.html[o]||(e._cache.html[o]=await fetch(o).then(n=>n.text())),e._cache.html[o]},e.fetchJSON=async function(t){return fetch(t).then(o=>o.json())},e.appendCSS=function(t,o=!1){let n=t;if(!t.includes("http")&&!t.includes("blob")&&(n=`${e.config.host}${t}`),e._cache.css[n]&&!o)return"cached";e._cache.css[n]=new Date().getTime();let r=document.createElement("link");r.rel="stylesheet",r.href=n,document.head.appendChild(r)},e.appendScript=async function(t){let o=t;!t.includes("http")&&!t.includes("blob")&&(o=`${e.config.host}${t}`);let n=document.createElement("script");return n.src=o,document.head.appendChild(n),new Promise((r,c)=>{n.onload=r,n.onerror=c})},e.createWorker=async function(t,o={}){let n=`${e.config.host}/v2${t}`;e.log("createWorker",n);try{const c=await(await fetch(n)).blob(),f=URL.createObjectURL(c);let s=o||{};const l=new Worker(f,s);return e.log("Local Worker created from:",t),l}catch(r){return console.error("Failed to load worker script:",t,r),null}},e._emitters={},e.emit=function(t,...o){e.log("emit",t,...o),e._emitters[t]&&e._emitters[t].forEach(n=>{n.callback&&n.callback(...o)})},e.on=function(t,o,n){if(!t||!o||!n)throw new Error("Missing required parameters for on()");e._emitters[t]||(e._emitters[t]=[]),e._emitters[t].push({label:o,callback:n}),e.log("on",t,o)},e.off=function(t,o){e.log("off",t,o),e._emitters[t]&&(e._emitters[t]=e._emitters[t].filter(n=>n.label!==o))},e.me="Guest",e});
